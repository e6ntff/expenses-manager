{"version":3,"file":"static/js/324.5e585e8a.chunk.js","mappings":"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","sources":["components/DeletedCategories.tsx","components/DeletedItems.tsx","components/TrashPanel.tsx","pages/Trash.tsx"],"sourcesContent":["import { Col, Empty, List } from 'antd';\r\nimport Item from 'antd/es/list/Item';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useMemo, useState } from 'react';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport {\r\n\tDeleteOutlined,\r\n\tExportOutlined,\r\n\tInfoCircleOutlined,\r\n\tUndoOutlined,\r\n} from '@ant-design/icons';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { MyCheckbox, MyIconWithTooltip, MyTitle } from './Items';\r\nimport { CheckboxChangeEvent } from 'antd/es/checkbox';\r\nimport { ItemWithSearch } from 'settings/interfaces';\r\nimport { search } from 'utils/utils';\r\nimport dayjs from 'dayjs';\r\nimport CategoryItem from './CategoryItem';\r\n\r\ninterface Props {\r\n\tquery: string;\r\n}\r\n\r\nconst DeletedCategories: React.FC<Props> = observer(({ query }) => {\r\n\tconst { restoreCategory, deleteCategory, categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { userOptions } = optionsStore;\r\n\r\n\tconst { language } = userOptions;\r\n\r\n\tconst [selectedItemIds, setSelectedItemIds] = useState<string[]>([]);\r\n\r\n\tconst deletedCategoryIds: ItemWithSearch[] = useMemo(() => {\r\n\t\treturn Object.keys(categories).reduce(\r\n\t\t\t(acc: ItemWithSearch[], key: string) => {\r\n\t\t\t\tif (categories[key].deleted === true) {\r\n\t\t\t\t\tconst overlaps = search(query, categories[key].name);\r\n\t\t\t\t\tif (overlaps?.length !== 0) {\r\n\t\t\t\t\t\treturn [...acc, { id: key, overlaps: overlaps }];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn acc;\r\n\t\t\t},\r\n\t\t\t[]\r\n\t\t);\r\n\t}, [categories, query]);\r\n\r\n\tconst deleteSelectedItems = useCallback(() => {\r\n\t\tsetSelectedItemIds((prevSelected: string[]) => {\r\n\t\t\tprevSelected.forEach((key: string) => {\r\n\t\t\t\tdeleteCategory(key);\r\n\t\t\t});\r\n\t\t\treturn [];\r\n\t\t});\r\n\t}, [deleteCategory]);\r\n\r\n\tconst restoreSelectedItems = useCallback(() => {\r\n\t\tsetSelectedItemIds((prevSelected: string[]) => {\r\n\t\t\tprevSelected.forEach((key: string) => {\r\n\t\t\t\trestoreCategory(key);\r\n\t\t\t});\r\n\t\t\treturn [];\r\n\t\t});\r\n\t}, [restoreCategory]);\r\n\r\n\tconst handleCategorySelection = useCallback(\r\n\t\t(id: string) => (event: CheckboxChangeEvent) => {\r\n\t\t\tconst value = event.target.checked;\r\n\t\t\tvalue\r\n\t\t\t\t? setSelectedItemIds((prevSelected: string[]) => [...prevSelected, id])\r\n\t\t\t\t: setSelectedItemIds((prevSelected: string[]) =>\r\n\t\t\t\t\t\tprevSelected.filter((item: string) => item !== id)\r\n\t\t\t\t  );\r\n\t\t},\r\n\t\t[setSelectedItemIds]\r\n\t);\r\n\r\n\tconst DeleteJSX = (callback: () => void) =>\r\n\t\tMyIconWithTooltip(\r\n\t\t\tlanguages.delete[userOptions.language],\r\n\t\t\tisSmallScreen,\r\n\t\t\tDeleteOutlined,\r\n\t\t\tfalse,\r\n\t\t\tcallback\r\n\t\t);\r\n\r\n\tconst CheckboxJSX = (\r\n\t\tkey: string,\r\n\t\thandler: (key: string) => (event: CheckboxChangeEvent) => void\r\n\t) =>\r\n\t\tMyCheckbox(\r\n\t\t\tselectedItemIds.includes(key),\r\n\t\t\tlanguage,\r\n\t\t\tisSmallScreen,\r\n\t\t\thandler(key),\r\n\t\t\tdeleteSelectedItems,\r\n\t\t\trestoreSelectedItems\r\n\t\t);\r\n\r\n\tif (!deletedCategoryIds.length)\r\n\t\treturn (\r\n\t\t\t<Empty\r\n\t\t\t\tstyle={{ margin: 'auto' }}\r\n\t\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\t\tdescription={''}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<List style={{ inlineSize: '100%' }}>\r\n\t\t\t{deletedCategoryIds.map(({ id, overlaps }: ItemWithSearch) => {\r\n\t\t\t\tconst currentCategory = categories[id];\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Item key={id}>\r\n\t\t\t\t\t\t<Col span={1}>{CheckboxJSX(id, handleCategorySelection)}</Col>\r\n\t\t\t\t\t\t<Col span={16}>\r\n\t\t\t\t\t\t\t{MyTitle(\r\n\t\t\t\t\t\t\t\tcurrentCategory.name,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\t\toverlaps\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\t<CategoryItem\r\n\t\t\t\t\t\t\t\t\tinitialCategoryId={id}\r\n\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t/>,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tExportOutlined,\r\n\t\t\t\t\t\t\t\ttrue\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\t`${languages.deletedAt[language]}: ${dayjs(\r\n\t\t\t\t\t\t\t\t\tcurrentCategory.deletedAt\r\n\t\t\t\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tInfoCircleOutlined,\r\n\t\t\t\t\t\t\t\tfalse\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\tlanguages.restore[language],\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tUndoOutlined,\r\n\t\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\t\t() => restoreCategory(id)\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>{DeleteJSX(() => deleteCategory(id))}</Col>\r\n\t\t\t\t\t</Item>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</List>\r\n\t);\r\n});\r\n\r\nexport default DeletedCategories;\r\n","import { Col, Empty, List } from 'antd';\r\nimport Item from 'antd/es/list/Item';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useMemo, useState } from 'react';\r\nimport languages from 'settings/languages';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport {\r\n\tDeleteOutlined,\r\n\tExportOutlined,\r\n\tInfoCircleOutlined,\r\n\tUndoOutlined,\r\n} from '@ant-design/icons';\r\nimport { MyCheckbox, MyIconWithTooltip, MyTitle } from './Items';\r\nimport { CheckboxChangeEvent } from 'antd/es/checkbox';\r\nimport { ItemWithSearch } from 'settings/interfaces';\r\nimport { search } from 'utils/utils';\r\nimport dayjs from 'dayjs';\r\nimport ListItem from './ListItem';\r\n\r\ninterface Props {\r\n\tquery: string;\r\n}\r\n\r\nconst DeletedItems: React.FC<Props> = observer(({ query }) => {\r\n\tconst { list, restoreItem, deleteItem } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { userOptions } = optionsStore;\r\n\r\n\tconst { language } = userOptions;\r\n\r\n\tconst [selectedItemIds, setSelectedItemIds] = useState<string[]>([]);\r\n\r\n\tconst deletedItemIds: ItemWithSearch[] = useMemo(() => {\r\n\t\treturn Object.keys(list).reduce((acc: ItemWithSearch[], key: string) => {\r\n\t\t\tif (list[key].deleted === true) {\r\n\t\t\t\tconst overlaps = search(query, list[key].title);\r\n\t\t\t\tif (overlaps?.length !== 0) {\r\n\t\t\t\t\treturn [...acc, { id: key, overlaps: overlaps }];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn acc;\r\n\t\t}, []);\r\n\t}, [list, query]);\r\n\r\n\tconst deleteSelectedItems = useCallback(() => {\r\n\t\tsetSelectedItemIds((prevSelected: string[]) => {\r\n\t\t\tprevSelected.forEach((key: string) => {\r\n\t\t\t\tdeleteItem(key);\r\n\t\t\t});\r\n\t\t\treturn [];\r\n\t\t});\r\n\t}, [deleteItem]);\r\n\r\n\tconst restoreSelectedItems = useCallback(() => {\r\n\t\tsetSelectedItemIds((prevSelected: string[]) => {\r\n\t\t\tprevSelected.forEach((key: string) => {\r\n\t\t\t\trestoreItem(key);\r\n\t\t\t});\r\n\t\t\treturn [];\r\n\t\t});\r\n\t}, [restoreItem]);\r\n\r\n\tconst handleItemSelection = useCallback(\r\n\t\t(id: string) => (event: CheckboxChangeEvent) => {\r\n\t\t\tconst value = event.target.checked;\r\n\t\t\tvalue\r\n\t\t\t\t? setSelectedItemIds((prevSelected: string[]) => [...prevSelected, id])\r\n\t\t\t\t: setSelectedItemIds((prevSelected: string[]) =>\r\n\t\t\t\t\t\tprevSelected.filter((item: string) => item !== id)\r\n\t\t\t\t  );\r\n\t\t},\r\n\t\t[setSelectedItemIds]\r\n\t);\r\n\r\n\tconst DeleteJSX = (callback: () => void) =>\r\n\t\tMyIconWithTooltip(\r\n\t\t\tlanguages.delete[userOptions.language],\r\n\t\t\tisSmallScreen,\r\n\t\t\tDeleteOutlined,\r\n\t\t\tfalse,\r\n\t\t\tcallback\r\n\t\t);\r\n\r\n\tconst CheckboxJSX = (\r\n\t\tkey: string,\r\n\t\thandler: (key: string) => (event: CheckboxChangeEvent) => void\r\n\t) =>\r\n\t\tMyCheckbox(\r\n\t\t\tselectedItemIds.includes(key),\r\n\t\t\tlanguage,\r\n\t\t\tisSmallScreen,\r\n\t\t\thandler(key),\r\n\t\t\tdeleteSelectedItems,\r\n\t\t\trestoreSelectedItems\r\n\t\t);\r\n\r\n\tif (!deletedItemIds.length)\r\n\t\treturn (\r\n\t\t\t<Empty\r\n\t\t\t\tstyle={{ margin: 'auto' }}\r\n\t\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\t\tdescription={''}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<List style={{ inlineSize: '100%' }}>\r\n\t\t\t{deletedItemIds.map(({ id, overlaps }: ItemWithSearch) => {\r\n\t\t\t\tconst currentItem = list[id];\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Item key={id}>\r\n\t\t\t\t\t\t<Col span={1}>{CheckboxJSX(id, handleItemSelection)}</Col>\r\n\t\t\t\t\t\t<Col span={16}>\r\n\t\t\t\t\t\t\t{MyTitle(\r\n\t\t\t\t\t\t\t\tcurrentItem?.title,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\t\toverlaps\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\tinitialItem={{ id, overlaps }}\r\n\t\t\t\t\t\t\t\t\tmode='grid'\r\n\t\t\t\t\t\t\t\t\tselected={selectedItemIds.includes(id)}\r\n\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t/>,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tExportOutlined,\r\n\t\t\t\t\t\t\t\ttrue\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\t`${languages.deletedAt[language]}: ${dayjs(\r\n\t\t\t\t\t\t\t\t\tcurrentItem?.deletedAt\r\n\t\t\t\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tInfoCircleOutlined,\r\n\t\t\t\t\t\t\t\tfalse\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\tlanguages.restore[language],\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tUndoOutlined,\r\n\t\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\t\t() => restoreItem(id)\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>{DeleteJSX(() => deleteItem(id))}</Col>\r\n\t\t\t\t\t</Item>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</List>\r\n\t);\r\n});\r\n\r\nexport default DeletedItems;\r\n","import { DeleteOutlined, UndoOutlined } from '@ant-design/icons';\r\nimport { Button, Flex, Popconfirm, Segmented, Tooltip } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, {\r\n\tChangeEvent,\r\n\tDispatch,\r\n\tSetStateAction,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseState,\r\n} from 'react';\r\nimport languages from 'settings/languages';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport { MySearch } from './Items';\r\n\r\ninterface Props {\r\n\tquery: string;\r\n\tsetQuery: Dispatch<SetStateAction<string>>;\r\n\tdebouncedQuery: string;\r\n\tisExpenses: boolean;\r\n\tsetIsExpenses: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst TrashPanel: React.FC<Props> = observer(\r\n\t({ query, setQuery, debouncedQuery, isExpenses, setIsExpenses }) => {\r\n\t\tconst { deleteItem, restoreItem, list } = listStore;\r\n\t\tconst { categories, deleteCategory, restoreCategory } = categoryStore;\r\n\t\tconst { isSmallScreen, tourRefs } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\r\n\t\tconst { language } = userOptions;\r\n\r\n\t\tconst [isSearchLoading, setIsSearchLoading] = useState<boolean>(false);\r\n\r\n\t\tconst deleteAll = useCallback(() => {\r\n\t\t\tObject.keys(list).forEach((key: string) => {\r\n\t\t\t\tlist[key].deleted && deleteItem(key);\r\n\t\t\t});\r\n\r\n\t\t\tObject.keys(categories).forEach((key: string) => {\r\n\t\t\t\tcategories[key].deleted && deleteCategory(key);\r\n\t\t\t});\r\n\t\t}, [list, categories, deleteCategory, deleteItem]);\r\n\r\n\t\tconst restoreAll = useCallback(() => {\r\n\t\t\tObject.keys(list).forEach((key: string) => {\r\n\t\t\t\tlist[key].deleted && restoreItem(key);\r\n\t\t\t});\r\n\r\n\t\t\tObject.keys(categories).forEach((key: string) => {\r\n\t\t\t\tcategories[key].deleted && restoreCategory(key);\r\n\t\t\t});\r\n\t\t}, [list, categories, restoreCategory, restoreItem]);\r\n\r\n\t\tconst handleSearch = useCallback(\r\n\t\t\t(event: ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tsetQuery(event.target.value);\r\n\t\t\t\tsetIsSearchLoading(true);\r\n\t\t\t},\r\n\t\t\t[setQuery, setIsSearchLoading]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetIsSearchLoading(false);\r\n\t\t}, [debouncedQuery]);\r\n\r\n\t\treturn (\r\n\t\t\t<Flex\r\n\t\t\t\tvertical\r\n\t\t\t\tgap={8}\r\n\t\t\t\talign='end'\r\n\t\t\t>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tgap={16}\r\n\t\t\t\t\tref={tourRefs[5]}\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Tooltip title={languages.deleteAll[language]}>\r\n\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\ttitle={languages.deleteAllConfirm[language]}\r\n\t\t\t\t\t\t\tonConfirm={deleteAll}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Button size={isSmallScreen ? 'small' : 'middle'}>\r\n\t\t\t\t\t\t\t\t<DeleteOutlined\r\n\t\t\t\t\t\t\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t<Tooltip title={languages.restoreAll[language]}>\r\n\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\ttitle={languages.restoreAllConfirm[language]}\r\n\t\t\t\t\t\t\tonConfirm={restoreAll}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Button size={isSmallScreen ? 'small' : 'middle'}>\r\n\t\t\t\t\t\t\t\t<UndoOutlined style={{ scale: isSmallScreen ? '1' : '1.5' }} />\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t<Flex style={{ inlineSize: isSmallScreen ? '100%' : '50%' }}>\r\n\t\t\t\t\t\t{MySearch(handleSearch, query, isSearchLoading, isSmallScreen)}\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t{isSmallScreen && (\r\n\t\t\t\t\t<Segmented\r\n\t\t\t\t\t\tonChange={setIsExpenses}\r\n\t\t\t\t\t\tvalue={isExpenses}\r\n\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlabel: languages.expenses[language],\r\n\t\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlabel: languages.categories[language],\r\n\t\t\t\t\t\t\t\tvalue: false,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Flex>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default TrashPanel;\r\n","import { Flex } from 'antd';\r\nimport DeletedCategories from 'components/DeletedCategories';\r\nimport DeletedList from 'components/DeletedItems';\r\nimport TrashPanel from 'components/TrashPanel';\r\nimport { debounce } from 'lodash';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport constants from 'settings/constants';\r\n\r\nimport { userStore } from 'utils/userStore';\r\n\r\nconst Trash: React.FC = observer(() => {\r\n\tconst { isSmallScreen, tourRefs } = userStore;\r\n\r\n\tconst [query, setQuery] = useState<string>('');\r\n\tconst [debouncedQuery, setDebouncedQuery] = useState<string>('');\r\n\tconst [isExpenses, setIsExpenses] = useState<boolean>(true);\r\n\r\n\tconst debouncedSetQuery = useMemo(\r\n\t\t() =>\r\n\t\t\tdebounce(\r\n\t\t\t\t(query: string) => setDebouncedQuery(query),\r\n\t\t\t\tconstants.optionsDebounceDelay\r\n\t\t\t),\r\n\t\t[]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tdebouncedSetQuery(query);\r\n\t\treturn () => {\r\n\t\t\tdebouncedSetQuery.cancel();\r\n\t\t};\r\n\t}, [query, debouncedSetQuery]);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={isSmallScreen ? 16 : 32}\r\n\t\t>\r\n\t\t\t<TrashPanel\r\n\t\t\t\tquery={query}\r\n\t\t\t\tsetQuery={setQuery}\r\n\t\t\t\tdebouncedQuery={debouncedQuery}\r\n\t\t\t\tisExpenses={isExpenses}\r\n\t\t\t\tsetIsExpenses={setIsExpenses}\r\n\t\t\t/>\r\n\t\t\t<Flex\r\n\t\t\t\tref={tourRefs[4]}\r\n\t\t\t\tgap={isSmallScreen ? 16 : 32}\r\n\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t>\r\n\t\t\t\t{isSmallScreen ? (\r\n\t\t\t\t\tisExpenses ? (\r\n\t\t\t\t\t\t<DeletedList query={debouncedQuery} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<DeletedCategories query={debouncedQuery} />\r\n\t\t\t\t\t)\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Flex\r\n\t\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t\t\tgap={32}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DeletedList query={debouncedQuery} />\r\n\t\t\t\t\t\t<DeletedCategories query={debouncedQuery} />\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t)}\r\n\t\t\t</Flex>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default Trash;\r\n"],"names":["observer","_ref","query","restoreCategory","deleteCategory","categories","categoryStore","isSmallScreen","userStore","userOptions","optionsStore","language","selectedItemIds","setSelectedItemIds","useState","deletedCategoryIds","useMemo","Object","keys","reduce","acc","key","deleted","overlaps","search","name","length","id","deleteSelectedItems","useCallback","prevSelected","forEach","restoreSelectedItems","handleCategorySelection","event","value","target","checked","filter","item","_jsx","List","style","inlineSize","children","map","_ref2","currentCategory","_jsxs","Item","Col","span","handler","MyCheckbox","includes","MyTitle","MyIconWithTooltip","CategoryItem","initialCategoryId","disabled","ExportOutlined","concat","languages","deletedAt","dayjs","format","InfoCircleOutlined","restore","UndoOutlined","callback","delete","DeleteOutlined","Empty","margin","image","PRESENTED_IMAGE_SIMPLE","description","list","restoreItem","deleteItem","listStore","deletedItemIds","title","handleItemSelection","currentItem","ListItem","initialItem","mode","selected","setQuery","debouncedQuery","isExpenses","setIsExpenses","tourRefs","isSearchLoading","setIsSearchLoading","deleteAll","restoreAll","handleSearch","useEffect","Flex","vertical","gap","align","ref","Tooltip","Popconfirm","deleteAllConfirm","onConfirm","Button","size","scale","restoreAllConfirm","MySearch","Segmented","onChange","options","label","expenses","setDebouncedQuery","debouncedSetQuery","debounce","constants","optionsDebounceDelay","cancel","TrashPanel","DeletedList","DeletedCategories"],"sourceRoot":""}