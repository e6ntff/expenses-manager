{"version":3,"file":"static/js/732.d15123db.chunk.js","mappings":"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","sources":["components/Items.tsx","components/ChatList.tsx","components/ChatListHeader.tsx","components/ChatInput.tsx","components/CurrentChatHeader.tsx","components/CurrentChat.tsx","pages/Chats.tsx","components/UserSelect.tsx","components/UserModeSelect.tsx","components/UsersList.tsx","pages/Friends.tsx","pages/Community.tsx"],"sourcesContent":["import { FrownOutlined } from '@ant-design/icons';\r\nimport {\r\n\tAvatar,\r\n\tButton,\r\n\tCheckbox,\r\n\tFlex,\r\n\tImage,\r\n\tSelect,\r\n\tStatistic,\r\n\tTag,\r\n\tTooltip,\r\n\tTypography,\r\n} from 'antd';\r\nimport {\r\n\tChat,\r\n\tListType,\r\n\tcategory,\r\n\tcurrencies,\r\n\tlanguage,\r\n} from 'settings/interfaces';\r\nimport languages from 'settings/languages';\r\nimport dayjs from 'dayjs';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport React, { ComponentType, RefAttributes } from 'react';\r\nimport { CheckboxChangeEvent } from 'antd/es/checkbox';\r\nimport Search from 'antd/es/input/Search';\r\nimport uniqid from 'uniqid';\r\nimport { AntdIconProps } from '@ant-design/icons/lib/components/AntdIcon';\r\nimport { TooltipPlacement, TooltipProps } from 'antd/es/tooltip';\r\n\r\nconst getTitleComponents = (\r\n\ttitle: string,\r\n\ttype: ListType | null,\r\n\tisInOverlaps: boolean,\r\n\tisSmallScreen: boolean,\r\n\teditable: any,\r\n\tindex?: number\r\n): React.ReactNode => {\r\n\treturn title === ' ' ? (\r\n\t\t<>&nbsp;</>\r\n\t) : (\r\n\t\t<Typography.Text\r\n\t\t\ttype={type ? (type === 'expense' ? 'danger' : 'success') : undefined}\r\n\t\t\tstyle={{ fontSize: isSmallScreen ? '1em' : '1.25em' }}\r\n\t\t\tkey={index || 0}\r\n\t\t\teditable={editable}\r\n\t\t\tellipsis\r\n\t\t\tstrong={isInOverlaps}\r\n\t\t>\r\n\t\t\t{title}\r\n\t\t</Typography.Text>\r\n\t);\r\n};\r\n\r\nexport const MyTitle = (\r\n\ttitle: string | undefined,\r\n\ttype: ListType | null,\r\n\tisSmallScreen: boolean,\r\n\tlanguage?: language,\r\n\teditable?: any,\r\n\toverlaps?: number[][]\r\n) => {\r\n\tconst markedTitles: React.ReactNode[] | undefined = overlaps\r\n\t\t? title?.split('').map((char, index) => {\r\n\t\t\t\tconst isInOverlaps = overlaps.some(\r\n\t\t\t\t\t([start, end]) => index >= start && index <= end\r\n\t\t\t\t);\r\n\t\t\t\treturn getTitleComponents(\r\n\t\t\t\t\tchar,\r\n\t\t\t\t\ttype,\r\n\t\t\t\t\tisInOverlaps,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\teditable,\r\n\t\t\t\t\tindex\r\n\t\t\t\t);\r\n\t\t  })\r\n\t\t: [\r\n\t\t\t\tgetTitleComponents(\r\n\t\t\t\t\ttitle || (language && languages.noTitle[language]),\r\n\t\t\t\t\ttype,\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\teditable\r\n\t\t\t\t),\r\n\t\t  ];\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tkey={uniqid()}\r\n\t\t\tstyle={{\r\n\t\t\t\tinlineSize: 'min-content',\r\n\t\t\t\topacity: !title ? '.5' : '1',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{markedTitles}\r\n\t\t</Flex>\r\n\t);\r\n};\r\n\r\nexport const MyImage = (\r\n\timage: string | undefined,\r\n\tisSmallScreen: boolean,\r\n\tlanguage?: language,\r\n\ttoggleOpened?: () => void\r\n) =>\r\n\timage ? (\r\n\t\t<Tooltip\r\n\t\t\tcolor='#0005'\r\n\t\t\tplacement='right'\r\n\t\t\ttitle={\r\n\t\t\t\t!image.startsWith('#') && (\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborderRadius: '50%',\r\n\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Avatar\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\tbackground: image.startsWith('#') ? image : 'unset',\r\n\t\t\t\t}}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\ticon={\r\n\t\t\t\t\t<Flex\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{!image.startsWith('#') && (\r\n\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t) : (\r\n\t\t<Tooltip title={language ? languages.noImage[language] : ''}>\r\n\t\t\t<Avatar\r\n\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\tonClick={toggleOpened}\r\n\t\t\t\ticon={<FrownOutlined />}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n\r\nexport const MyDate = (\r\n\tdate: number,\r\n\tisSmallScreen: boolean,\r\n\textra?: number\r\n) => (\r\n\t<Flex align='center'>\r\n\t\t<Statistic\r\n\t\t\tvalue={dayjs(date).format('DD.MM.YY')}\r\n\t\t\tstyle={{\r\n\t\t\t\tscale: isSmallScreen ? '.67' : '.75',\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t{extra && (\r\n\t\t\t<>\r\n\t\t\t\t<Typography.Text strong>-</Typography.Text>\r\n\t\t\t\t<Statistic\r\n\t\t\t\t\tvalue={dayjs(extra).format('DD.MM.YY')}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tscale: isSmallScreen ? '.67' : '.75',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t)}\r\n\t</Flex>\r\n);\r\n\r\nexport const MyCategory = (category: category) => (\r\n\t<Flex\r\n\t\tvertical\r\n\t\talign='stretch'\r\n\t>\r\n\t\t{category && (\r\n\t\t\t<Tag color={category.color}>\r\n\t\t\t\t<span\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmargin: 'auto',\r\n\t\t\t\t\t\tcolor: category.color,\r\n\t\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{category.name}\r\n\t\t\t\t</span>\r\n\t\t\t</Tag>\r\n\t\t)}\r\n\t</Flex>\r\n);\r\n\r\nexport const MyPrice = (\r\n\tprice: currencies,\r\n\ttype: ListType,\r\n\tisSmallScreen: boolean,\r\n\tcurrency: string,\r\n\textra?: currencies\r\n) => (\r\n\t<Flex justify='center'>\r\n\t\t<Typography.Text\r\n\t\t\tstrong\r\n\t\t\ttype={type === 'expense' ? 'danger' : 'success'}\r\n\t\t\tstyle={{ fontSize: isSmallScreen ? '1.25em' : '1.5em' }}\r\n\t\t>\r\n\t\t\t{getSymbolAndPrice(currency)}\r\n\t\t\t{Math.round(price[currency])}\r\n\t\t</Typography.Text>\r\n\t\t{extra && (\r\n\t\t\t<>\r\n\t\t\t\t<Typography.Text\r\n\t\t\t\t\tstrong\r\n\t\t\t\t\ttype={type === 'expense' ? 'danger' : 'success'}\r\n\t\t\t\t\tstyle={{ fontSize: isSmallScreen ? '1.25em' : '1.5em' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t/\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t\t<Typography.Text\r\n\t\t\t\t\tstrong\r\n\t\t\t\t\ttype={type === 'expense' ? 'danger' : 'success'}\r\n\t\t\t\t\tstyle={{ fontSize: isSmallScreen ? '1.25em' : '1.5em' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{getSymbolAndPrice(currency)}\r\n\t\t\t\t\t{Math.round(extra[currency])}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t</>\r\n\t\t)}\r\n\t</Flex>\r\n);\r\n\r\nexport const MyIcon = (\r\n\tIcon: ComponentType<\r\n\t\tOmit<AntdIconProps, 'ref'> & RefAttributes<HTMLSpanElement>\r\n\t>,\r\n\tisSmallScreen: boolean,\r\n\textra: {\r\n\t\tonClick?: () => void;\r\n\t\tsmall?: boolean;\r\n\t\ttitle?: string | React.JSX.Element;\r\n\t\tlight?: boolean;\r\n\t\tplacement?: TooltipPlacement;\r\n\t\ttrigger?: TooltipProps['trigger'];\r\n\t\tavatar?: boolean;\r\n\t}\r\n) => {\r\n\tconst { onClick, small, title, light, placement, trigger, avatar } = extra;\r\n\treturn (\r\n\t\t<Tooltip\r\n\t\t\ttrigger={trigger}\r\n\t\t\tplacement={placement}\r\n\t\t\ttitle={title}\r\n\t\t\tcolor={light ? '#0000' : undefined}\r\n\t\t\toverlayInnerStyle={{ padding: light ? '0' : '', boxShadow: 'none' }}\r\n\t\t>\r\n\t\t\t{avatar ? (\r\n\t\t\t\t<Avatar\r\n\t\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\tonClick={onClick}\r\n\t\t\t\t\ticon={<Icon />}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<Icon\r\n\t\t\t\t\tonClick={onClick}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tscale: small\r\n\t\t\t\t\t\t\t? isSmallScreen\r\n\t\t\t\t\t\t\t\t? '.75'\r\n\t\t\t\t\t\t\t\t: '1'\r\n\t\t\t\t\t\t\t: isSmallScreen\r\n\t\t\t\t\t\t\t? '1'\r\n\t\t\t\t\t\t\t: '1.25',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Tooltip>\r\n\t);\r\n};\r\n\r\nexport const MyCheckbox = (\r\n\tselected: boolean = false,\r\n\tlanguage: language,\r\n\tisSmallScreen: boolean,\r\n\thandleSelection: (event: CheckboxChangeEvent) => void = () => {},\r\n\tdeleteAll?: () => void,\r\n\trestoreAll?: () => void\r\n) => (\r\n\t<Tooltip\r\n\t\tcolor='#0000'\r\n\t\ttitle={\r\n\t\t\tselected ? (\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\tgap={isSmallScreen ? 4 : 8}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={deleteAll}\r\n\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{languages.deleteSelected[language]}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{restoreAll && (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={restoreAll}\r\n\t\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{languages.restoreSelected[language]}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Flex>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)\r\n\t\t}\r\n\t>\r\n\t\t<Checkbox\r\n\t\t\tonChange={handleSelection}\r\n\t\t\tchecked={selected}\r\n\t\t/>\r\n\t</Tooltip>\r\n);\r\n\r\nexport const MySearch = (\r\n\tonChange: (arg0: React.ChangeEvent<HTMLInputElement>) => void,\r\n\tvalue: string,\r\n\tloading: boolean,\r\n\tisSmallScreen: boolean\r\n) => (\r\n\t<Search\r\n\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\tallowClear\r\n\t\tonChange={onChange}\r\n\t\tvalue={value}\r\n\t\tloading={loading}\r\n\t/>\r\n);\r\n\r\nexport const tooltipTitle = (\r\n\tcreatedAt: number | undefined,\r\n\tupdatedAt: number | undefined,\r\n\tlanguage: language\r\n) => {\r\n\tif (!updatedAt) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{`${languages.createdAt[language]} ${dayjs(createdAt).format(\r\n\t\t\t\t\t'HH:mm:ss DD.MM.YY'\r\n\t\t\t\t)}`}\r\n\t\t\t</>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{`${languages.createdAt[language]} ${dayjs(createdAt).format(\r\n\t\t\t\t\t'HH:mm:ss DD.MM.YY'\r\n\t\t\t\t)}`}\r\n\t\t\t\t<br></br>\r\n\t\t\t\t{`${languages.updatedAt[language]} ${dayjs(updatedAt).format(\r\n\t\t\t\t\t'HH:mm:ss DD.MM.YY'\r\n\t\t\t\t)}`}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const addFriendToChatSelect = (\r\n\tisSmallScreen: boolean,\r\n\thandleChange: (\r\n\t\tvalue: null | string[],\r\n\t\toption:\r\n\t\t\t| {\r\n\t\t\t\t\tvalue: string;\r\n\t\t\t\t\tlabel: any;\r\n\t\t\t  }\r\n\t\t\t| {\r\n\t\t\t\t\tvalue: string;\r\n\t\t\t\t\tlabel: any;\r\n\t\t\t  }[]\r\n\t) => void,\r\n\tfriends: { [key: string]: true },\r\n\tvalue: string[] | null,\r\n\tchatInfo?: Chat['info']\r\n) => {\r\n\tconst friendsToShow = chatInfo\r\n\t\t? Object.keys(friends).filter(\r\n\t\t\t\t(key: string) =>\r\n\t\t\t\t\tchatInfo?.members && !Object.keys(chatInfo?.members).includes(key)\r\n\t\t  )\r\n\t\t: Object.keys(friends);\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tmode='multiple'\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tlabelInValue\r\n\t\t\tonChange={handleChange}\r\n\t\t\tshowSearch\r\n\t\t\tvalue={value}\r\n\t\t\tstyle={{ inlineSize: isSmallScreen ? '10em' : '15em' }}\r\n\t\t\toptions={friendsToShow.map((key: string) => ({\r\n\t\t\t\tvalue: key,\r\n\t\t\t\t// label: usersInfo[key]?.nickname,\r\n\t\t\t\tlabel: key,\r\n\t\t\t}))}\r\n\t\t/>\r\n\t);\r\n};\r\n","import { List } from 'antd';\r\nimport Item from 'antd/es/list/Item';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, {\r\n\tDispatch,\r\n\tSetStateAction,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseState,\r\n} from 'react';\r\nimport { communityStore } from 'utils/communityStore';\r\nimport { MyTitle } from './Items';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { Chat } from 'settings/interfaces';\r\nimport { getChatInfo } from 'utils/community';\r\n\r\ninterface Props {\r\n\tselectedChatId: string | null;\r\n\tsetCurrentChatId: Dispatch<SetStateAction<string | null>>;\r\n}\r\n\r\nconst ChatList: React.FC<Props> = observer(\r\n\t({ selectedChatId, setCurrentChatId }) => {\r\n\t\tconst { myUser } = communityStore;\r\n\r\n\t\tconst { user } = myUser;\r\n\r\n\t\treturn (\r\n\t\t\t<List>\r\n\t\t\t\t{user?.chats &&\r\n\t\t\t\t\tObject.keys(user?.chats).map((key: string) => (\r\n\t\t\t\t\t\t<ChatListItem\r\n\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\tid={key}\r\n\t\t\t\t\t\t\tselected={selectedChatId === key}\r\n\t\t\t\t\t\t\tsetCurrentChatId={setCurrentChatId}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t</List>\r\n\t\t);\r\n\t}\r\n);\r\n\r\ninterface ItemProps {\r\n\tid: string;\r\n\tselected: boolean;\r\n\tsetCurrentChatId: Dispatch<SetStateAction<string | null>>;\r\n}\r\n\r\nconst ChatListItem: React.FC<ItemProps> = observer(\r\n\t({ id, selected, setCurrentChatId }) => {\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\r\n\t\tconst [chatInfo, setChatInfo] = useState<Chat['info'] | null>(null);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tgetChatInfo(id, setChatInfo);\r\n\t\t}, [id]);\r\n\r\n\t\tconst handleSelection = useCallback(() => {\r\n\t\t\tsetCurrentChatId(id);\r\n\t\t}, [setCurrentChatId, id]);\r\n\r\n\t\treturn (\r\n\t\t\t<Item\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\topacity: selected ? '.5' : '1',\r\n\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={handleSelection}\r\n\t\t\t>\r\n\t\t\t\t{MyTitle(\r\n\t\t\t\t\tchatInfo?.title as string,\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\tuserOptions.language,\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\tundefined\r\n\t\t\t\t)}\r\n\t\t\t</Item>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default ChatList;\r\n","import { Flex, Form, Input } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useMemo, useState } from 'react';\r\nimport { MyIcon, MyTitle, addFriendToChatSelect } from './Items';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport { CheckOutlined, CloseOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { createChat } from 'utils/community';\r\nimport { communityStore } from 'utils/communityStore';\r\n\r\nconst ChatListHeader: React.FC = observer(() => {\r\n\tconst { userOptions } = optionsStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { language } = userOptions;\r\n\tconst { myUser } = communityStore;\r\n\r\n\tconst { user, id } = myUser;\r\n\r\n\tconst [newChat, setNewChat] = useState<{ title: string; users: string[] }>({\r\n\t\ttitle: '',\r\n\t\tusers: [],\r\n\t});\r\n\r\n\tconst handleTitleChange = useCallback(\r\n\t\t(event: any) => {\r\n\t\t\tsetNewChat((prevChat: { title: string; users: string[] }) => ({\r\n\t\t\t\t...prevChat,\r\n\t\t\t\ttitle: event.target.value,\r\n\t\t\t}));\r\n\t\t},\r\n\t\t[setNewChat]\r\n\t);\r\n\r\n\tconst handleUsersChange = useCallback(\r\n\t\t(\r\n\t\t\t_: null | string[],\r\n\t\t\toption:\r\n\t\t\t\t| {\r\n\t\t\t\t\t\tvalue: string;\r\n\t\t\t\t\t\tlabel: any;\r\n\t\t\t\t  }\r\n\t\t\t\t| {\r\n\t\t\t\t\t\tvalue: string;\r\n\t\t\t\t\t\tlabel: any;\r\n\t\t\t\t  }[]\r\n\t\t) => {\r\n\t\t\tsetNewChat((prevChat: { title: string; users: string[] }) => ({\r\n\t\t\t\t...prevChat,\r\n\t\t\t\tusers: [\r\n\t\t\t\t\t...prevChat.users,\r\n\t\t\t\t\t!Array.isArray(option) ? option.value : option[0].value,\r\n\t\t\t\t],\r\n\t\t\t}));\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\tconst addChatForm = useMemo(\r\n\t\t() => (\r\n\t\t\t<Form\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tlayout='vertical'\r\n\t\t\t>\r\n\t\t\t\t<Form.Item label={languages.title[language]}>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tvalue={newChat.title}\r\n\t\t\t\t\t\tonInput={handleTitleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t{addFriendToChatSelect(\r\n\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\thandleUsersChange,\r\n\t\t\t\t\t\tuser?.friends,\r\n\t\t\t\t\t\tnewChat.users\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Flex justify='space-between'>\r\n\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t{MyIcon(CloseOutlined, isSmallScreen, {\r\n\t\t\t\t\t\t\tonClick: () => setNewChat({ title: '', users: [] }),\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t{MyIcon(CheckOutlined, isSmallScreen, {\r\n\t\t\t\t\t\t\tonClick: () => {\r\n\t\t\t\t\t\t\t\tcreateChat(id, newChat.title, newChat.users);\r\n\t\t\t\t\t\t\t\tsetNewChat({ title: '', users: [] });\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Form>\r\n\t\t),\r\n\t\t[\r\n\t\t\tisSmallScreen,\r\n\t\t\thandleTitleChange,\r\n\t\t\thandleUsersChange,\r\n\t\t\tnewChat,\r\n\t\t\tlanguage,\r\n\t\t\tuser?.friends,\r\n\t\t\tid,\r\n\t\t]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex justify='space-between'>\r\n\t\t\t{MyTitle(languages.chats[language], null, isSmallScreen, language, false)}\r\n\t\t\t{MyIcon(PlusOutlined, isSmallScreen, {\r\n\t\t\t\ttitle: addChatForm,\r\n\t\t\t\tlight: true,\r\n\t\t\t\tplacement: 'bottomLeft',\r\n\t\t\t\ttrigger: 'click',\r\n\t\t\t})}\r\n\t\t</Flex>\r\n\t);\r\n});\r\nexport default ChatListHeader;\r\n","import { ArrowDownOutlined, SendOutlined } from '@ant-design/icons';\r\nimport { Badge, Flex } from 'antd';\r\nimport Search from 'antd/es/input/Search';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { ChangeEvent, useCallback, useMemo, useState } from 'react';\r\nimport { sendMessage } from 'utils/community';\r\nimport { userStore } from 'utils/userStore';\r\nimport { MyIcon } from './Items';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport { communityStore } from 'utils/communityStore';\r\n\r\ninterface Props {\r\n\tchatId: string | null;\r\n\tscrollbarsRef: React.MutableRefObject<Scrollbars | null>;\r\n\tstuck: boolean;\r\n\thasNewMessages: boolean;\r\n}\r\n\r\nconst ChatInput: React.FC<Props> = observer(\r\n\t({ chatId, scrollbarsRef, stuck, hasNewMessages }) => {\r\n\t\tconst { isSmallScreen } = userStore;\r\n\r\n\t\tconst { myUser } = communityStore;\r\n\r\n\t\tconst { id } = myUser;\r\n\r\n\t\tconst [message, setMessage] = useState<string>('');\r\n\r\n\t\tconst handleChange = useCallback(\r\n\t\t\t(event: ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tsetMessage(event.target.value);\r\n\t\t\t},\r\n\t\t\t[setMessage]\r\n\t\t);\r\n\r\n\t\tconst send = useCallback(() => {\r\n\t\t\tchatId &&\r\n\t\t\t\tsendMessage(id, chatId, message).then(() => {\r\n\t\t\t\t\tscrollbarsRef.current?.scrollToBottom();\r\n\t\t\t\t\tsetMessage('');\r\n\t\t\t\t});\r\n\t\t}, [id, chatId, message, scrollbarsRef]);\r\n\r\n\t\tconst scrollDownArrow = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tMyIcon(ArrowDownOutlined, isSmallScreen, {\r\n\t\t\t\t\tonClick: () => scrollbarsRef.current?.scrollToBottom(),\r\n\t\t\t\t}),\r\n\t\t\t[isSmallScreen, scrollbarsRef]\r\n\t\t);\r\n\r\n\t\tconst chatInput = useMemo(\r\n\t\t\t() => (\r\n\t\t\t\t<Search\r\n\t\t\t\t\tvalue={message}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tenterButton={<SendOutlined />}\r\n\t\t\t\t\tsize='large'\r\n\t\t\t\t\tonSearch={send}\r\n\t\t\t\t/>\r\n\t\t\t),\r\n\t\t\t[message, handleChange, send]\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Flex\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\tpaddingInline: isSmallScreen ? '.5em' : '1em',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{!stuck && (\r\n\t\t\t\t\t<Flex style={{ position: 'absolute', right: '0', bottom: '4em' }}>\r\n\t\t\t\t\t\t<Badge dot={hasNewMessages}>{scrollDownArrow}</Badge>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t)}\r\n\t\t\t\t{chatInput}\r\n\t\t\t</Flex>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default ChatInput;\r\n","import { Flex, Popconfirm } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, {\r\n\tDispatch,\r\n\tSetStateAction,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseMemo,\r\n\tuseState,\r\n} from 'react';\r\nimport { MyIcon, MyTitle, addFriendToChatSelect, tooltipTitle } from './Items';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport {\r\n\tdeleteChat,\r\n\texitFromChat,\r\n\tgetChatInfo,\r\n\tinviteFriendsToChat,\r\n} from 'utils/community';\r\nimport {\r\n\tArrowLeftOutlined,\r\n\tDeleteOutlined,\r\n\tInfoCircleOutlined,\r\n\tLogoutOutlined,\r\n\tMoreOutlined,\r\n\tPlusOutlined,\r\n} from '@ant-design/icons';\r\nimport languages from 'settings/languages';\r\nimport { communityStore } from 'utils/communityStore';\r\nimport { Chat } from 'settings/interfaces';\r\n\r\ninterface Props {\r\n\tchatId: string;\r\n\tsetCurrentChatId: Dispatch<SetStateAction<string | null>>;\r\n\tsetSelected: Dispatch<SetStateAction<string[]>>;\r\n}\r\n\r\nconst CurrentChatHeader: React.FC<Props> = observer(\r\n\t({ chatId, setCurrentChatId, setSelected }) => {\r\n\t\tconst { userOptions } = optionsStore;\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { myUser } = communityStore;\r\n\r\n\t\tconst [chatInfo, setChatInfo] = useState<Chat['info']>();\r\n\r\n\t\tconst { user, id } = myUser;\r\n\r\n\t\tconst { language } = userOptions;\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tgetChatInfo(chatId, setChatInfo);\r\n\t\t}, [chatId]);\r\n\r\n\t\tconst handleChange = useCallback(\r\n\t\t\t(\r\n\t\t\t\t_: null | string[],\r\n\t\t\t\toption:\r\n\t\t\t\t\t| {\r\n\t\t\t\t\t\t\tvalue: string;\r\n\t\t\t\t\t\t\tlabel: string;\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t| {\r\n\t\t\t\t\t\t\tvalue: string;\r\n\t\t\t\t\t\t\tlabel: string;\r\n\t\t\t\t\t  }[]\r\n\t\t\t) => {\r\n\t\t\t\tif (!Array.isArray(option)) option = [option];\r\n\t\t\t\tchatId &&\r\n\t\t\t\t\tinviteFriendsToChat(\r\n\t\t\t\t\t\tchatId,\r\n\t\t\t\t\t\toption.map(({ value }: { value: string; label: string }) => value)\r\n\t\t\t\t\t);\r\n\t\t\t},\r\n\t\t\t[chatId]\r\n\t\t);\r\n\r\n\t\tconst handleDeleting = useCallback(() => {\r\n\t\t\tsetCurrentChatId(null);\r\n\t\t\tchatInfo && chatInfo && deleteChat(chatId, chatInfo?.members);\r\n\t\t}, [chatId, chatInfo, setCurrentChatId]);\r\n\r\n\t\tconst handleExit = useCallback(() => {\r\n\t\t\tsetCurrentChatId(null);\r\n\t\t\tchatInfo && exitFromChat(id, chatId, chatInfo?.members);\r\n\t\t}, [chatId, chatInfo, setCurrentChatId, id]);\r\n\r\n\t\tconst chatTitle = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tMyTitle(\r\n\t\t\t\t\tchatInfo?.title || '',\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\tlanguage,\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\tundefined\r\n\t\t\t\t),\r\n\t\t\t[chatInfo, isSmallScreen, language]\r\n\t\t);\r\n\r\n\t\tconst goBackArrow = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tMyIcon(ArrowLeftOutlined, isSmallScreen, {\r\n\t\t\t\t\tonClick: () =>\r\n\t\t\t\t\t\tsetSelected((prevSelected: string[]) => {\r\n\t\t\t\t\t\t\tif (prevSelected.length) {\r\n\t\t\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsetCurrentChatId(null);\r\n\t\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t}),\r\n\t\t\t[isSmallScreen, setCurrentChatId, setSelected]\r\n\t\t);\r\n\r\n\t\tconst icons = useMemo(\r\n\t\t\t() => (\r\n\t\t\t\t<Flex gap={isSmallScreen ? 4 : 8}>\r\n\t\t\t\t\t{MyIcon(PlusOutlined, isSmallScreen, {\r\n\t\t\t\t\t\ttitle: addFriendToChatSelect(\r\n\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\tuser?.friends,\r\n\t\t\t\t\t\t\tnull,\r\n\t\t\t\t\t\t\tchatInfo\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tlight: true,\r\n\t\t\t\t\t\tavatar: true,\r\n\t\t\t\t\t\tplacement: 'bottom',\r\n\t\t\t\t\t\ttrigger: 'click',\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\tplacement='bottom'\r\n\t\t\t\t\t\ttitle={languages.exitChatConfirm[language]}\r\n\t\t\t\t\t\tonConfirm={handleExit}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{MyIcon(LogoutOutlined, isSmallScreen, { avatar: true })}\r\n\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\tplacement='bottom'\r\n\t\t\t\t\t\ttitle={languages.deleteChatConfirm[language]}\r\n\t\t\t\t\t\tonConfirm={handleDeleting}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{MyIcon(DeleteOutlined, isSmallScreen, { avatar: true })}\r\n\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t{MyIcon(InfoCircleOutlined, isSmallScreen, {\r\n\t\t\t\t\t\ttitle: tooltipTitle(chatInfo?.createdAt, undefined, language),\r\n\t\t\t\t\t\tplacement: 'bottom',\r\n\t\t\t\t\t\tavatar: true,\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Flex>\r\n\t\t\t),\r\n\t\t\t[\r\n\t\t\t\tchatInfo,\r\n\t\t\t\tisSmallScreen,\r\n\t\t\t\tlanguage,\r\n\t\t\t\thandleDeleting,\r\n\t\t\t\thandleChange,\r\n\t\t\t\thandleExit,\r\n\t\t\t\tuser?.friends,\r\n\t\t\t]\r\n\t\t);\r\n\r\n\t\tconst moreIcon = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tMyIcon(MoreOutlined, isSmallScreen, {\r\n\t\t\t\t\ttitle: icons,\r\n\t\t\t\t\tlight: true,\r\n\t\t\t\t\tplacement: 'left',\r\n\t\t\t\t\ttrigger: 'click',\r\n\t\t\t\t}),\r\n\t\t\t[isSmallScreen, icons]\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Flex\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\tpaddingInline: isSmallScreen ? '.5em' : '1em',\r\n\t\t\t\t}}\r\n\t\t\t\tjustify='space-between'\r\n\t\t\t>\r\n\t\t\t\t{goBackArrow}\r\n\t\t\t\t{chatTitle}\r\n\t\t\t\t{chatId && chatInfo && moreIcon}\r\n\t\t\t</Flex>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default CurrentChatHeader;\r\n","import { Divider, Flex } from 'antd';\r\nimport TextArea from 'antd/es/input/TextArea';\r\nimport { Unsubscribe } from 'firebase/database';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, {\r\n\tChangeEvent,\r\n\tDispatch,\r\n\tSetStateAction,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseMemo,\r\n\tuseRef,\r\n\tuseState,\r\n} from 'react';\r\nimport { Message } from 'settings/interfaces';\r\nimport { deleteMessage, editMessage, getChatMessages } from 'utils/community';\r\nimport { communityStore } from 'utils/communityStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport dayjs from 'dayjs';\r\nimport Scrollbars, { positionValues } from 'react-custom-scrollbars';\r\nimport { MyIcon, MyTitle } from './Items';\r\nimport {\r\n\tCheckOutlined,\r\n\tCloseOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tHeartFilled,\r\n} from '@ant-design/icons';\r\nimport ChatInput from './ChatInput';\r\nimport CurrentChatHeader from './CurrentChatHeader';\r\n\r\ninterface Props {\r\n\tchatId: string;\r\n\tsetChatId: Dispatch<SetStateAction<string | null>>;\r\n}\r\n\r\nconst CurrentChat: React.FC<Props> = observer(({ chatId, setChatId }) => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { messages, setMessages, onlineFriends } = communityStore;\r\n\r\n\tconst scrollbarsRef = useRef<Scrollbars | null>(null);\r\n\r\n\tconst [stuckToBottom, setStuckToBottom] = useState<boolean>(true);\r\n\tconst [hasNewMessages, setHasNewMessages] = useState<boolean>(false);\r\n\r\n\tconst [selectedMessages, setSelectedMessages] = useState<string[]>([]);\r\n\r\n\tconst onUpdate = useCallback(\r\n\t\t(values: positionValues) => {\r\n\t\t\tconst stuck =\r\n\t\t\t\tvalues.top >= 0.99 || values.clientHeight === values.scrollHeight;\r\n\t\t\tsetStuckToBottom(stuck);\r\n\t\t\tstuck && setHasNewMessages(false);\r\n\t\t},\r\n\t\t[setStuckToBottom, setHasNewMessages]\r\n\t);\r\n\r\n\tconst select = useCallback(\r\n\t\t(key: string) => () => {\r\n\t\t\tsetSelectedMessages((prevSelected: string[]) => [...prevSelected, key]);\r\n\t\t},\r\n\t\t[setSelectedMessages]\r\n\t);\r\n\r\n\tconst deselect = useCallback(\r\n\t\t(key: string) => () => {\r\n\t\t\tsetSelectedMessages((prevSelected: string[]) =>\r\n\t\t\t\tprevSelected.filter((item: string) => item !== key)\r\n\t\t\t);\r\n\t\t},\r\n\t\t[setSelectedMessages]\r\n\t);\r\n\r\n\tconst edit = useCallback(\r\n\t\t(chatId: string | null, messageId: string) => (text: string) =>\r\n\t\t\teditMessage(chatId, messageId, text),\r\n\t\t[]\r\n\t);\r\n\r\n\tconst remove = useCallback(\r\n\t\t(chatId: string | null, messageId: string) => () =>\r\n\t\t\tdeleteMessage(chatId, messageId),\r\n\t\t[]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet unsubscribe: Unsubscribe | undefined = () => {};\r\n\t\tsetMessages({});\r\n\t\tif (chatId) unsubscribe = getChatMessages(chatId, setMessages);\r\n\t\treturn () => unsubscribe && unsubscribe();\r\n\t\t// eslint-disable-next-line\r\n\t}, [chatId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tscrollbarsRef.current?.scrollToBottom();\r\n\t\t// eslint-disable-next-line\r\n\t}, [messages === null]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetHasNewMessages(true);\r\n\t\tstuckToBottom && scrollbarsRef.current?.scrollToBottom();\r\n\t\t// eslint-disable-next-line\r\n\t}, [messages]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!isSmallScreen && (\r\n\t\t\t\t<Divider\r\n\t\t\t\t\ttype='vertical'\r\n\t\t\t\t\tstyle={{ height: 'unset', margin: 0 }}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t<Flex\r\n\t\t\t\tvertical\r\n\t\t\t\tstyle={{ inlineSize: isSmallScreen ? '100%' : '75%', padding: '1em' }}\r\n\t\t\t>\r\n\t\t\t\t<CurrentChatHeader\r\n\t\t\t\t\tsetSelected={setSelectedMessages}\r\n\t\t\t\t\tchatId={chatId}\r\n\t\t\t\t\tsetCurrentChatId={setChatId}\r\n\t\t\t\t/>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t<Scrollbars\r\n\t\t\t\t\tonUpdate={onUpdate}\r\n\t\t\t\t\tautoHide\r\n\t\t\t\t\tref={scrollbarsRef}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Flex\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tgap={isSmallScreen ? 8 : 16}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{messages &&\r\n\t\t\t\t\t\t\tObject.keys(messages).map((key: string) => (\r\n\t\t\t\t\t\t\t\t<MessageItem\r\n\t\t\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\t\t\tmessage={messages[key]}\r\n\t\t\t\t\t\t\t\t\tselected={selectedMessages.includes(key)}\r\n\t\t\t\t\t\t\t\t\tonline={onlineFriends[messages[key].sender]}\r\n\t\t\t\t\t\t\t\t\tselect={select(key)}\r\n\t\t\t\t\t\t\t\t\tdeselect={deselect(key)}\r\n\t\t\t\t\t\t\t\t\tedit={edit(chatId, key)}\r\n\t\t\t\t\t\t\t\t\tremove={remove(chatId, key)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Scrollbars>\r\n\t\t\t\t<ChatInput\r\n\t\t\t\t\tchatId={chatId}\r\n\t\t\t\t\tscrollbarsRef={scrollbarsRef}\r\n\t\t\t\t\tstuck={stuckToBottom}\r\n\t\t\t\t\thasNewMessages={hasNewMessages}\r\n\t\t\t\t/>\r\n\t\t\t</Flex>\r\n\t\t</>\r\n\t);\r\n});\r\n\r\ninterface ItemProps {\r\n\tmessage: Message;\r\n\tselected: boolean;\r\n\tonline: boolean;\r\n\tselect: () => void;\r\n\tdeselect: () => void;\r\n\tedit: (text: string) => void;\r\n\tremove: () => void;\r\n}\r\n\r\nconst MessageItem: React.FC<ItemProps> = observer(\r\n\t({ message, selected, online, select, deselect, edit, remove }) => {\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { sender, text, sentAt } = message;\r\n\r\n\t\tconst [editMode, setEditMode] = useState<boolean>(false);\r\n\r\n\t\tconst [currentText, setCurrentText] = useState<string>(text);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetCurrentText(text);\r\n\t\t}, [text]);\r\n\r\n\t\tconst enterEditMode = useCallback(() => {\r\n\t\t\tsetEditMode(true);\r\n\t\t}, [setEditMode]);\r\n\r\n\t\tconst exitEditModeWithCancel = useCallback(() => {\r\n\t\t\tsetEditMode(false);\r\n\t\t\tsetCurrentText(text);\r\n\t\t}, [setEditMode, text]);\r\n\r\n\t\tconst exitEditModeWithSubmit = useCallback(() => {\r\n\t\t\tsetEditMode(false);\r\n\t\t\tcurrentText !== text && edit(currentText);\r\n\t\t}, [setEditMode, currentText, edit, text]);\r\n\r\n\t\tconst { myUser } = communityStore;\r\n\r\n\t\tconst { id } = myUser;\r\n\r\n\t\tconst isMyMessage = useMemo(() => id === sender, [id, sender]);\r\n\r\n\t\tconst handleChange = useCallback(\r\n\t\t\t(event: ChangeEvent<HTMLTextAreaElement>) => {\r\n\t\t\t\tsetCurrentText(event.target.value);\r\n\t\t\t},\r\n\t\t\t[setCurrentText]\r\n\t\t);\r\n\r\n\t\tconst submitIcon = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tMyIcon(CheckOutlined, isSmallScreen, {\r\n\t\t\t\t\tsmall: true,\r\n\t\t\t\t\tonClick: exitEditModeWithSubmit,\r\n\t\t\t\t}),\r\n\t\t\t[exitEditModeWithSubmit, isSmallScreen]\r\n\t\t);\r\n\r\n\t\tconst cancelIcon = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tMyIcon(CloseOutlined, isSmallScreen, {\r\n\t\t\t\t\tsmall: true,\r\n\t\t\t\t\tonClick: exitEditModeWithCancel,\r\n\t\t\t\t}),\r\n\t\t\t[exitEditModeWithCancel, isSmallScreen]\r\n\t\t);\r\n\r\n\t\tconst editIcon = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tMyIcon(EditOutlined, isSmallScreen, {\r\n\t\t\t\t\tsmall: true,\r\n\t\t\t\t\tonClick: enterEditMode,\r\n\t\t\t\t}),\r\n\t\t\t[enterEditMode, isSmallScreen]\r\n\t\t);\r\n\r\n\t\tconst editMessageIcons = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\teditMode ? (\r\n\t\t\t\t\t<Flex>\r\n\t\t\t\t\t\t{submitIcon}\r\n\t\t\t\t\t\t{cancelIcon}\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t) : (\r\n\t\t\t\t\teditIcon\r\n\t\t\t\t),\r\n\t\t\t[editMode, submitIcon, cancelIcon, editIcon]\r\n\t\t);\r\n\r\n\t\tconst deleteMessageIcon = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tMyIcon(DeleteOutlined, isSmallScreen, {\r\n\t\t\t\t\tsmall: true,\r\n\t\t\t\t\tonClick: remove,\r\n\t\t\t\t}),\r\n\t\t\t[isSmallScreen, remove]\r\n\t\t);\r\n\r\n\t\tconst onlineDot = useMemo(\r\n\t\t\t() => (\r\n\t\t\t\t<HeartFilled\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tcolor: '#f00',\r\n\t\t\t\t\t\tfontSize: isSmallScreen ? '.33em' : '.5em',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t),\r\n\t\t\t[isSmallScreen]\r\n\t\t);\r\n\r\n\t\tconst titleWithDot = useMemo(\r\n\t\t\t() => (\r\n\t\t\t\t<Flex\r\n\t\t\t\t\talign='center'\r\n\t\t\t\t\tgap={isSmallScreen ? 2 : 4}\r\n\t\t\t\t\tstyle={{ flexDirection: isMyMessage ? 'row' : 'row-reverse' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{online && onlineDot}\r\n\t\t\t\t\t{MyTitle(sender, null, isSmallScreen)}\r\n\t\t\t\t</Flex>\r\n\t\t\t),\r\n\t\t\t[sender, isSmallScreen, isMyMessage, onlineDot, online]\r\n\t\t);\r\n\r\n\t\tconst icons = useMemo(\r\n\t\t\t() => (\r\n\t\t\t\t<Flex>\r\n\t\t\t\t\t{editMessageIcons}\r\n\t\t\t\t\t{!editMode && deleteMessageIcon}\r\n\t\t\t\t</Flex>\r\n\t\t\t),\r\n\t\t\t[editMessageIcons, deleteMessageIcon, editMode]\r\n\t\t);\r\n\r\n\t\tconst messageArea = useMemo(\r\n\t\t\t() => (\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\talign={isMyMessage ? 'end' : 'start'}\r\n\t\t\t\t>\r\n\t\t\t\t\t{titleWithDot}\r\n\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\tvariant={editMode ? 'outlined' : 'filled'}\r\n\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\t\tautoSize\r\n\t\t\t\t\t\tshowCount={{ formatter: () => dayjs(sentAt).format('HH:mm') }}\r\n\t\t\t\t\t\tstyles={{ count: { marginInlineEnd: 'auto' } }}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tpointerEvents: editMode ? 'auto' : 'none',\r\n\t\t\t\t\t\t\tbackground: selected ? '#0003' : '',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvalue={currentText}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Flex>\r\n\t\t\t),\r\n\t\t\t[\r\n\t\t\t\teditMode,\r\n\t\t\t\tisSmallScreen,\r\n\t\t\t\tsentAt,\r\n\t\t\t\tisMyMessage,\r\n\t\t\t\tselected,\r\n\t\t\t\tcurrentText,\r\n\t\t\t\thandleChange,\r\n\t\t\t\ttitleWithDot,\r\n\t\t\t]\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Flex\r\n\t\t\t\tonContextMenu={selected ? deselect : select}\r\n\t\t\t\tvertical\r\n\t\t\t\talign={isMyMessage ? 'end' : 'start'}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\talign='end'\r\n\t\t\t\t\tgap={isSmallScreen ? 2 : 4}\r\n\t\t\t\t\tstyle={{ flexDirection: isMyMessage ? 'row' : 'row-reverse' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Flex\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tgap={isSmallScreen ? 2 : 4}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{messageArea}\r\n\t\t\t\t\t\t{isMyMessage && icons}\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Flex>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default CurrentChat;\r\n","import { Flex } from 'antd';\r\nimport ChatList from 'components/ChatList';\r\nimport ChatListHeader from 'components/ChatListHeader';\r\nimport CurrentChat from 'components/CurrentChat';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { userStore } from 'utils/userStore';\r\n\r\nconst Chats: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { communityOptions, setLastSelectedChatId } = optionsStore;\r\n\r\n\tconst { lastSelectedChatId } = communityOptions;\r\n\r\n\tconst [currentChatId, setCurrentChatId] = useState<string | null>(\r\n\t\tlastSelectedChatId\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLastSelectedChatId(currentChatId);\r\n\t\t// eslint-disable-next-line\r\n\t}, [currentChatId]);\r\n\r\n\tconst chatList = useMemo(\r\n\t\t() => (\r\n\t\t\t<Flex\r\n\t\t\t\tvertical\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tinlineSize: currentChatId ? (isSmallScreen ? '100%' : '25%') : '100%',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<ChatListHeader />\r\n\t\t\t\t<Scrollbars autoHide>\r\n\t\t\t\t\t<ChatList\r\n\t\t\t\t\t\tselectedChatId={currentChatId}\r\n\t\t\t\t\t\tsetCurrentChatId={setCurrentChatId}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Scrollbars>\r\n\t\t\t</Flex>\r\n\t\t),\r\n\t\t[setCurrentChatId, currentChatId, isSmallScreen]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex style={{ blockSize: '75dvh' }}>\r\n\t\t\t{((isSmallScreen && !currentChatId) || !isSmallScreen) && chatList}\r\n\t\t\t{currentChatId && (\r\n\t\t\t\t<CurrentChat\r\n\t\t\t\t\tchatId={currentChatId}\r\n\t\t\t\t\tsetChatId={setCurrentChatId}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default Chats;\r\n","import {\r\n\tCheckOutlined,\r\n\tUserAddOutlined,\r\n\tUserDeleteOutlined,\r\n} from '@ant-design/icons';\r\nimport { Flex, Select } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { cancelRequest, findUser, sendRequest } from 'utils/community';\r\nimport { communityStore } from 'utils/communityStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport { MyIcon } from './Items';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { debounce } from 'lodash';\r\nimport constants from 'settings/constants';\r\n\r\nconst UserSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\tconst { myUser } = communityStore;\r\n\r\n\tconst [userId, setUser] = useState<string | null>(null);\r\n\r\n\tconst handleSearch = useCallback((id: string) => {\r\n\t\tfindUser(id)\r\n\t\t\t.then(() => setUser(id))\r\n\t\t\t.catch(() => setUser(null));\r\n\t}, []);\r\n\r\n\tconst debouncedHandleSearch = debounce(\r\n\t\thandleSearch,\r\n\t\tconstants.optionsDebounceDelay\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tlabelInValue\r\n\t\t\tshowSearch\r\n\t\t\tonSearch={debouncedHandleSearch}\r\n\t\t\tvalue={null}\r\n\t\t\tstyle={{ inlineSize: isSmallScreen ? '100%' : '50%' }}\r\n\t\t\toptions={\r\n\t\t\t\tuserId !== myUser.id && userId\r\n\t\t\t\t\t? [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvalue: userId,\r\n\t\t\t\t\t\t\t\tlabel: <UserItem userId={userId} />,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t  ]\r\n\t\t\t\t\t: []\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default UserSelect;\r\n\r\ninterface ItemProps {\r\n\tuserId: string;\r\n}\r\n\r\nconst UserItem: React.FC<ItemProps> = observer(({ userId }) => {\r\n\tconst { isSmallScreen, UID } = userStore;\r\n\tconst { userOptions } = optionsStore;\r\n\tconst { language } = userOptions;\r\n\tconst { myUser } = communityStore;\r\n\r\n\tconst { id, user } = myUser;\r\n\r\n\treturn (\r\n\t\t<Flex justify='space-between'>\r\n\t\t\t{userId}\r\n\t\t\t{Object.keys(user?.sentFriendRequests).includes(id) ||\r\n\t\t\tObject.keys(user?.friends).includes(id)\r\n\t\t\t\t? MyIcon(\r\n\t\t\t\t\t\tObject.keys(user?.friends).includes(id)\r\n\t\t\t\t\t\t\t? CheckOutlined\r\n\t\t\t\t\t\t\t: UserDeleteOutlined,\r\n\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tonClick: () => {\r\n\t\t\t\t\t\t\t\t!Object.keys(user?.friends).includes(id) &&\r\n\t\t\t\t\t\t\t\t\tcancelRequest(UID, id);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\ttitle: Object.keys(user?.friends).includes(id)\r\n\t\t\t\t\t\t\t\t? languages.alreadyFriends[language]\r\n\t\t\t\t\t\t\t\t: languages.cancelRequestConfirm[language],\r\n\t\t\t\t\t\t}\r\n\t\t\t\t  )\r\n\t\t\t\t: MyIcon(UserAddOutlined, isSmallScreen, {\r\n\t\t\t\t\t\tonClick: () => {\r\n\t\t\t\t\t\t\tsendRequest(id, userId, user?.friendRequests);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\ttitle: languages.sendRequest[language],\r\n\t\t\t\t  })}\r\n\t\t</Flex>\r\n\t);\r\n});\r\n","import React, { Dispatch, SetStateAction, useCallback, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Badge, Drawer, Flex, Segmented } from 'antd';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\nimport { UserMode } from 'settings/interfaces';\r\nimport { MyIcon } from './Items';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport UserSelect from './UserSelect';\r\nimport { communityStore } from 'utils/communityStore';\r\n\r\ninterface Props {\r\n\tvalue: UserMode;\r\n\tonChange: Dispatch<SetStateAction<UserMode>>;\r\n}\r\n\r\nconst UserModeSelect: React.FC<Props> = observer(({ value, onChange }) => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { userOptions } = optionsStore;\r\n\tconst { myUser } = communityStore;\r\n\r\n\tconst { user } = myUser;\r\n\r\n\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\r\n\tconst openModal = useCallback(() => {\r\n\t\tsetIsModalOpened(true);\r\n\t}, [setIsModalOpened]);\r\n\r\n\tconst closeModal = useCallback(() => {\r\n\t\tsetIsModalOpened(false);\r\n\t}, [setIsModalOpened]);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tjustify='space-between'\r\n\t\t>\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\tcount={Object.keys(user?.friendRequests).length}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{languages.requests[userOptions.language]}\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'requests',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: languages.myRequests[userOptions.language],\r\n\t\t\t\t\t\tvalue: 'myRequests',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: languages.friends[userOptions.language],\r\n\t\t\t\t\t\tvalue: 'friends',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t\t{isSmallScreen &&\r\n\t\t\t\tMyIcon(SearchOutlined, isSmallScreen, {\r\n\t\t\t\t\tonClick: openModal,\r\n\t\t\t\t\ttitle: languages.searchFriends[userOptions.language],\r\n\t\t\t\t})}\r\n\t\t\t<Drawer\r\n\t\t\t\topen={isModalOpened}\r\n\t\t\t\tonClose={closeModal}\r\n\t\t\t>\r\n\t\t\t\t<UserSelect />\r\n\t\t\t</Drawer>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default UserModeSelect;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useMemo, useState } from 'react';\r\nimport UserModeSelect from './UserModeSelect';\r\nimport { UserMode } from 'settings/interfaces';\r\nimport { communityStore } from 'utils/communityStore';\r\nimport { Col, Flex, List, Popconfirm } from 'antd';\r\nimport { userStore } from 'utils/userStore';\r\nimport Item from 'antd/es/list/Item';\r\nimport { MyIcon } from './Items';\r\nimport { UserAddOutlined, UserDeleteOutlined } from '@ant-design/icons';\r\nimport {\r\n\tacceptRequest,\r\n\tcancelRequest,\r\n\tdeclineRequest,\r\n\tremoveFriend,\r\n} from 'utils/community';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst UsersList: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { myUser } = communityStore;\r\n\r\n\tconst [mode, setMode] = useState<UserMode>('friends');\r\n\r\n\tconst { user } = myUser;\r\n\r\n\tconst list = useMemo(() => {\r\n\t\tif (mode === 'friends') return user?.friends;\r\n\t\telse if (mode === 'requests') return user?.friendRequests;\r\n\t\telse if (mode === 'myRequests') return user?.sentFriendRequests;\r\n\t\treturn {};\r\n\t}, [mode, user?.friends, user?.friendRequests, user?.sentFriendRequests]);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tstyle={{ inlineSize: isSmallScreen ? '100%' : '50%' }}\r\n\t\t\tvertical\r\n\t\t\tgap={isSmallScreen ? 8 : 16}\r\n\t\t>\r\n\t\t\t<UserModeSelect\r\n\t\t\t\tvalue={mode}\r\n\t\t\t\tonChange={setMode}\r\n\t\t\t/>\r\n\t\t\t<List style={{ inlineSize: '100%' }}>\r\n\t\t\t\t{list &&\r\n\t\t\t\t\tObject.keys(list).map((key: string) => (\r\n\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\tuserId={key}\r\n\t\t\t\t\t\t\tmode={mode}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t</List>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\ninterface ItemProps {\r\n\tuserId: string;\r\n\tmode: UserMode;\r\n}\r\n\r\nconst UserItem: React.FC<ItemProps> = observer(({ userId, mode }) => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { userOptions } = optionsStore;\r\n\tconst { language } = userOptions;\r\n\tconst { myUser } = communityStore;\r\n\r\n\tconst { id } = myUser;\r\n\r\n\tconst icon = useCallback(\r\n\t\t(key: string) => {\r\n\t\t\tif (mode === 'friends')\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\ttitle={languages.removeFriendConfirm[language]}\r\n\t\t\t\t\t\t\tonConfirm={() => removeFriend(id, key)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{MyIcon(UserDeleteOutlined, isSmallScreen, {})}\r\n\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t);\r\n\t\t\telse if (mode === 'requests')\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\ttitle={languages.acceptRequestConfirm[language]}\r\n\t\t\t\t\t\t\t\tonConfirm={() => acceptRequest(id, key)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{MyIcon(UserAddOutlined, isSmallScreen, {})}\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\ttitle={languages.declineRequestConfirm[language]}\r\n\t\t\t\t\t\t\t\tonConfirm={() => declineRequest(id, key)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{MyIcon(UserDeleteOutlined, isSmallScreen, {})}\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\telse if (mode === 'myRequests')\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\ttitle={languages.cancelRequestConfirm[language]}\r\n\t\t\t\t\t\t\tonConfirm={() => cancelRequest(id, key)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{MyIcon(UserDeleteOutlined, isSmallScreen, {})}\r\n\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t);\r\n\t\t},\r\n\t\t[isSmallScreen, mode, language, id]\r\n\t);\r\n\treturn (\r\n\t\t<Item>\r\n\t\t\t<Col span={20}>{userId}</Col>\r\n\t\t\t{icon(userId)}\r\n\t\t</Item>\r\n\t);\r\n});\r\n\r\nexport default UsersList;\r\n","import { Flex } from 'antd';\r\nimport UserSelect from 'components/UserSelect';\r\nimport UsersList from 'components/UsersList';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { userStore } from 'utils/userStore';\r\n\r\nconst Friends: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\talign='center'\r\n\t\t>\r\n\t\t\t<Flex\r\n\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\tgap={isSmallScreen ? 8 : 16}\r\n\t\t\t\tjustify='space-between'\r\n\t\t\t\talign='start'\r\n\t\t\t>\r\n\t\t\t\t<UsersList />\r\n\t\t\t\t{!isSmallScreen && <UserSelect />}\r\n\t\t\t</Flex>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default Friends;\r\n","import { CommentOutlined, TeamOutlined } from '@ant-design/icons';\r\nimport { Tabs } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useState } from 'react';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport Chats from './Chats';\r\nimport Friends from './Friends';\r\nimport { userStore } from 'utils/userStore';\r\nimport { communityStore } from 'utils/communityStore';\r\nimport { checkOnline } from 'utils/community';\r\nimport { Unsubscribe } from 'firebase/auth';\r\n\r\nconst Community: React.FC = observer(() => {\r\n\tconst { userOptions } = optionsStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { myUser, setOnlineFriend, clearOnlineFriends } = communityStore;\r\n\r\n\tconst { language } = userOptions;\r\n\r\n\tconst [activeKey, setActiveKey] = useState<string>('0');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribes: (Unsubscribe | undefined)[] = [];\r\n\t\tObject.keys(myUser.user.friends).forEach((id: string) => {\r\n\t\t\tunsubscribes.push(checkOnline(id, setOnlineFriend));\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tunsubscribes.forEach(\r\n\t\t\t\t(unsubscribe: Unsubscribe | undefined) => unsubscribe && unsubscribe()\r\n\t\t\t);\r\n\t\t\tclearOnlineFriends();\r\n\t\t};\r\n\t}, [clearOnlineFriends, setOnlineFriend, myUser.user.friends]);\r\n\r\n\treturn (\r\n\t\t<Tabs\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\ttabPosition={isSmallScreen ? 'top' : 'left'}\r\n\t\t\tactiveKey={activeKey}\r\n\t\t\tdestroyInactiveTabPane\r\n\t\t\tonChange={setActiveKey}\r\n\t\t\titems={[\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: '0',\r\n\t\t\t\t\tlabel: languages.chats[language],\r\n\t\t\t\t\ticon: <CommentOutlined />,\r\n\t\t\t\t\tchildren: <Chats />,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: '1',\r\n\t\t\t\t\tlabel: languages.friends[language],\r\n\t\t\t\t\ticon: <TeamOutlined />,\r\n\t\t\t\t\tchildren: <Friends />,\r\n\t\t\t\t},\r\n\t\t\t]}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default Community;\r\n"],"names":["getTitleComponents","title","type","isInOverlaps","isSmallScreen","editable","index","_jsx","_Fragment","children","Typography","Text","undefined","style","fontSize","ellipsis","strong","MyTitle","language","overlaps","markedTitles","split","map","char","some","_ref","start","end","languages","noTitle","Flex","inlineSize","opacity","uniqid","MyImage","image","toggleOpened","Tooltip","color","placement","startsWith","Image","preview","src","borderRadius","blockSize","objectFit","Avatar","cursor","background","size","icon","noImage","onClick","FrownOutlined","MyDate","date","extra","_jsxs","align","Statistic","value","dayjs","format","scale","MyCategory","category","vertical","Tag","margin","filter","name","MyPrice","price","currency","justify","getSymbolAndPrice","Math","round","MyIcon","Icon","small","light","trigger","avatar","overlayInnerStyle","padding","boxShadow","MyCheckbox","selected","arguments","length","handleSelection","deleteAll","restoreAll","gap","Button","deleteSelected","restoreSelected","Checkbox","onChange","checked","MySearch","loading","Search","allowClear","tooltipTitle","createdAt","updatedAt","concat","addFriendToChatSelect","handleChange","friends","chatInfo","friendsToShow","Object","keys","key","members","includes","Select","mode","labelInValue","showSearch","options","label","ChatList","observer","selectedChatId","setCurrentChatId","myUser","communityStore","user","List","chats","ChatListItem","id","_ref2","userStore","userOptions","optionsStore","setChatInfo","useState","useEffect","getChatInfo","useCallback","Item","newChat","setNewChat","users","handleTitleChange","event","prevChat","target","handleUsersChange","_","option","Array","isArray","addChatForm","useMemo","Form","layout","Input","required","onInput","CloseOutlined","CheckOutlined","createChat","PlusOutlined","chatId","scrollbarsRef","stuck","hasNewMessages","message","setMessage","send","sendMessage","then","_scrollbarsRef$curren","current","scrollToBottom","scrollDownArrow","ArrowDownOutlined","_scrollbarsRef$curren2","chatInput","enterButton","SendOutlined","onSearch","position","paddingInline","right","bottom","Badge","dot","setSelected","inviteFriendsToChat","handleDeleting","deleteChat","handleExit","exitFromChat","chatTitle","goBackArrow","ArrowLeftOutlined","prevSelected","icons","Popconfirm","exitChatConfirm","onConfirm","LogoutOutlined","deleteChatConfirm","DeleteOutlined","InfoCircleOutlined","moreIcon","MoreOutlined","CurrentChat","setChatId","messages","setMessages","onlineFriends","useRef","stuckToBottom","setStuckToBottom","setHasNewMessages","selectedMessages","setSelectedMessages","onUpdate","values","top","clientHeight","scrollHeight","select","deselect","item","edit","messageId","text","editMessage","remove","deleteMessage","unsubscribe","getChatMessages","Divider","height","CurrentChatHeader","Scrollbars","autoHide","ref","MessageItem","online","sender","ChatInput","sentAt","editMode","setEditMode","currentText","setCurrentText","enterEditMode","exitEditModeWithCancel","exitEditModeWithSubmit","isMyMessage","submitIcon","cancelIcon","editIcon","EditOutlined","editMessageIcons","deleteMessageIcon","onlineDot","HeartFilled","titleWithDot","flexDirection","messageArea","TextArea","variant","autoSize","showCount","formatter","styles","count","marginInlineEnd","pointerEvents","onContextMenu","communityOptions","setLastSelectedChatId","lastSelectedChatId","currentChatId","chatList","ChatListHeader","userId","setUser","handleSearch","findUser","catch","debouncedHandleSearch","debounce","constants","optionsDebounceDelay","UserItem","UID","sentFriendRequests","UserDeleteOutlined","cancelRequest","alreadyFriends","cancelRequestConfirm","UserAddOutlined","sendRequest","friendRequests","isModalOpened","setIsModalOpened","openModal","closeModal","Segmented","requests","myRequests","SearchOutlined","searchFriends","Drawer","open","onClose","UserSelect","UsersList","setMode","list","UserModeSelect","Col","span","removeFriendConfirm","removeFriend","acceptRequestConfirm","acceptRequest","declineRequestConfirm","declineRequest","setOnlineFriend","clearOnlineFriends","activeKey","setActiveKey","unsubscribes","forEach","push","checkOnline","Tabs","tabPosition","destroyInactiveTabPane","items","CommentOutlined","Chats","TeamOutlined","Friends"],"sourceRoot":""}