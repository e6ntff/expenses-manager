{"version":3,"file":"static/js/523.c2d8de24.chunk.js","mappings":"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","sources":["components/DiagramBar.tsx","components/DiagramPie.tsx","components/CalendarModal.tsx","pages/Stats.tsx","utils/transformData.ts","utils/utils.ts"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport { ExpenseItem, Interval } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport languages from 'settings/languages';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport { Flex } from 'antd';\r\nimport {\r\n\tChart,\r\n\tTooltip,\r\n\tBarController,\r\n\tBarElement,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n} from 'chart.js';\r\nimport {\r\n\tgetValuesForBarDiagramByMonth,\r\n\tgetValuesForBarDiagramByYear,\r\n} from 'utils/transformData';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nChart.register(Tooltip, BarController, BarElement, CategoryScale, LinearScale);\r\n\r\ninterface Props {\r\n\tlist: ExpenseItem[];\r\n\tinterval: Interval;\r\n\tsetInterval: (arg0: number | null) => void;\r\n}\r\n\r\nconst DiagramBar: React.FC<Props> = observer(\r\n\t({ list, interval, setInterval }) => {\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { statsOptions, userOptions } = optionsStore;\r\n\t\tconst { currency, language } = userOptions;\r\n\r\n\t\tconst { year } = statsOptions;\r\n\r\n\t\tconst values: number[] | { [key: string]: number } = useMemo(() => {\r\n\t\t\tif (interval === 'year')\r\n\t\t\t\treturn getValuesForBarDiagramByYear(list, currency);\r\n\t\t\treturn getValuesForBarDiagramByMonth(list, year, currency);\r\n\t\t}, [currency, list, interval, year]);\r\n\r\n\t\tconst data = {\r\n\t\t\tlabels:\r\n\t\t\t\tinterval === 'month' ? languages.months[language] : Object.keys(values),\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: getSymbolAndPrice(currency),\r\n\t\t\t\t\tdata: Object.values(values),\r\n\t\t\t\t\tbackgroundColor: '#f00',\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t};\r\n\r\n\t\tconst options = {\r\n\t\t\tplugins: {\r\n\t\t\t\tlegend: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tonClick: (_: any, chartElements: any) => {\r\n\t\t\t\tif (chartElements.length) {\r\n\t\t\t\t\tconst index = chartElements[0].index;\r\n\t\t\t\t\tsetInterval(interval === 'year' ? Number(data.labels[index]) : index);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetInterval(null);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<Flex style={{ inlineSize: isSmallScreen ? 'unset' : '50%' }}>\r\n\t\t\t\t<Bar\r\n\t\t\t\t\tdata={data}\r\n\t\t\t\t\toptions={options}\r\n\t\t\t\t/>\r\n\t\t\t</Flex>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default DiagramBar;\r\n","import React, { useMemo } from 'react';\r\nimport { ExpenseItem, Interval, Value } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { Flex } from 'antd';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport {\r\n\tChart,\r\n\tArcElement,\r\n\tPieController,\r\n\tTooltip,\r\n\tLegend,\r\n\tTitle,\r\n} from 'chart.js';\r\nimport {\r\n\tgetValuesForPieDiagramInCurrentDay,\r\n\tgetValuesForPieDiagramByMonth,\r\n\tgetValuesForPieDiagramByYear,\r\n} from 'utils/transformData';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nChart.register(ArcElement, PieController, Tooltip, Legend, Title);\r\n\r\ninterface Props {\r\n\tlist: ExpenseItem[];\r\n\tinterval: Interval;\r\n}\r\n\r\nconst DiagramPie: React.FC<Props> = observer(({ list, interval }) => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { statsOptions, userOptions } = optionsStore;\r\n\tconst { currency } = userOptions;\r\n\r\n\tconst { year, month, day } = statsOptions;\r\n\r\n\tconst valuesByCategory: Value[] = useMemo(() => {\r\n\t\tif (interval === 'year')\r\n\t\t\treturn getValuesForPieDiagramByYear(list, currency);\r\n\t\tif (interval === 'month')\r\n\t\t\treturn getValuesForPieDiagramByMonth(list, year, month, currency);\r\n\t\treturn getValuesForPieDiagramInCurrentDay(list, year, month, day, currency);\r\n\t}, [list, currency, interval, year, month, day]);\r\n\r\n\tconst [names, colors, values] = [\r\n\t\tvaluesByCategory.map((value: Value) => value.category.name),\r\n\t\tvaluesByCategory.map((value: Value) => value.category.color),\r\n\t\tvaluesByCategory.map((value: Value) => Math.round(value.value)),\r\n\t];\r\n\r\n\tconst data = {\r\n\t\tlabels: names,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: getSymbolAndPrice(currency),\r\n\t\t\t\tdata: values,\r\n\t\t\t\tbackgroundColor: colors,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tposition: 'right' as const,\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tstyle={{\r\n\t\t\t\tinlineSize: isSmallScreen || interval === 'day' ? 'unset' : '40%',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Pie\r\n\t\t\t\tdata={data}\r\n\t\t\t\toptions={options}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default DiagramPie;\r\n","import { Calendar, Flex, Modal, Typography } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport constants from 'settings/constants';\r\nimport { listStore } from 'utils/listStore';\r\nimport { getValuesForCalendar } from 'utils/transformData';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport DiagramPie from './DiagramPie';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\ninterface Props {\r\n\topened: boolean;\r\n\ttoggleOpened: () => void;\r\n}\r\n\r\nconst CalendarModal: React.FC<Props> = observer(({ opened, toggleOpened }) => {\r\n\tconst { list } = listStore;\r\n\tconst { statsOptions, userOptions, setYear, setMonth, setDay } = optionsStore;\r\n\r\n\tconst { currency } = userOptions;\r\n\tconst { year, month, day } = statsOptions;\r\n\r\n\tconst [isDiagramVisible, setIsDiagramVisible] = useState<boolean>(false);\r\n\r\n\tconst handleDateChange = (date: dayjs.Dayjs) => {\r\n\t\tsetYear(date.year());\r\n\t\tsetMonth(date.month());\r\n\t\tsetDay(date.date());\r\n\t};\r\n\r\n\tconst valuesByMonth = useMemo(\r\n\t\t() => getValuesForCalendar(list, currency, year, month),\r\n\t\t[year, month, currency, list]\r\n\t);\r\n\r\n\tconst valuesByDay = useMemo(\r\n\t\t() => getValuesForCalendar(list, currency, year, month, day),\r\n\t\t[year, month, day, currency, list]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (day && valuesByDay[day]) {\r\n\t\t\tsetIsDiagramVisible(true);\r\n\t\t} else {\r\n\t\t\tsetIsDiagramVisible(false);\r\n\t\t}\r\n\t}, [day, valuesByDay]);\r\n\r\n\tconst cellRender = (date: dayjs.Dayjs, info: any) => {\r\n\t\tconst index = info.type === 'date' ? date.date() : date.month();\r\n\t\tconst value =\r\n\t\t\tinfo.type === 'date' ? valuesByDay[index] : valuesByMonth[index];\r\n\t\treturn (\r\n\t\t\t<Flex\r\n\t\t\t\tvertical\r\n\t\t\t\tjustify='center'\r\n\t\t\t\talign='center'\r\n\t\t\t>\r\n\t\t\t\t<Typography.Text strong>\r\n\t\t\t\t\t{value ? getSymbolAndPrice(currency, value) : '-'}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t</Flex>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\topen={opened}\r\n\t\t\tonCancel={toggleOpened}\r\n\t\t\tokButtonProps={{\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tdisplay: 'none',\r\n\t\t\t\t},\r\n\t\t\t}}\r\n\t\t\tcancelButtonProps={{\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tdisplay: 'none',\r\n\t\t\t\t},\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Flex\r\n\t\t\t\tvertical\r\n\t\t\t\talign='center'\r\n\t\t\t>\r\n\t\t\t\t<Calendar\r\n\t\t\t\t\tcellRender={cellRender}\r\n\t\t\t\t\tfullscreen={false}\r\n\t\t\t\t\tvalidRange={[constants.startDate, dayjs()]}\r\n\t\t\t\t\tvalue={dayjs(new Date(year as number, month || 0, day || 1))}\r\n\t\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\t/>\r\n\t\t\t\t{isDiagramVisible && (\r\n\t\t\t\t\t<DiagramPie\r\n\t\t\t\t\t\tlist={list}\r\n\t\t\t\t\t\tinterval='day'\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Flex>\r\n\t\t</Modal>\r\n\t);\r\n});\r\n\r\nexport default CalendarModal;\r\n","import React, { useState, useCallback, useMemo, memo, useEffect } from 'react';\r\nimport { ExpenseItem } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Button, Card, Empty, Flex, Spin, Statistic } from 'antd';\r\nimport DiagramBar from '../components/DiagramBar';\r\nimport DiagramPie from 'components/DiagramPie';\r\nimport languages from 'settings/languages';\r\nimport { userStore } from 'utils/userStore';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport { ArrowLeftOutlined, CalendarOutlined } from '@ant-design/icons';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport CalendarModal from 'components/CalendarModal';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst Stats: React.FC = observer(() => {\r\n\tconst { list } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { statsOptions, userOptions, setYear, setMonth, setDay } = optionsStore;\r\n\tconst { language, currency } = userOptions;\r\n\r\n\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\r\n\tconst { year, month } = statsOptions;\r\n\r\n\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t}, [setIsModalOpened]);\r\n\r\n\tconst total = useMemo(\r\n\t\t() =>\r\n\t\t\tlist.reduce(\r\n\t\t\t\t(acc: number, item: ExpenseItem) => acc + item.price[currency],\r\n\t\t\t\t0\r\n\t\t\t),\r\n\t\t[list, currency]\r\n\t);\r\n\r\n\tconst filteredList = useMemo(\r\n\t\t() => list.filter((item: ExpenseItem) => item.date.year() === year),\r\n\t\t[year, list]\r\n\t);\r\n\r\n\tconst getTotalInCurrentInterval = useCallback(\r\n\t\t(month?: number | null) =>\r\n\t\t\tfilteredList.reduce((acc: number, item: ExpenseItem) => {\r\n\t\t\t\tif (item.date.month() === month || !month) {\r\n\t\t\t\t\treturn acc + item.price[currency];\r\n\t\t\t\t}\r\n\t\t\t\treturn acc;\r\n\t\t\t}, 0),\r\n\t\t[filteredList, currency]\r\n\t);\r\n\r\n\tconst goBack = useCallback(() => {\r\n\t\tif (month) {\r\n\t\t\tsetMonth(null);\r\n\t\t\tsetDay(null);\r\n\t\t} else if (year) {\r\n\t\t\tsetYear(null);\r\n\t\t}\r\n\t}, [setMonth, setYear, setDay, month, year]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst goBackWithEsc = (event: KeyboardEvent) => {\r\n\t\t\tif (event.key === 'Escape' && !isModalOpened) {\r\n\t\t\t\tgoBack();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\twindow.addEventListener('keydown', goBackWithEsc);\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('keydown', goBackWithEsc);\r\n\t\t};\r\n\t}, [goBack, isModalOpened]);\r\n\r\n\treturn listStore.loading || categoryStore.loading ? (\r\n\t\t<Flex justify='center'>\r\n\t\t\t<Spin />\r\n\t\t</Flex>\r\n\t) : list.length ? (\r\n\t\t<>\r\n\t\t\t<Flex gap={16}>\r\n\t\t\t\t{year && (\r\n\t\t\t\t\t<Flex\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tjustify='space-between'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Button onClick={goBack}>\r\n\t\t\t\t\t\t\t<ArrowLeftOutlined />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button onClick={toggleIsModalOpened}>\r\n\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t)}\r\n\t\t\t\t<Card\r\n\t\t\t\t\tbordered={false}\r\n\t\t\t\t\tsize='small'\r\n\t\t\t\t>\r\n\t\t\t\t\t<Statistic\r\n\t\t\t\t\t\ttitle={`${\r\n\t\t\t\t\t\t\tyear ? languages.In[language] : languages.total[language]\r\n\t\t\t\t\t\t} ${month !== null ? languages.months[language][month] : ''} ${\r\n\t\t\t\t\t\t\tyear || ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tvalue={Math.round(year ? getTotalInCurrentInterval(month) : total)}\r\n\t\t\t\t\t\tprefix={getSymbolAndPrice(currency)}\r\n\t\t\t\t\t\tvalueStyle={{ color: '#f00' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<CalendarModal\r\n\t\t\t\t\topened={isModalOpened}\r\n\t\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\t/>\r\n\t\t\t</Flex>\r\n\t\t\t<Flex\r\n\t\t\t\talign='center'\r\n\t\t\t\tjustify='space-between'\r\n\t\t\t\tstyle={{ flexDirection: isSmallScreen ? 'column-reverse' : 'row' }}\r\n\t\t\t>\r\n\t\t\t\t{year ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<DiagramBar\r\n\t\t\t\t\t\t\tlist={filteredList}\r\n\t\t\t\t\t\t\tinterval='month'\r\n\t\t\t\t\t\t\tsetInterval={setMonth}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<DiagramPie\r\n\t\t\t\t\t\t\tlist={filteredList}\r\n\t\t\t\t\t\t\tinterval='month'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<DiagramBar\r\n\t\t\t\t\t\t\tlist={list}\r\n\t\t\t\t\t\t\tinterval='year'\r\n\t\t\t\t\t\t\tsetInterval={setYear}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<DiagramPie\r\n\t\t\t\t\t\t\tlist={list}\r\n\t\t\t\t\t\t\tinterval='year'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Flex>\r\n\t\t</>\r\n\t) : (\r\n\t\t<Empty\r\n\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\tdescription={''}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default memo(Stats);\r\n","import {\r\n\tExpenseItem,\r\n\tListOptions,\r\n\tValue,\r\n\tcategory,\r\n\tlanguage,\r\n} from 'settings/interfaces';\r\nimport { sortBy } from './utils';\r\n\r\nexport const getFilteredList = (\r\n\toptions: ListOptions,\r\n\tlist: ExpenseItem[],\r\n\tlanguage: language\r\n) => {\r\n\tconst { years, categoriesToFilter, sortingAlgorithm, isSortingReversed } =\r\n\t\toptions;\r\n\tif (years || categoriesToFilter) {\r\n\t\treturn sortBy(\r\n\t\t\tlist.filter((item: ExpenseItem) => {\r\n\t\t\t\tif (!categoriesToFilter.length && years.length)\r\n\t\t\t\t\treturn years.some(\r\n\t\t\t\t\t\t(year: string) => item.date.year().toString() === year\r\n\t\t\t\t\t);\r\n\t\t\t\tif (!years.length && categoriesToFilter.length)\r\n\t\t\t\t\treturn categoriesToFilter.some(\r\n\t\t\t\t\t\t(category: category) => item.category.id === category.id\r\n\t\t\t\t\t);\r\n\t\t\t\tif (years.length && categoriesToFilter.length)\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\tyears.some(\r\n\t\t\t\t\t\t\t(year: string) => item.date.year().toString() === year\r\n\t\t\t\t\t\t) &&\r\n\t\t\t\t\t\tcategoriesToFilter.some(\r\n\t\t\t\t\t\t\t(category: category) => item.category.id === category.id\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\treturn item;\r\n\t\t\t}),\r\n\t\t\tsortingAlgorithm,\r\n\t\t\tisSortingReversed,\r\n\t\t\tlanguage\r\n\t\t);\r\n\t} else {\r\n\t\treturn sortBy(list, sortingAlgorithm, isSortingReversed, language);\r\n\t}\r\n};\r\n\r\nexport const getListToShowOnCurrentPage = (\r\n\toptions: ListOptions,\r\n\tfilteredList: ExpenseItem[]\r\n) => {\r\n\tconst { currentPage, pageSize } = options;\r\n\tconst startIndex = (currentPage - 1) * pageSize;\r\n\tconst endIndex = startIndex + pageSize;\r\n\treturn filteredList.slice(startIndex, endIndex);\r\n};\r\n\r\nexport const getValuesForCalendar = (\r\n\tlist: ExpenseItem[],\r\n\tcurrency: string,\r\n\tyear: number | null,\r\n\tmonth: number | null,\r\n\tday?: number | null\r\n) => {\r\n\tconst result: number[] = new Array(day === undefined ? 12 : 31).fill(0);\r\n\tlist.forEach((item: ExpenseItem) => {\r\n\t\tif (day === undefined) {\r\n\t\t\tif (item.date.year() === year)\r\n\t\t\t\tresult[item.date.month()] += item.price[currency];\r\n\t\t} else {\r\n\t\t\tif (item.date.year() === year && item.date.month() === month)\r\n\t\t\t\tresult[item.date.date()] += item.price[currency];\r\n\t\t}\r\n\t}, []);\r\n\treturn result.map((value: number) => Math.round(value));\r\n};\r\n\r\nexport const getValuesForBarDiagramByYear = (\r\n\tlist: ExpenseItem[],\r\n\tcurrency: string\r\n) => {\r\n\tconst result: { [key: string]: number } = {};\r\n\tlist.forEach((item: ExpenseItem) => {\r\n\t\tconst key = item.date.year().toString();\r\n\t\tif (result[key] === undefined) {\r\n\t\t\tresult[key] = 0;\r\n\t\t} else {\r\n\t\t\tresult[key] += item.price[currency];\r\n\t\t}\r\n\t});\r\n\r\n\tfor (let year in result) {\r\n\t\tresult[year] = Math.round(result[year]);\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\nexport const getValuesForBarDiagramByMonth = (\r\n\tlist: ExpenseItem[],\r\n\tyear: number | null,\r\n\tcurrency: string\r\n) => {\r\n\tconst result: number[] = new Array(12).fill(0);\r\n\tlist.forEach((item: ExpenseItem) => {\r\n\t\tif (item.date.year() === year) {\r\n\t\t\tconst key = item.date.month();\r\n\t\t\tresult[key] += item.price[currency];\r\n\t\t}\r\n\t});\r\n\treturn result.map((value: number) => Math.round(value));\r\n};\r\n\r\nexport const getValuesForPieDiagramByYear = (\r\n\tlist: ExpenseItem[],\r\n\tcurrency: string\r\n) => {\r\n\tconst values: Value[] = [];\r\n\tlist.forEach((item: ExpenseItem) => {\r\n\t\tconst indexOfCategory: number = values.findIndex(\r\n\t\t\t(value: Value) => value.category.id === item.category.id\r\n\t\t);\r\n\t\tif (indexOfCategory !== -1) {\r\n\t\t\tvalues[indexOfCategory].value += item.price[currency];\r\n\t\t} else {\r\n\t\t\tvalues.push({\r\n\t\t\t\tcategory: item.category,\r\n\t\t\t\tvalue: item.price[currency],\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\treturn values.map((value: Value) => ({\r\n\t\t...value,\r\n\t\tvalue: Math.round(value.value),\r\n\t}));\r\n};\r\n\r\nexport const getValuesForPieDiagramByMonth = (\r\n\tlist: ExpenseItem[],\r\n\tyear: number | null,\r\n\tmonth: number | null,\r\n\tcurrency: string\r\n) => {\r\n\tconst values: Value[] = [];\r\n\tlist.forEach((item: ExpenseItem) => {\r\n\t\tconst indexOfCategory: number = values.findIndex(\r\n\t\t\t(value: Value) => value.category.id === item.category.id\r\n\t\t);\r\n\t\tif (\r\n\t\t\titem.date.year() === year &&\r\n\t\t\t(month !== null ? item.date.month() === month : true)\r\n\t\t) {\r\n\t\t\tif (indexOfCategory !== -1) {\r\n\t\t\t\tvalues[indexOfCategory].value += item.price[currency];\r\n\t\t\t} else {\r\n\t\t\t\tvalues.push({\r\n\t\t\t\t\tcategory: item.category,\r\n\t\t\t\t\tvalue: item.price[currency],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn values.map((value: Value) => ({\r\n\t\t...value,\r\n\t\tvalue: Math.round(value.value),\r\n\t}));\r\n};\r\n\r\nexport const getValuesForPieDiagramInCurrentDay = (\r\n\tlist: ExpenseItem[],\r\n\tyear: number | null,\r\n\tmonth: number | null,\r\n\tday: number | null,\r\n\tcurrency: string\r\n) => {\r\n\tconst values: Value[] = [];\r\n\tlist.forEach((item: ExpenseItem) => {\r\n\t\tconst indexOfCategory: number = values.findIndex(\r\n\t\t\t(value: Value) => value.category.id === item.category.id\r\n\t\t);\r\n\t\tif (\r\n\t\t\titem.date.date() === day &&\r\n\t\t\titem.date.month() === month &&\r\n\t\t\titem.date.year() === year\r\n\t\t) {\r\n\t\t\tif (indexOfCategory !== -1) {\r\n\t\t\t\tvalues[indexOfCategory].value += item.price[currency];\r\n\t\t\t} else {\r\n\t\t\t\tvalues.push({\r\n\t\t\t\t\tcategory: item.category,\r\n\t\t\t\t\tvalue: item.price[currency],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn values.map((value: Value) => ({\r\n\t\t...value,\r\n\t\tvalue: Math.round(value.value),\r\n\t}));\r\n};\r\n","import { ExpenseItem, Sort, language } from 'settings/interfaces';\r\n\r\nexport const getSymbolAndPrice = (currency: string, price?: number) => {\r\n\tlet result = '';\r\n\tif (currency === 'USD') result += '$';\r\n\tif (currency === 'EUR') result += '€';\r\n\tif (currency === 'RUB') result += '₽';\r\n\r\n\tconst formattedPrice = Math.round(price as number)\r\n\t\t?.toString()\r\n\t\t.split('')\r\n\t\t.reverse()\r\n\t\t.reduce(\r\n\t\t\t(acc: string[], symbol: string, index: number) =>\r\n\t\t\t\tindex % 3 === 0 && index !== 0\r\n\t\t\t\t\t? [...acc, symbol + ',']\r\n\t\t\t\t\t: [...acc, symbol],\r\n\t\t\t[]\r\n\t\t)\r\n\t\t.reverse()\r\n\t\t.join('');\r\n\r\n\treturn price === undefined ? result : result + formattedPrice;\r\n};\r\n\r\nexport const sortBy = (\r\n\tlist: ExpenseItem[],\r\n\tsortingAlgorithm: Sort,\r\n\treversed: boolean,\r\n\tlanguage?: language\r\n) => {\r\n\tlet result: ExpenseItem[];\r\n\tswitch (sortingAlgorithm) {\r\n\t\tcase 'date':\r\n\t\t\tresult = [...list].sort(\r\n\t\t\t\t(prev: ExpenseItem, next: ExpenseItem) =>\r\n\t\t\t\t\tnext.date.valueOf() - prev.date.valueOf()\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'title':\r\n\t\t\tresult = [...list].sort((prev: ExpenseItem, next: ExpenseItem) =>\r\n\t\t\t\tprev.title.localeCompare(next.title, language, {\r\n\t\t\t\t\tsensitivity: 'base',\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'price':\r\n\t\t\tresult = [...list].sort(\r\n\t\t\t\t(prev: ExpenseItem, next: ExpenseItem) =>\r\n\t\t\t\t\tnext.price.USD - prev.price.USD\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tresult = [...list];\r\n\t}\r\n\r\n\treturn reversed ? result.reverse() : result;\r\n};\r\n"],"names":["Chart","register","Tooltip","BarController","BarElement","CategoryScale","LinearScale","observer","_ref","list","interval","setInterval","isSmallScreen","userStore","statsOptions","userOptions","optionsStore","currency","language","year","values","useMemo","getValuesForBarDiagramByYear","getValuesForBarDiagramByMonth","data","labels","languages","months","Object","keys","datasets","label","getSymbolAndPrice","backgroundColor","options","plugins","legend","display","onClick","_","chartElements","length","index","Number","_jsx","Flex","style","inlineSize","children","Bar","ArcElement","PieController","Legend","Title","month","day","valuesByCategory","getValuesForPieDiagramByYear","getValuesForPieDiagramByMonth","getValuesForPieDiagramInCurrentDay","names","colors","map","value","category","name","color","Math","round","Pie","position","opened","toggleOpened","listStore","setYear","setMonth","setDay","isDiagramVisible","setIsDiagramVisible","useState","valuesByMonth","getValuesForCalendar","valuesByDay","useEffect","Modal","open","onCancel","okButtonProps","cancelButtonProps","_jsxs","vertical","align","Calendar","cellRender","date","info","type","justify","Typography","Text","strong","fullscreen","validRange","constants","startDate","dayjs","Date","onChange","DiagramPie","Stats","isModalOpened","setIsModalOpened","toggleIsModalOpened","useCallback","prevValue","total","reduce","acc","item","price","filteredList","filter","getTotalInCurrentInterval","goBack","goBackWithEsc","event","key","window","addEventListener","removeEventListener","loading","categoryStore","Spin","_Fragment","gap","Button","ArrowLeftOutlined","CalendarOutlined","Card","bordered","size","Statistic","title","concat","In","prefix","valueStyle","CalendarModal","flexDirection","DiagramBar","Empty","image","PRESENTED_IMAGE_SIMPLE","description","memo","getFilteredList","years","categoriesToFilter","sortingAlgorithm","isSortingReversed","sortBy","some","toString","id","getListToShowOnCurrentPage","currentPage","pageSize","startIndex","endIndex","slice","result","Array","undefined","fill","forEach","indexOfCategory","findIndex","push","_Math$round","formattedPrice","split","reverse","symbol","join","reversed","sort","prev","next","valueOf","localeCompare","sensitivity","USD"],"sourceRoot":""}