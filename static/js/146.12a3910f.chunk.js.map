{"version":3,"file":"static/js/146.12a3910f.chunk.js","mappings":"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","sources":["components/CategorySelect.tsx","components/ImageUpload.tsx","components/ItemModal.tsx","components/Items.tsx","components/ListItem.tsx","components/SliderDiagram.tsx","components/YearSlider.tsx","components/ItemList.tsx","components/NewItemButton.tsx","components/CategoriesSelect.tsx","components/SortSelect.tsx","components/ModeSelect.tsx","components/Selectors.tsx","pages/Expenses.tsx"],"sourcesContent":["import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select } from 'antd';\r\nimport { EditFilled } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tid: string;\r\n\tonChange: (arg0: string) => void;\r\n}\r\n\r\nconst CategorySelect: React.FC<Props> = observer(({ id, onChange }) => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tstyle={{ minInlineSize: '7em' }}\r\n\t\t\tonChange={onChange}\r\n\t\t\tvalue={id}\r\n\t\t\tsuffixIcon={\r\n\t\t\t\t<EditFilled style={{ color: categories[id] && categories[id].color }} />\r\n\t\t\t}\r\n\t\t\toptions={Object.keys(categories)\r\n\t\t\t\t.filter((key: string) => !categories[key].deleted)\r\n\t\t\t\t.map((key: string) => ({\r\n\t\t\t\t\tlabel: categories[key].name,\r\n\t\t\t\t\tvalue: key,\r\n\t\t\t\t}))}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default CategorySelect;\r\n","import { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Image, Upload } from 'antd';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useState } from 'react';\r\n\r\ninterface Props {\r\n\timage: string | undefined;\r\n\tonChange: (arg0: string) => void;\r\n}\r\n\r\nconst ImageUpload: React.FC<Props> = observer(({ onChange, image }) => {\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\r\n\tconst getBase64 = (img: any, callback: any) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t};\r\n\r\n\tconst handleChange = useCallback(\r\n\t\t(info: any) => {\r\n\t\t\tif (info.file.status === 'uploading') {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t}\r\n\t\t\tif (info.file.status === 'done') {\r\n\t\t\t\tgetBase64(info.file.originFileObj, (url: any) => {\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tonChange(url);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t[setLoading, onChange]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<ImgCrop\r\n\t\t\tcropShape='round'\r\n\t\t\trotationSlider\r\n\t\t>\r\n\t\t\t<Upload\r\n\t\t\t\taction={'1'}\r\n\t\t\t\taccept='image/*'\r\n\t\t\t\tlistType='picture-circle'\r\n\t\t\t\tshowUploadList={false}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tmaxCount={1}\r\n\t\t\t>\r\n\t\t\t\t{image ? (\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\tborderRadius: '50px',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : loading ? (\r\n\t\t\t\t\t<LoadingOutlined style={{ scale: '1.5' }} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<PlusOutlined style={{ scale: '1.5' }} />\r\n\t\t\t\t)}\r\n\t\t\t</Upload>\r\n\t\t</ImgCrop>\r\n\t);\r\n});\r\n\r\nexport default ImageUpload;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport calculatePrices from '../utils/calculatePrices';\r\nimport { ExpenseItem } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport languages from 'settings/languages';\r\nimport { Col, DatePicker, Form, Input, Modal, Row } from 'antd';\r\nimport CurrencySelect from 'components/CurrencySelect';\r\nimport constants from 'settings/constants';\r\nimport dayjs from 'dayjs';\r\nimport CategorySelect from './CategorySelect';\r\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { listStore } from 'utils/listStore';\r\nimport ImageUpload from './ImageUpload';\r\nimport { convertToJpeg } from 'utils/utils';\r\n\r\ninterface Props {\r\n\topened: boolean;\r\n\tinitialItemId?: string;\r\n\ttoggleOpened: () => void;\r\n\tsubmitItem: (arg0: ExpenseItem) => void;\r\n}\r\n\r\nconst ItemModal: React.FC<Props> = observer(\r\n\t({ opened, initialItemId, toggleOpened, submitItem }) => {\r\n\t\tconst [currency, setCurrency] = useState(constants.baseCurrency);\r\n\t\tconst { currencyRates, isSmallScreen } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\t\tconst { list } = listStore;\r\n\r\n\t\tconst { language } = userOptions;\r\n\r\n\t\tconst initialItem = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tinitialItemId !== undefined ? list[initialItemId] : constants.emptyItem,\r\n\t\t\t[list, initialItemId]\r\n\t\t);\r\n\r\n\t\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(initialItem);\r\n\r\n\t\tconst handleTitleChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\ttitle: value,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleDateChange = useCallback(\r\n\t\t\t(value: dayjs.Dayjs) => {\r\n\t\t\t\tif (value)\r\n\t\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tdate: value.valueOf(),\r\n\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleCategoryChange = useCallback(\r\n\t\t\t(id: string) => {\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\tcategoryId: id,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handlePriceChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem) => {\r\n\t\t\t\t\tconst updatedItem = {\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tprice: {\r\n\t\t\t\t\t\t\t...prevItem.price,\r\n\t\t\t\t\t\t\t[currency]: Number(value),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...updatedItem,\r\n\t\t\t\t\t\tprice: calculatePrices(updatedItem.price, currencyRates, currency),\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentItem, currency, currencyRates]\r\n\t\t);\r\n\r\n\t\tconst handleImageChange = useCallback(\r\n\t\t\t(image: string) => {\r\n\t\t\t\tconvertToJpeg(image as string, 0.5).then((image: string) => {\r\n\t\t\t\t\tsetCurrentItem((prevItem) => ({\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\timage: image,\r\n\t\t\t\t\t}));\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tconst submitItemWithEnter = (event: KeyboardEvent) => {\r\n\t\t\t\tif (event.key === 'Enter' && opened) {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\twindow.addEventListener('keyup', submitItemWithEnter);\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t};\r\n\t\t}, [currentItem, submitItem, opened]);\r\n\r\n\t\tconst TitleJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={currentItem.title}\r\n\t\t\t\tonInput={handleTitleChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst PriceJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='number'\r\n\t\t\t\tmin='1'\r\n\t\t\t\tstep='1'\r\n\t\t\t\tvalue={Math.round(currentItem.price[currency])}\r\n\t\t\t\tonInput={handlePriceChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CurrencyJSX = (\r\n\t\t\t<CurrencySelect\r\n\t\t\t\tvalue={currency}\r\n\t\t\t\tsetCurrency={setCurrency}\r\n\t\t\t\tonChange={setCurrency}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst DateJSX = (\r\n\t\t\t<DatePicker\r\n\t\t\t\trequired\r\n\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\tvalue={dayjs(currentItem.date)}\r\n\t\t\t\tminDate={constants.startDate}\r\n\t\t\t\tmaxDate={dayjs()}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CategoryJSX = (\r\n\t\t\t<CategorySelect\r\n\t\t\t\tid={currentItem.categoryId}\r\n\t\t\t\tonChange={handleCategoryChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst ImageJSX = (\r\n\t\t\t<ImageUpload\r\n\t\t\t\timage={currentItem.image}\r\n\t\t\t\tonChange={handleImageChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\topen={opened}\r\n\t\t\t\tokButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tcancelButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tonOk={() => {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t}}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetCurrentItem(initialItem);\r\n\t\t\t\t\ttoggleOpened();\r\n\t\t\t\t}}\r\n\t\t\t\tokText={<CheckOutlined />}\r\n\t\t\t\tcancelText={<CloseOutlined />}\r\n\t\t\t>\r\n\t\t\t\t<Form\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tlayout='vertical'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Form.Item label={languages.title[language]}>{TitleJSX}</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.price[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={16}>{PriceJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={7}>{CurrencyJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.dateAndCat[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={10}>{DateJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={13}>{CategoryJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.image[language]}>{ImageJSX}</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default ItemModal;\r\n","import { FrownOutlined } from '@ant-design/icons';\r\nimport {\r\n\tAvatar,\r\n\tButton,\r\n\tCheckbox,\r\n\tFlex,\r\n\tImage,\r\n\tStatistic,\r\n\tTag,\r\n\tTooltip,\r\n\tTypography,\r\n} from 'antd';\r\nimport Title from 'antd/es/typography/Title';\r\nimport { category, currencies, language } from 'settings/interfaces';\r\nimport languages from 'settings/languages';\r\nimport dayjs from 'dayjs';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport React, { ComponentType, RefAttributes } from 'react';\r\nimport { CheckboxChangeEvent } from 'antd/es/checkbox';\r\nimport Search from 'antd/es/input/Search';\r\nimport uniqid from 'uniqid';\r\nimport { AntdIconProps } from '@ant-design/icons/lib/components/AntdIcon';\r\nimport { TooltipPlacement } from 'antd/es/tooltip';\r\n\r\nconst getTitleComponents = (\r\n\ttitle: string,\r\n\tisInOverlaps: boolean,\r\n\tisSmallScreen: boolean,\r\n\teditable: any,\r\n\tindex: number\r\n): React.ReactNode => {\r\n\tif (title === ' ') return <>&nbsp;</>;\r\n\treturn isSmallScreen ? (\r\n\t\t<Typography.Text\r\n\t\t\tkey={index}\r\n\t\t\teditable={editable}\r\n\t\t\tellipsis\r\n\t\t\tstrong\r\n\t\t\tmark={isInOverlaps}\r\n\t\t>\r\n\t\t\t{title}\r\n\t\t</Typography.Text>\r\n\t) : (\r\n\t\t<Title\r\n\t\t\tkey={index}\r\n\t\t\teditable={editable}\r\n\t\t\tellipsis\r\n\t\t\tlevel={3}\r\n\t\t\tstyle={{ margin: 0 }}\r\n\t\t\tmark={isInOverlaps}\r\n\t\t>\r\n\t\t\t{title}\r\n\t\t</Title>\r\n\t);\r\n};\r\n\r\nexport const MyTitle = (\r\n\ttitle: string,\r\n\tisSmallScreen: boolean,\r\n\tlanguage: language,\r\n\teditable: any,\r\n\toverlaps?: number[][]\r\n) => {\r\n\tconst markedTitles: React.ReactNode[] = overlaps\r\n\t\t? title.split('').map((char, index) => {\r\n\t\t\t\tconst isInOverlaps = overlaps.some(\r\n\t\t\t\t\t([start, end]) => index >= start && index <= end\r\n\t\t\t\t);\r\n\t\t\t\treturn getTitleComponents(\r\n\t\t\t\t\tchar,\r\n\t\t\t\t\tisInOverlaps,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\teditable,\r\n\t\t\t\t\tindex\r\n\t\t\t\t);\r\n\t\t  })\r\n\t\t: [\r\n\t\t\t\tgetTitleComponents(\r\n\t\t\t\t\ttitle || languages.noTitle[language],\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\teditable,\r\n\t\t\t\t\t0\r\n\t\t\t\t),\r\n\t\t  ];\r\n\r\n\treturn (\r\n\t\t<Tooltip\r\n\t\t\ttitle={title}\r\n\t\t\tkey={uniqid()}\r\n\t\t>\r\n\t\t\t<Flex\r\n\t\t\t\tjustify='center'\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\topacity: !title ? '.5' : '1',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{markedTitles}\r\n\t\t\t</Flex>\r\n\t\t</Tooltip>\r\n\t);\r\n};\r\n\r\nexport const MyImage = (\r\n\timage: string | undefined,\r\n\tisSmallScreen: boolean,\r\n\tlanguage: language,\r\n\ttoggleOpened?: () => void\r\n) =>\r\n\timage ? (\r\n\t\t<Tooltip\r\n\t\t\tcolor='#0005'\r\n\t\t\tplacement='right'\r\n\t\t\ttitle={\r\n\t\t\t\t!image.startsWith('#') && (\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborderRadius: '50%',\r\n\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Avatar\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\tbackground: image.startsWith('#') ? image : 'unset',\r\n\t\t\t\t}}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\ticon={\r\n\t\t\t\t\t<Flex\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{!image.startsWith('#') && (\r\n\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t) : (\r\n\t\t<Tooltip title={languages.noImage[language]}>\r\n\t\t\t<Avatar\r\n\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\tonClick={toggleOpened}\r\n\t\t\t\ticon={<FrownOutlined />}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n\r\nexport const MyDate = (date: number, isSmallScreen: boolean) => (\r\n\t<Statistic\r\n\t\tvalue={dayjs(date).format('DD.MM.YY')}\r\n\t\tstyle={{\r\n\t\t\tscale: isSmallScreen ? '.67' : '.75',\r\n\t\t}}\r\n\t/>\r\n);\r\n\r\nexport const MyCategory = (category: category) => (\r\n\t<Flex\r\n\t\tvertical\r\n\t\talign='stretch'\r\n\t>\r\n\t\t{category && (\r\n\t\t\t<Tag color={category.color}>\r\n\t\t\t\t<span\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmargin: 'auto',\r\n\t\t\t\t\t\tcolor: category.color,\r\n\t\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{category.name}\r\n\t\t\t\t</span>\r\n\t\t\t</Tag>\r\n\t\t)}\r\n\t</Flex>\r\n);\r\n\r\nexport const MyPrice = (\r\n\tprice: currencies,\r\n\tisSmallScreen: boolean,\r\n\tcurrency: string\r\n) => (\r\n\t<Flex justify='center'>\r\n\t\t{isSmallScreen ? (\r\n\t\t\t<Typography.Text strong>\r\n\t\t\t\t{getSymbolAndPrice(currency)}\r\n\t\t\t\t{Math.round(price[currency])}\r\n\t\t\t</Typography.Text>\r\n\t\t) : (\r\n\t\t\t<Title\r\n\t\t\t\tlevel={3}\r\n\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t>\r\n\t\t\t\t{getSymbolAndPrice(currency, price[currency])}\r\n\t\t\t</Title>\r\n\t\t)}\r\n\t</Flex>\r\n);\r\n\r\nexport const MyIconWithTooltip = (\r\n\ttitle: string | React.JSX.Element,\r\n\tisSmallScreen: boolean,\r\n\tIcon: ComponentType<\r\n\t\tOmit<AntdIconProps, 'ref'> & RefAttributes<HTMLSpanElement>\r\n\t>,\r\n\tlight: boolean,\r\n\tonClick?: () => void,\r\n\tplacement?: TooltipPlacement\r\n) => (\r\n\t<Tooltip\r\n\t\tplacement={placement}\r\n\t\ttitle={title}\r\n\t\tcolor={light ? '#0005' : undefined}\r\n\t>\r\n\t\t<Icon\r\n\t\t\tonClick={onClick}\r\n\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.25' }}\r\n\t\t/>\r\n\t</Tooltip>\r\n);\r\n\r\nexport const MyCheckbox = (\r\n\tselected: boolean = false,\r\n\tlanguage: language,\r\n\tisSmallScreen: boolean,\r\n\thandleSelection: (event: CheckboxChangeEvent) => void = () => {},\r\n\tdeleteAll?: () => void,\r\n\trestoreAll?: () => void\r\n) => (\r\n\t<Tooltip\r\n\t\tcolor='#0000'\r\n\t\ttitle={\r\n\t\t\tselected ? (\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\tgap={isSmallScreen ? 4 : 8}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={deleteAll}\r\n\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{languages.deleteSelected[language]}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{restoreAll && (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={restoreAll}\r\n\t\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{languages.restoreSelected[language]}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Flex>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)\r\n\t\t}\r\n\t>\r\n\t\t<Checkbox\r\n\t\t\tonChange={handleSelection}\r\n\t\t\tchecked={selected}\r\n\t\t/>\r\n\t</Tooltip>\r\n);\r\n\r\nexport const MySearch = (\r\n\tonChange: (arg0: React.ChangeEvent<HTMLInputElement>) => void,\r\n\tvalue: string,\r\n\tloading: boolean,\r\n\tisSmallScreen: boolean\r\n) => (\r\n\t<Search\r\n\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\tallowClear\r\n\t\tonChange={onChange}\r\n\t\tvalue={value}\r\n\t\tloading={loading}\r\n\t/>\r\n);\r\n","import React, { useState, useCallback, useMemo } from 'react';\r\nimport { ExpenseItem, ItemWithSearch, Mode } from '../settings/interfaces';\r\nimport Item from 'antd/es/list/Item';\r\nimport { Card, Col, Flex } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport ItemModal from './ItemModal';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n\tMyCategory,\r\n\tMyCheckbox,\r\n\tMyDate,\r\n\tMyIconWithTooltip,\r\n\tMyImage,\r\n\tMyPrice,\r\n\tMyTitle,\r\n} from './Items';\r\nimport { CheckboxChangeEvent } from 'antd/es/checkbox';\r\nimport {\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tInfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\ninterface Props {\r\n\tmode: Mode;\r\n\tinitialItem: ItemWithSearch;\r\n\tdeleteAll?: () => void;\r\n\trestoreAll?: () => void;\r\n\thandleSelection?: (event: CheckboxChangeEvent) => void;\r\n\tselected?: boolean;\r\n\tdisabled?: boolean;\r\n}\r\n\r\nconst ListItem: React.FC<Props> = observer(\r\n\t({ mode, initialItem, deleteAll, handleSelection, selected, disabled }) => {\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { replaceItem, setLastDeletedItemIds, lastDeletedItemIds, list } =\r\n\t\t\tlistStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\t\tconst { categories } = categoryStore;\r\n\r\n\t\tconst { currency, language } = userOptions;\r\n\r\n\t\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\t\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(\r\n\t\t\tlist[initialItem.id]\r\n\t\t);\r\n\r\n\t\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t\t}, [setIsModalOpened]);\r\n\r\n\t\tconst updateCurrentItem = useCallback(\r\n\t\t\t(item: ExpenseItem) => {\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => {\r\n\t\t\t\t\tif (JSON.stringify(prevItem) !== JSON.stringify(item)) {\r\n\t\t\t\t\t\tconst newItem: ExpenseItem = {\r\n\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\tupdatedAt: dayjs().valueOf(),\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\treplaceItem(initialItem.id, newItem);\r\n\t\t\t\t\t\treturn newItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn prevItem;\r\n\t\t\t\t});\r\n\t\t\t\ttoggleIsModalOpened();\r\n\t\t\t},\r\n\t\t\t[setCurrentItem, replaceItem, toggleIsModalOpened, initialItem.id]\r\n\t\t);\r\n\r\n\t\tconst deleteItem = useCallback(() => {\r\n\t\t\tsetLastDeletedItemIds([...lastDeletedItemIds, initialItem.id]);\r\n\t\t}, [setLastDeletedItemIds, initialItem.id, lastDeletedItemIds]);\r\n\r\n\t\tconst ActionsJSX = (\r\n\t\t\t<Flex justify='space-evenly'>\r\n\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\tlanguages.edit[language],\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\tEditOutlined,\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\ttoggleIsModalOpened\r\n\t\t\t\t)}\r\n\t\t\t\t{MyPrice(currentItem.price, isSmallScreen, currency)}\r\n\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\tlanguages.delete[language],\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\tDeleteOutlined,\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\tdeleteItem\r\n\t\t\t\t)}\r\n\t\t\t</Flex>\r\n\t\t);\r\n\r\n\t\tconst ImageAndDateJSX = (\r\n\t\t\t<Flex align='center'>\r\n\t\t\t\t{MyImage(\r\n\t\t\t\t\tcurrentItem.image,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\tlanguage,\r\n\t\t\t\t\ttoggleIsModalOpened\r\n\t\t\t\t)}\r\n\t\t\t\t{MyDate(currentItem.date, isSmallScreen)}\r\n\t\t\t</Flex>\r\n\t\t);\r\n\r\n\t\tconst tooltipTitle = useMemo(() => {\r\n\t\t\tif (!currentItem.updatedAt) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{`${languages.createdAt[language]} ${dayjs(\r\n\t\t\t\t\t\t\tcurrentItem.createdAt\r\n\t\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{`${languages.createdAt[language]} ${dayjs(\r\n\t\t\t\t\t\t\tcurrentItem.createdAt\r\n\t\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t{`${languages.updatedAt[language]} ${dayjs(\r\n\t\t\t\t\t\t\tcurrentItem.updatedAt\r\n\t\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}, [currentItem, language]);\r\n\r\n\t\tconst CheckboxAndTitle = (\r\n\t\t\t<Flex>\r\n\t\t\t\t{MyCheckbox(\r\n\t\t\t\t\tselected,\r\n\t\t\t\t\tlanguage,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\thandleSelection,\r\n\t\t\t\t\tdeleteAll\r\n\t\t\t\t)}\r\n\t\t\t\t{MyTitle(\r\n\t\t\t\t\tcurrentItem.title,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\tlanguage,\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\tinitialItem.overlaps\r\n\t\t\t\t)}\r\n\t\t\t</Flex>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<ItemModal\r\n\t\t\t\t\topened={isModalOpened}\r\n\t\t\t\t\tinitialItemId={initialItem.id}\r\n\t\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\t\tsubmitItem={updateCurrentItem}\r\n\t\t\t\t/>\r\n\t\t\t\t{mode === 'list' ? (\r\n\t\t\t\t\t<Item style={{ pointerEvents: disabled ? 'none' : 'auto' }}>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyCheckbox(\r\n\t\t\t\t\t\t\t\tselected,\r\n\t\t\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\thandleSelection,\r\n\t\t\t\t\t\t\t\tdeleteAll\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>{ImageAndDateJSX}</Col>\r\n\t\t\t\t\t\t<Col span={8}>\r\n\t\t\t\t\t\t\t{MyTitle(\r\n\t\t\t\t\t\t\t\tcurrentItem.title,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\t\tinitialItem.overlaps\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={3}>{MyCategory(categories[currentItem.categoryId])}</Col>\r\n\t\t\t\t\t\t<Col span={5}>\r\n\t\t\t\t\t\t\t{MyPrice(currentItem.price, isSmallScreen, currency)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\tlanguages.edit[language],\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tEditOutlined,\r\n\t\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\t\ttoggleIsModalOpened\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\tlanguages.delete[language],\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tDeleteOutlined,\r\n\t\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\t\tdeleteItem\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\ttooltipTitle,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tInfoCircleOutlined,\r\n\t\t\t\t\t\t\t\tfalse\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Item>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\textra={[\r\n\t\t\t\t\t\t\tMyIconWithTooltip(\r\n\t\t\t\t\t\t\t\ttooltipTitle,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tInfoCircleOutlined,\r\n\t\t\t\t\t\t\t\tfalse\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\t\tbordered\r\n\t\t\t\t\t\ttitle={CheckboxAndTitle}\r\n\t\t\t\t\t\tactions={[ActionsJSX]}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tinlineSize: isSmallScreen ? '9em' : '12em',\r\n\t\t\t\t\t\t\tpointerEvents: disabled ? 'none' : 'auto',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Flex justify='center'>\r\n\t\t\t\t\t\t\t<Flex\r\n\t\t\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\t\t\talign='stretch'\r\n\t\t\t\t\t\t\t\tgap={4}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{ImageAndDateJSX}\r\n\t\t\t\t\t\t\t\t{MyCategory(categories[currentItem.categoryId])}\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default ListItem;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { memo, useMemo } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { getValuesByMonth } from 'utils/transformData';\r\n\r\nconst SliderDiagram: React.FC = observer(() => {\r\n\tconst { list } = listStore;\r\n\tconst { defaultRange } = optionsStore;\r\n\r\n\tconst valuesByMonth: number[] | { [key: string]: number } = useMemo(\r\n\t\t() => getValuesByMonth(list, defaultRange),\r\n\t\t[list, defaultRange]\r\n\t);\r\n\r\n\tconst data = {\r\n\t\tlabels: new Array(valuesByMonth.length).fill(''),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tdata: valuesByMonth,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tx: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\ty: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\telements: {\r\n\t\t\tpoint: {\r\n\t\t\t\tradius: 0,\r\n\t\t\t},\r\n\t\t\tline: {\r\n\t\t\t\tcubicInterpolationMode: 'monotone' as 'monotone',\r\n\t\t\t\tborderColor: '#7775',\r\n\t\t\t},\r\n\t\t},\r\n\t\taspectRatio: 25,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Line\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\tdata={data}\r\n\t\t\toptions={options}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default memo(SliderDiagram);\r\n","import React, { memo, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Slider } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport { ExpenseItem } from 'settings/interfaces';\r\nimport dayjs from 'dayjs';\r\nimport minMax from 'dayjs/plugin/minMax';\r\n\r\nimport {\r\n\tChart,\r\n\tTooltip,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tLineElement,\r\n\tLineController,\r\n\tPointElement,\r\n} from 'chart.js';\r\nimport SliderDiagram from './SliderDiagram';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nChart.register(\r\n\tTooltip,\r\n\tLineElement,\r\n\tLineController,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tPointElement\r\n);\r\n\r\ndayjs.extend(minMax);\r\n\r\ninterface Props {\r\n\trange: number[];\r\n\tsetRange: (arg0: number[]) => void;\r\n}\r\n\r\nconst YearSlider: React.FC<Props> = observer(({ range, setRange }) => {\r\n\tconst { list } = listStore;\r\n\tconst { defaultRange, setDefaultRange } = optionsStore;\r\n\r\n\tconst [value, setValue] = useState(defaultRange);\r\n\r\n\tconst sliderRange: [number, number] = useMemo(() => {\r\n\t\tconst dates = Object.values(list).map((item: ExpenseItem) => item.date);\r\n\t\treturn [Math.min(...dates), Math.max(...dates)];\r\n\t}, [list]);\r\n\r\n\tconst marks: { [key: number]: string } = useMemo(() => {\r\n\t\tconst start = dayjs(sliderRange[0]).startOf('day');\r\n\t\tconst end = dayjs(sliderRange[1]).endOf('day');\r\n\t\tconst marks: { [key: number]: string } = {};\r\n\t\tlet currentDate = start;\r\n\r\n\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'month')) {\r\n\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\tcurrentDate.month() === 0 ? currentDate.format('YYYY') : ' ';\r\n\t\t\tcurrentDate = currentDate.add(1, 'month').startOf('month');\r\n\t\t}\r\n\t\treturn marks;\r\n\t}, [sliderRange]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetDefaultRange(sliderRange);\r\n\t}, [sliderRange, setDefaultRange]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRange(defaultRange);\r\n\t}, [defaultRange, setRange]);\r\n\r\n\tconst handleRangeChanging = useCallback(\r\n\t\t(values: number[]) => {\r\n\t\t\tsetRange(values);\r\n\t\t},\r\n\t\t[setRange]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetValue(range);\r\n\t}, [range]);\r\n\r\n\treturn dayjs(defaultRange[1]).diff(dayjs(defaultRange[0]), 'hours') >= 48 ? (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\talign='stretch'\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t>\r\n\t\t\t<SliderDiagram />\r\n\t\t\t<Slider\r\n\t\t\t\trange\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tmarks={marks}\r\n\t\t\t\tstep={null}\r\n\t\t\t\tdots={true}\r\n\t\t\t\ttooltip={{\r\n\t\t\t\t\tformatter: (value: number | undefined) =>\r\n\t\t\t\t\t\tdayjs(value).format('MM.YY'),\r\n\t\t\t\t}}\r\n\t\t\t\tmin={sliderRange[0]}\r\n\t\t\t\tmax={sliderRange[1]}\r\n\t\t\t\tdefaultValue={defaultRange}\r\n\t\t\t\tonChange={setValue}\r\n\t\t\t\tonChangeComplete={handleRangeChanging}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t) : (\r\n\t\t<></>\r\n\t);\r\n});\r\n\r\nexport default memo(YearSlider);\r\n","import React, { memo, useCallback, useMemo, useState } from 'react';\r\nimport ListItem from './ListItem';\r\nimport { ItemWithSearch, ListOptions } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Empty, Flex, List, Space } from 'antd';\r\nimport { getListToShowOnCurrentPageIds } from 'utils/transformData';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport LargeSpin from './LargeSpin';\r\nimport { listStore } from 'utils/listStore';\r\nimport { CheckboxChangeEvent } from 'antd/es/checkbox';\r\nimport { debounce } from 'lodash';\r\n\r\ninterface Props {\r\n\tfilteredListIds: ItemWithSearch[];\r\n}\r\n\r\nconst ItemList: React.FC<Props> = observer(({ filteredListIds }) => {\r\n\tconst { loading, isSmallScreen, tourRefs } = userStore;\r\n\tconst { listOptions } = optionsStore;\r\n\tconst { lastDeletedItemIds, setLastDeletedItemIds } = listStore;\r\n\r\n\tconst [selectedItemIds, setSelectedItemIds] = useState<string[]>([]);\r\n\r\n\tconst deleteSelectedItems = useCallback(() => {\r\n\t\tsetSelectedItemIds((prevSelected: string[]) => {\r\n\t\t\tsetLastDeletedItemIds([...lastDeletedItemIds, ...prevSelected]);\r\n\t\t\treturn [];\r\n\t\t});\r\n\t}, [setLastDeletedItemIds, lastDeletedItemIds]);\r\n\r\n\tconst handleSelection = useCallback(\r\n\t\t(id: string) => (event: CheckboxChangeEvent) => {\r\n\t\t\tconst value = event.target.checked;\r\n\t\t\tvalue\r\n\t\t\t\t? setSelectedItemIds((prevSelected: string[]) => [...prevSelected, id])\r\n\t\t\t\t: setSelectedItemIds((prevSelected: string[]) =>\r\n\t\t\t\t\t\tprevSelected.filter((item: string) => item !== id)\r\n\t\t\t\t  );\r\n\t\t},\r\n\t\t[setSelectedItemIds]\r\n\t);\r\n\r\n\tconst debouncedOptions: ListOptions =\r\n\t\tdebounce(() => listOptions)() || listOptions;\r\n\r\n\tconst listToShowOnCurrentPageIds = useMemo(\r\n\t\t() =>\r\n\t\t\tgetListToShowOnCurrentPageIds(debouncedOptions, filteredListIds).filter(\r\n\t\t\t\t(value: ItemWithSearch) => !lastDeletedItemIds.includes(value.id)\r\n\t\t\t),\r\n\t\t[filteredListIds, debouncedOptions, lastDeletedItemIds]\r\n\t);\r\n\r\n\tconst Item = (value: ItemWithSearch) => (\r\n\t\t<ListItem\r\n\t\t\tkey={value.id}\r\n\t\t\tmode={debouncedOptions.mode}\r\n\t\t\tdeleteAll={deleteSelectedItems}\r\n\t\t\thandleSelection={handleSelection(value.id)}\r\n\t\t\tinitialItem={value}\r\n\t\t\tselected={selectedItemIds.includes(value.id)}\r\n\t\t/>\r\n\t);\r\n\r\n\treturn loading ? (\r\n\t\t<LargeSpin />\r\n\t) : !filteredListIds.length ? (\r\n\t\t<Empty\r\n\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\tdescription={''}\r\n\t\t/>\r\n\t) : debouncedOptions.mode === 'list' ? (\r\n\t\t<Flex\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\tref={tourRefs[1]}\r\n\t\t>\r\n\t\t\t<List style={{ inlineSize: '100%' }}>\r\n\t\t\t\t{listToShowOnCurrentPageIds.map((value: ItemWithSearch) => Item(value))}\r\n\t\t\t</List>\r\n\t\t</Flex>\r\n\t) : (\r\n\t\t<Space\r\n\t\t\tref={tourRefs[1]}\r\n\t\t\twrap\r\n\t\t\tsize={isSmallScreen ? 8 : 16}\r\n\t\t>\r\n\t\t\t{listToShowOnCurrentPageIds.map((value: ItemWithSearch) => Item(value))}\r\n\t\t</Space>\r\n\t);\r\n});\r\n\r\nexport default memo(ItemList);\r\n","import React, { useCallback, useState } from 'react';\r\nimport { ExpenseItem } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button, Tooltip } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport ItemModal from './ItemModal';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport dayjs from 'dayjs';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst NewItemButton: React.FC = observer(() => {\r\n\tconst { addItem } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { userOptions } = optionsStore;\r\n\r\n\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\r\n\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t}, [setIsModalOpened]);\r\n\r\n\tconst addNewItem = useCallback(\r\n\t\t(item: ExpenseItem) => {\r\n\t\t\tconst date = dayjs().valueOf();\r\n\t\t\taddItem({ ...item, createdAt: date });\r\n\t\t\ttoggleIsModalOpened();\r\n\t\t},\r\n\t\t[addItem, toggleIsModalOpened]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.newItem[userOptions.language]}>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={toggleIsModalOpened}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<PlusOutlined />\r\n\t\t\t</Button>\r\n\t\t\t<ItemModal\r\n\t\t\t\topened={isModalOpened}\r\n\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\tsubmitItem={addNewItem}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default NewItemButton;\r\n","import React from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select, Tag, Tooltip } from 'antd';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst tagRender = (props: any, categories: { [key: number]: category }) => {\r\n\tconst { label, value, onClose } = props;\r\n\tconst onPreventMouseDown = (event: any) => {\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\t};\r\n\tconst color =\r\n\t\tObject.keys(categories).length > 1 ? categories[value].color : '';\r\n\r\n\treturn (\r\n\t\t<Tag\r\n\t\t\tcolor={color}\r\n\t\t\tonMouseDown={onPreventMouseDown}\r\n\t\t\tclosable={true}\r\n\t\t\tonClose={onClose}\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginInlineEnd: 4,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<span\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcolor: color,\r\n\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{label}\r\n\t\t\t</span>\r\n\t\t</Tag>\r\n\t);\r\n};\r\n\r\nconst CategoriesSelect: React.FC = observer(() => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleCategoriesToFilterChange, userOptions } =\r\n\t\toptionsStore;\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.categoriesSelect[userOptions.language]}>\r\n\t\t\t<Select\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tmode='multiple'\r\n\t\t\t\tshowSearch={false}\r\n\t\t\t\ttagRender={(props) => tagRender(props, categories)}\r\n\t\t\t\tstyle={{ minInlineSize: '10em' }}\r\n\t\t\t\tvalue={listOptions.categoriesToFilterIds}\r\n\t\t\t\tonChange={handleCategoriesToFilterChange}\r\n\t\t\t\toptions={Object.keys(categories)\r\n\t\t\t\t\t.filter((key: string) => !categories[key].deleted)\r\n\t\t\t\t\t.map((key: string) => ({\r\n\t\t\t\t\t\tlabel: categories[key].name,\r\n\t\t\t\t\t\tvalue: key,\r\n\t\t\t\t\t}))}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default CategoriesSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Tooltip } from 'antd';\r\nimport {\r\n\tCalendarOutlined,\r\n\tDollarOutlined,\r\n\tFontColorsOutlined,\r\n\tSortAscendingOutlined,\r\n\tSortDescendingOutlined,\r\n} from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst SortSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst {\r\n\t\tsetIsSortingReversed,\r\n\t\tlistOptions,\r\n\t\tuserOptions,\r\n\t\thandleSortAlgorithmChanging,\r\n\t} = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t<Tooltip title={languages.sort.reverse[userOptions.language]}>\r\n\t\t\t\t{listOptions.isSortingReversed ? (\r\n\t\t\t\t\t<SortDescendingOutlined\r\n\t\t\t\t\t\tonClick={() => setIsSortingReversed(!listOptions.isSortingReversed)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<SortAscendingOutlined\r\n\t\t\t\t\t\tonClick={() => setIsSortingReversed(!listOptions.isSortingReversed)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Tooltip>\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.sortingAlgorithm}\r\n\t\t\t\tonChange={handleSortAlgorithmChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byDate[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'date',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byTitle[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<FontColorsOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'title',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byPrice[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<DollarOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'price',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default SortSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Tooltip } from 'antd';\r\nimport { MenuOutlined, TableOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst ModeSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleModeChanging, userOptions } = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.mode}\r\n\t\t\t\tonChange={handleModeChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.layout.list[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<MenuOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'list',\r\n\t\t\t\t\t\tdisabled: isSmallScreen,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.layout.grid[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<TableOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'grid',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default ModeSelect;\r\n","import { Divider, Flex, Pagination } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, {\r\n\tChangeEvent,\r\n\tDispatch,\r\n\tSetStateAction,\r\n\tmemo,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseMemo,\r\n\tuseState,\r\n} from 'react';\r\nimport NewItemButton from './NewItemButton';\r\nimport YearSlider from './YearSlider';\r\nimport CategoriesSelect from './CategoriesSelect';\r\nimport SortSelect from './SortSelect';\r\nimport ModeSelect from './ModeSelect';\r\nimport constants from 'settings/constants';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { MyIconWithTooltip, MySearch } from './Items';\r\nimport { ReloadOutlined } from '@ant-design/icons';\r\nimport languages from 'settings/languages';\r\n\r\ninterface Props {\r\n\ttotal: number;\r\n\tquery: string;\r\n\tsetQuery: Dispatch<SetStateAction<string>>;\r\n\tdebouncedQuery: string;\r\n}\r\n\r\nconst Selectors: React.FC<Props> = observer(\r\n\t({ total, query, setQuery, debouncedQuery }) => {\r\n\t\tconst { isSmallScreen, loading, tourRefs } = userStore;\r\n\t\tconst {\r\n\t\t\tlistOptions,\r\n\t\t\tuserOptions,\r\n\t\t\tdefaultRange,\r\n\t\t\tresetListOptions,\r\n\t\t\thandlePageChanging,\r\n\t\t\tsetRange,\r\n\t\t} = optionsStore;\r\n\r\n\t\tconst {\r\n\t\t\tisSortingReversed,\r\n\t\t\trange,\r\n\t\t\tcategoriesToFilterIds,\r\n\t\t\tpageSize,\r\n\t\t\tcurrentPage,\r\n\t\t\tsortingAlgorithm,\r\n\t\t} = listOptions;\r\n\r\n\t\tconst resetAll = useCallback(() => {\r\n\t\t\tresetListOptions();\r\n\t\t\tsetQuery('');\r\n\t\t}, [resetListOptions, setQuery]);\r\n\r\n\t\tconst [isSearchLoading, setIsSearchLoading] = useState<boolean>(false);\r\n\r\n\t\tconst isSettingsChanged = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tquery.length ||\r\n\t\t\t\tisSortingReversed ||\r\n\t\t\t\tcategoriesToFilterIds.length > 0 ||\r\n\t\t\t\tpageSize !== constants.defaultPageSize ||\r\n\t\t\t\tcurrentPage !== 1 ||\r\n\t\t\t\t(range[0] &&\r\n\t\t\t\t\trange[1] &&\r\n\t\t\t\t\t(range[0] !== defaultRange[0] || range[1]) !== defaultRange[1]) ||\r\n\t\t\t\tsortingAlgorithm !== 'date',\r\n\t\t\t[\r\n\t\t\t\tquery,\r\n\t\t\t\trange,\r\n\t\t\t\tdefaultRange,\r\n\t\t\t\tisSortingReversed,\r\n\t\t\t\tcategoriesToFilterIds,\r\n\t\t\t\tpageSize,\r\n\t\t\t\tcurrentPage,\r\n\t\t\t\tsortingAlgorithm,\r\n\t\t\t]\r\n\t\t);\r\n\r\n\t\tconst handleSearch = useCallback(\r\n\t\t\t(event: ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tsetQuery(event.target.value);\r\n\t\t\t\tsetIsSearchLoading(true);\r\n\t\t\t},\r\n\t\t\t[setQuery, setIsSearchLoading]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetIsSearchLoading(false);\r\n\t\t}, [debouncedQuery]);\r\n\r\n\t\treturn (\r\n\t\t\t<Flex\r\n\t\t\t\tref={tourRefs[2]}\r\n\t\t\t\tvertical\r\n\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\tgap={32}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Flex\r\n\t\t\t\t\t\tgap={16}\r\n\t\t\t\t\t\tvertical={isSmallScreen}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t\t\t<NewItemButton />\r\n\t\t\t\t\t\t\t<CategoriesSelect />\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t\t\t<SortSelect />\r\n\t\t\t\t\t\t\t<ModeSelect />\r\n\t\t\t\t\t\t\t{MySearch(handleSearch, query, isSearchLoading, isSmallScreen)}\r\n\t\t\t\t\t\t\t{isSettingsChanged &&\r\n\t\t\t\t\t\t\t\tMyIconWithTooltip(\r\n\t\t\t\t\t\t\t\t\tlanguages.reset[userOptions.language],\r\n\t\t\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\t\t\tReloadOutlined,\r\n\t\t\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\t\t\tresetAll\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t\t<YearSlider\r\n\t\t\t\t\t\trange={range}\r\n\t\t\t\t\t\tsetRange={setRange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t{!loading && (\r\n\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\tstyle={{ alignSelf: 'center' }}\r\n\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\t\tshowSizeChanger\r\n\t\t\t\t\t\tpageSizeOptions={constants.pageSizeOptions}\r\n\t\t\t\t\t\tcurrent={listOptions.currentPage}\r\n\t\t\t\t\t\tpageSize={listOptions.pageSize}\r\n\t\t\t\t\t\ttotal={total}\r\n\t\t\t\t\t\tonChange={handlePageChanging}\r\n\t\t\t\t\t\tonShowSizeChange={handlePageChanging}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Flex>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default memo(Selectors);\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport ItemList from '../components/ItemList';\r\nimport { Flex } from 'antd';\r\nimport Selectors from 'components/Selectors';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { getFilteredListIds } from 'utils/transformData';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { debounce } from 'lodash';\r\nimport constants from 'settings/constants';\r\n\r\nconst Expenses: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { listOptions, userOptions, handleModeChanging, handlePageChanging } =\r\n\t\toptionsStore;\r\n\r\n\tconst { language } = userOptions;\r\n\r\n\tconst [query, setQuery] = useState<string>('');\r\n\tconst [debouncedQuery, setDebouncedQuery] = useState<string>('');\r\n\r\n\tconst {\r\n\t\trange,\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t} = listOptions;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isSmallScreen) {\r\n\t\t\thandleModeChanging('grid');\r\n\t\t}\r\n\t}, [isSmallScreen, handleModeChanging]);\r\n\r\n\tuseEffect(() => {\r\n\t\thandlePageChanging(1, pageSize);\r\n\t}, [\r\n\t\trange,\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t\thandlePageChanging,\r\n\t]);\r\n\r\n\tconst debouncedSetQuery = useMemo(\r\n\t\t() =>\r\n\t\t\tdebounce(\r\n\t\t\t\t(query: string) => setDebouncedQuery(query),\r\n\t\t\t\tconstants.optionsDebounceDelay\r\n\t\t\t),\r\n\t\t[]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tdebouncedSetQuery(query);\r\n\t\treturn () => {\r\n\t\t\tdebouncedSetQuery.cancel();\r\n\t\t};\r\n\t}, [query, debouncedSetQuery]);\r\n\r\n\tconst filteredListIds = useMemo(\r\n\t\t() => getFilteredListIds(listOptions, list, language, debouncedQuery),\r\n\t\t[list, language, listOptions, debouncedQuery]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t\talign='center'\r\n\t\t>\r\n\t\t\t<Selectors\r\n\t\t\t\ttotal={filteredListIds.length}\r\n\t\t\t\tquery={query}\r\n\t\t\t\tsetQuery={setQuery}\r\n\t\t\t\tdebouncedQuery={debouncedQuery}\r\n\t\t\t/>\r\n\t\t\t<ItemList filteredListIds={filteredListIds} />\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default Expenses;\r\n"],"names":["observer","_ref","id","onChange","categories","categoryStore","isSmallScreen","userStore","_jsx","Select","size","style","minInlineSize","value","suffixIcon","EditFilled","color","options","Object","keys","filter","key","deleted","map","label","name","image","loading","setLoading","useState","handleChange","useCallback","info","file","status","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","originFileObj","url","ImgCrop","cropShape","rotationSlider","children","Upload","action","accept","listType","showUploadList","maxCount","Image","preview","src","width","borderRadius","LoadingOutlined","scale","PlusOutlined","opened","initialItemId","toggleOpened","submitItem","currency","setCurrency","constants","baseCurrency","currencyRates","userOptions","optionsStore","list","listStore","language","initialItem","useMemo","undefined","emptyItem","currentItem","setCurrentItem","handleTitleChange","event","target","prevItem","title","handleDateChange","date","valueOf","handleCategoryChange","categoryId","handlePriceChange","updatedItem","price","Number","calculatePrices","handleImageChange","convertToJpeg","then","useEffect","submitItemWithEnter","window","removeEventListener","TitleJSX","Input","required","type","onInput","PriceJSX","min","step","Math","round","CurrencyJSX","CurrencySelect","DateJSX","DatePicker","dayjs","minDate","startDate","maxDate","CategoryJSX","CategorySelect","ImageJSX","ImageUpload","Modal","open","okButtonProps","cancelButtonProps","onOk","onCancel","okText","CheckOutlined","cancelText","CloseOutlined","_jsxs","Form","layout","inlineSize","Item","languages","Row","Col","span","dateAndCat","getTitleComponents","isInOverlaps","editable","index","_Fragment","Typography","Text","ellipsis","strong","mark","Title","level","margin","MyTitle","overlaps","markedTitles","split","char","some","start","end","noTitle","Tooltip","Flex","justify","opacity","uniqid","MyImage","placement","startsWith","blockSize","objectFit","Avatar","cursor","background","icon","noImage","onClick","FrownOutlined","MyDate","Statistic","format","MyCategory","category","vertical","align","Tag","MyPrice","getSymbolAndPrice","MyIconWithTooltip","Icon","light","MyCheckbox","selected","arguments","length","handleSelection","deleteAll","restoreAll","gap","Button","deleteSelected","restoreSelected","Checkbox","checked","MySearch","Search","allowClear","mode","disabled","replaceItem","setLastDeletedItemIds","lastDeletedItemIds","isModalOpened","setIsModalOpened","toggleIsModalOpened","prevValue","updateCurrentItem","item","JSON","stringify","newItem","updatedAt","deleteItem","ActionsJSX","edit","EditOutlined","delete","DeleteOutlined","ImageAndDateJSX","tooltipTitle","concat","createdAt","CheckboxAndTitle","ItemModal","pointerEvents","InfoCircleOutlined","Card","extra","bordered","actions","SliderDiagram","defaultRange","valuesByMonth","getValuesByMonth","data","labels","Array","fill","datasets","Line","plugins","legend","display","tooltip","enabled","scales","x","grid","y","elements","point","radius","line","cubicInterpolationMode","borderColor","aspectRatio","memo","Chart","register","LineElement","LineController","CategoryScale","LinearScale","PointElement","minMax","YearSlider","range","setRange","setDefaultRange","setValue","sliderRange","dates","values","max","marks","startOf","endOf","currentDate","isBefore","isSame","month","add","handleRangeChanging","diff","Slider","dots","formatter","defaultValue","onChangeComplete","ItemList","filteredListIds","tourRefs","listOptions","selectedItemIds","setSelectedItemIds","deleteSelectedItems","prevSelected","debouncedOptions","debounce","listToShowOnCurrentPageIds","getListToShowOnCurrentPageIds","includes","ListItem","LargeSpin","ref","List","Space","wrap","Empty","PRESENTED_IMAGE_SIMPLE","description","addItem","addNewItem","handleCategoriesToFilterChange","categoriesSelect","showSearch","tagRender","props","onClose","onMouseDown","preventDefault","stopPropagation","closable","marginInlineEnd","categoriesToFilterIds","setIsSortingReversed","handleSortAlgorithmChanging","alignSelf","sort","reverse","isSortingReversed","SortDescendingOutlined","SortAscendingOutlined","Segmented","sortingAlgorithm","byDate","CalendarOutlined","byTitle","FontColorsOutlined","byPrice","DollarOutlined","handleModeChanging","MenuOutlined","TableOutlined","Selectors","total","query","setQuery","debouncedQuery","resetListOptions","handlePageChanging","pageSize","currentPage","resetAll","isSearchLoading","setIsSearchLoading","isSettingsChanged","defaultPageSize","handleSearch","NewItemButton","CategoriesSelect","SortSelect","ModeSelect","reset","ReloadOutlined","Divider","Pagination","showSizeChanger","pageSizeOptions","current","onShowSizeChange","Expenses","setDebouncedQuery","debouncedSetQuery","optionsDebounceDelay","cancel","getFilteredListIds"],"sourceRoot":""}