{"version":3,"file":"static/js/650.872cdefb.chunk.js","mappings":"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","sources":["components/ItemsModal.tsx","components/CategoryItem.tsx","components/CategorySelect.tsx","components/ImageUpload.tsx","components/ItemModal.tsx","components/Items.tsx","components/ListItem.tsx","components/TypeSelect.tsx"],"sourcesContent":["import { Col, Flex, List, Modal, Statistic } from 'antd';\r\nimport Item from 'antd/es/list/Item';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { memo, useCallback } from 'react';\r\nimport { listStore } from 'utils/listStore';\r\nimport dayjs from 'dayjs';\r\nimport { userStore } from 'utils/userStore';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport constants from 'settings/constants';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport { MyIconWithTooltip, MyTitle } from './Items';\r\nimport { DeleteOutlined, ExportOutlined } from '@ant-design/icons';\r\nimport ListItem from './ListItem';\r\n\r\ninterface Props {\r\n\topened: boolean;\r\n\tsetOpened: (arg0: boolean) => void;\r\n\titemIds: string[];\r\n}\r\n\r\nconst ItemsModal: React.FC<Props> = observer(\r\n\t({ opened, setOpened, itemIds }) => {\r\n\t\tconst { list, replaceItem } = listStore;\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\r\n\t\tconst { language } = userOptions;\r\n\r\n\t\tconst deleteCategoryFromItem = useCallback(\r\n\t\t\t(key: string) => {\r\n\t\t\t\treplaceItem(key, {\r\n\t\t\t\t\t...list[key],\r\n\t\t\t\t\tcategoryId: constants.emptyItem.categoryId,\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[list, replaceItem]\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\topen={opened}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetOpened(false);\r\n\t\t\t\t}}\r\n\t\t\t\tokButtonProps={{ style: { display: 'none' } }}\r\n\t\t\t\tcancelButtonProps={{ style: { display: 'none' } }}\r\n\t\t\t>\r\n\t\t\t\t<Scrollbars\r\n\t\t\t\t\tautoHide\r\n\t\t\t\t\tstyle={{ blockSize: '75vh' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<List>\r\n\t\t\t\t\t\t{itemIds.map((key: string) => (\r\n\t\t\t\t\t\t\t<Item key={key}>\r\n\t\t\t\t\t\t\t\t<Col span={5}>\r\n\t\t\t\t\t\t\t\t\t<Statistic\r\n\t\t\t\t\t\t\t\t\t\tvalue={dayjs(list[key].date).format('DD.MM.YY')}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tscale: isSmallScreen ? '.75' : '1',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col span={10}>\r\n\t\t\t\t\t\t\t\t\t<Flex\r\n\t\t\t\t\t\t\t\t\t\tjustify='center'\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\topacity: !list[key].title ? '.5' : '1',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{MyTitle(\r\n\t\t\t\t\t\t\t\t\t\t\tlist[key].title,\r\n\t\t\t\t\t\t\t\t\t\t\tlist[key].type,\r\n\t\t\t\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\t\t\t\t\t\tfalse\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col span={2}>\r\n\t\t\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\t\t\tinitialItem={{ id: key, overlaps: [] as number[][] }}\r\n\t\t\t\t\t\t\t\t\t\t\tmode='grid'\r\n\t\t\t\t\t\t\t\t\t\t/>,\r\n\t\t\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\t\t\tExportOutlined,\r\n\t\t\t\t\t\t\t\t\t\ttrue\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col span={2}>\r\n\t\t\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\t\t\tlanguages.delete[language],\r\n\t\t\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\t\t\tDeleteOutlined,\r\n\t\t\t\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\t\t\t\t() => deleteCategoryFromItem(key)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</Scrollbars>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default memo(ItemsModal);\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\nimport { ListType, category } from '../settings/interfaces';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Card, ColorPicker, Flex, Tooltip } from 'antd';\r\nimport { Color } from 'antd/es/color-picker';\r\nimport { userStore } from 'utils/userStore';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport ItemsModal from './ItemsModal';\r\nimport { MyIconWithTooltip, MyImage, MyTitle } from './Items';\r\nimport {\r\n\tDeleteOutlined,\r\n\tFallOutlined,\r\n\tInfoCircleOutlined,\r\n\tRiseOutlined,\r\n} from '@ant-design/icons';\r\nimport constants from 'settings/constants';\r\n\r\ninterface Props {\r\n\tinitialCategoryId: string;\r\n\tcategory?: category;\r\n\tdisabled?: boolean;\r\n}\r\n\r\nconst CategoryItem: React.FC<Props> = observer(\r\n\t({ initialCategoryId, category, disabled }) => {\r\n\t\tconst {\r\n\t\t\treplaceCategory,\r\n\t\t\tcategories,\r\n\t\t\tsetLastDeletedCategoryIds,\r\n\t\t\tlastDeletedCategoryIds,\r\n\t\t} = categoryStore;\r\n\t\tconst { list, setUserList } = listStore;\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\r\n\t\tconst { language } = userOptions;\r\n\r\n\t\tconst [currentCategory, setCurrentCategory] = useState<category>(\r\n\t\t\tcategory || categories[initialCategoryId]\r\n\t\t);\r\n\r\n\t\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\r\n\t\tconst itemsWithCurrentCategory = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tObject.keys(list).reduce(\r\n\t\t\t\t\t(acc: string[], key: string) =>\r\n\t\t\t\t\t\tlist[key].categoryId === initialCategoryId\r\n\t\t\t\t\t\t\t? [...acc, key]\r\n\t\t\t\t\t\t\t: [...acc],\r\n\t\t\t\t\t[]\r\n\t\t\t\t),\r\n\t\t\t[list, initialCategoryId]\r\n\t\t);\r\n\r\n\t\tconst deleteCategory = useCallback(() => {\r\n\t\t\tsetLastDeletedCategoryIds([...lastDeletedCategoryIds, initialCategoryId]);\r\n\t\t}, [setLastDeletedCategoryIds, initialCategoryId, lastDeletedCategoryIds]);\r\n\r\n\t\tconst updateCurrentCategory = useCallback(\r\n\t\t\t(category: category) => {\r\n\t\t\t\tsetCurrentCategory((prevCategory: category) => {\r\n\t\t\t\t\tif (JSON.stringify(prevCategory) !== JSON.stringify(category)) {\r\n\t\t\t\t\t\treplaceCategory(initialCategoryId, category);\r\n\t\t\t\t\t\treturn category;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn prevCategory;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentCategory, replaceCategory, initialCategoryId]\r\n\t\t);\r\n\r\n\t\tconst handleNameChange = useCallback(\r\n\t\t\t(value: string) => {\r\n\t\t\t\tsetCurrentCategory((prevCategory) => {\r\n\t\t\t\t\tconst newCategory: category = {\r\n\t\t\t\t\t\t...prevCategory,\r\n\t\t\t\t\t\tname: value,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tupdateCurrentCategory(newCategory);\r\n\t\t\t\t\treturn newCategory;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentCategory, updateCurrentCategory]\r\n\t\t);\r\n\r\n\t\tconst handleColorChange = useCallback(\r\n\t\t\t(value: Color) => {\r\n\t\t\t\tsetCurrentCategory((prevCategory) => {\r\n\t\t\t\t\tconst newCategory: category = {\r\n\t\t\t\t\t\t...prevCategory,\r\n\t\t\t\t\t\tcolor: `#${value.toHex()}`,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tupdateCurrentCategory(newCategory);\r\n\t\t\t\t\treturn newCategory;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentCategory, updateCurrentCategory]\r\n\t\t);\r\n\r\n\t\tconst fixList = useCallback(\r\n\t\t\t(categoryId: string, type: ListType) => {\r\n\t\t\t\tconst fixedList = list;\r\n\t\t\t\tObject.keys(list).forEach((key: string) => {\r\n\t\t\t\t\tif (list[key].categoryId === categoryId && list[key].type !== type) {\r\n\t\t\t\t\t\tfixedList[key].categoryId = '0';\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tsetUserList(fixedList);\r\n\t\t\t},\r\n\t\t\t[list, setUserList]\r\n\t\t);\r\n\r\n\t\tconst handleTypeChange = useCallback(\r\n\t\t\t(value: ListType) => {\r\n\t\t\t\tsetCurrentCategory((prevCategory) => {\r\n\t\t\t\t\tconst newCategory: category = {\r\n\t\t\t\t\t\t...prevCategory,\r\n\t\t\t\t\t\ttype: value,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tfixList(initialCategoryId, newCategory.type);\r\n\t\t\t\t\tupdateCurrentCategory(newCategory);\r\n\t\t\t\t\treturn newCategory;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentCategory, initialCategoryId, updateCurrentCategory, fixList]\r\n\t\t);\r\n\r\n\t\tconst ColorPickerJSX = disabled ? (\r\n\t\t\tMyImage(currentCategory.color, isSmallScreen, language)\r\n\t\t) : (\r\n\t\t\t<Tooltip title={languages.pickColor[language]}>\r\n\t\t\t\t<ColorPicker\r\n\t\t\t\t\tvalue={currentCategory.color}\r\n\t\t\t\t\tformat='hex'\r\n\t\t\t\t\tonChangeComplete={handleColorChange}\r\n\t\t\t\t>\r\n\t\t\t\t\t{MyImage(currentCategory.color, isSmallScreen, language)}\r\n\t\t\t\t</ColorPicker>\r\n\t\t\t</Tooltip>\r\n\t\t);\r\n\r\n\t\tconst tooltipTitle = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\t`${languages.itemsWithCurrentCategory[language]}: ${itemsWithCurrentCategory.length}`,\r\n\t\t\t[itemsWithCurrentCategory, language]\r\n\t\t);\r\n\r\n\t\tconst ActionsJSX = (\r\n\t\t\t<Flex\r\n\t\t\t\talign='center'\r\n\t\t\t\tjustify='space-evenly'\r\n\t\t\t>\r\n\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\ttooltipTitle,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\tInfoCircleOutlined,\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\t() => itemsWithCurrentCategory.length && setIsModalOpened(true)\r\n\t\t\t\t)}\r\n\t\t\t\t{ColorPickerJSX}\r\n\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\tlanguages.delete[userOptions.language],\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\tDeleteOutlined,\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\tdeleteCategory\r\n\t\t\t\t)}\r\n\t\t\t</Flex>\r\n\t\t);\r\n\r\n\t\tconst TypeChangeIconJSX =\r\n\t\t\tcurrentCategory.type === 'income' ? (\r\n\t\t\t\t<RiseOutlined\r\n\t\t\t\t\tstyle={{ color: constants.colors.income }}\r\n\t\t\t\t\tonClick={() => handleTypeChange('expense')}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<FallOutlined\r\n\t\t\t\t\tstyle={{ color: constants.colors.expense }}\r\n\t\t\t\t\tonClick={() => handleTypeChange('income')}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Card\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tinlineSize: isSmallScreen ? '8em' : '12em',\r\n\t\t\t\t\t\tpointerEvents: disabled ? 'none' : 'auto',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\textra={TypeChangeIconJSX}\r\n\t\t\t\t\tsize='small'\r\n\t\t\t\t\ttitle={MyTitle(\r\n\t\t\t\t\t\tcurrentCategory.name,\r\n\t\t\t\t\t\tcurrentCategory.type,\r\n\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t\tonChange: handleNameChange,\r\n\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tactions={[ActionsJSX]}\r\n\t\t\t\t\tstyles={{\r\n\t\t\t\t\t\ttitle: {\r\n\t\t\t\t\t\t\tpadding: 10,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tbody: {\r\n\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t></Card>\r\n\t\t\t\t<ItemsModal\r\n\t\t\t\t\topened={isModalOpened}\r\n\t\t\t\t\tsetOpened={setIsModalOpened}\r\n\t\t\t\t\titemIds={itemsWithCurrentCategory}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default CategoryItem;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select } from 'antd';\r\nimport { EditFilled } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { ListType } from 'settings/interfaces';\r\n\r\ninterface Props {\r\n\tid: string;\r\n\ttype: ListType;\r\n\tonChange: (arg0: string) => void;\r\n}\r\n\r\nconst CategorySelect: React.FC<Props> = observer(({ id, type, onChange }) => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tstyle={{ minInlineSize: '7em' }}\r\n\t\t\tonChange={onChange}\r\n\t\t\tvalue={id}\r\n\t\t\tsuffixIcon={\r\n\t\t\t\t<EditFilled style={{ color: categories[id] && categories[id].color }} />\r\n\t\t\t}\r\n\t\t\toptions={Object.keys(categories)\r\n\t\t\t\t.filter(\r\n\t\t\t\t\t(key: string) =>\r\n\t\t\t\t\t\t!categories[key].deleted &&\r\n\t\t\t\t\t\t(categories[key].type === type || categories[key].type === 'all')\r\n\t\t\t\t)\r\n\t\t\t\t.map((key: string) => ({\r\n\t\t\t\t\tlabel: categories[key].name,\r\n\t\t\t\t\tvalue: key,\r\n\t\t\t\t}))}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default CategorySelect;\r\n","import { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Image, Upload } from 'antd';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useState } from 'react';\r\n\r\ninterface Props {\r\n\timage: string | undefined;\r\n\tonChange: (arg0: string) => void;\r\n}\r\n\r\nconst ImageUpload: React.FC<Props> = observer(({ onChange, image }) => {\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\r\n\tconst getBase64 = (img: any, callback: any) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t};\r\n\r\n\tconst handleChange = useCallback(\r\n\t\t(info: any) => {\r\n\t\t\tif (info.file.status === 'uploading') {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t}\r\n\t\t\tif (info.file.status === 'done') {\r\n\t\t\t\tgetBase64(info.file.originFileObj, (url: any) => {\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tonChange(url);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t[setLoading, onChange]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<ImgCrop\r\n\t\t\tcropShape='round'\r\n\t\t\trotationSlider\r\n\t\t>\r\n\t\t\t<Upload\r\n\t\t\t\taction={'1'}\r\n\t\t\t\taccept='image/*'\r\n\t\t\t\tlistType='picture-circle'\r\n\t\t\t\tshowUploadList={false}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tmaxCount={1}\r\n\t\t\t>\r\n\t\t\t\t{image ? (\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\tborderRadius: '50px',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : loading ? (\r\n\t\t\t\t\t<LoadingOutlined style={{ scale: '1.5' }} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<PlusOutlined style={{ scale: '1.5' }} />\r\n\t\t\t\t)}\r\n\t\t\t</Upload>\r\n\t\t</ImgCrop>\r\n\t);\r\n});\r\n\r\nexport default ImageUpload;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport calculatePrices from '../utils/calculatePrices';\r\nimport { ExpenseItem, ListType } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport languages from 'settings/languages';\r\nimport { Col, DatePicker, Form, Input, InputNumber, Modal, Row } from 'antd';\r\nimport constants from 'settings/constants';\r\nimport dayjs from 'dayjs';\r\nimport CategorySelect from './CategorySelect';\r\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { listStore } from 'utils/listStore';\r\nimport ImageUpload from './ImageUpload';\r\nimport { convertToJpeg, getSymbolAndPrice } from 'utils/utils';\r\nimport TypeSelect from './TypeSelect';\r\n\r\ninterface Props {\r\n\topened: boolean;\r\n\tinitialItemId?: string;\r\n\ttoggleOpened: () => void;\r\n\tsubmitItem: (arg0: ExpenseItem) => void;\r\n}\r\n\r\nconst ItemModal: React.FC<Props> = observer(\r\n\t({ opened, initialItemId, toggleOpened, submitItem }) => {\r\n\t\tconst { currencyRates, isSmallScreen } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\t\tconst { list } = listStore;\r\n\r\n\t\tconst { language, currency } = userOptions;\r\n\r\n\t\tconst initialItem = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tinitialItemId !== undefined ? list[initialItemId] : constants.emptyItem,\r\n\t\t\t[list, initialItemId]\r\n\t\t);\r\n\r\n\t\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(initialItem);\r\n\r\n\t\tconst handleTitleChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\ttitle: value,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleDateChange = useCallback(\r\n\t\t\t(value: dayjs.Dayjs) => {\r\n\t\t\t\tif (value)\r\n\t\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tdate: value.valueOf(),\r\n\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleCategoryChange = useCallback(\r\n\t\t\t(id: string) => {\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\tcategoryId: id,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handlePriceChange = useCallback(\r\n\t\t\t(value: number | null) => {\r\n\t\t\t\tsetCurrentItem((prevItem) => {\r\n\t\t\t\t\tconst updatedItem = {\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tprice: {\r\n\t\t\t\t\t\t\t...prevItem.price,\r\n\t\t\t\t\t\t\t[currency]: Number(value),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...updatedItem,\r\n\t\t\t\t\t\tprice: calculatePrices(updatedItem.price, currencyRates, currency),\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentItem, currency, currencyRates]\r\n\t\t);\r\n\r\n\t\tconst handleImageChange = useCallback(\r\n\t\t\t(image: string) => {\r\n\t\t\t\tconvertToJpeg(image as string, 0.5).then((image: string) => {\r\n\t\t\t\t\tsetCurrentItem((prevItem) => ({\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\timage: image,\r\n\t\t\t\t\t}));\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleTypeChange = useCallback(\r\n\t\t\t(type: ListType) => {\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\ttype: type,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tconst submitItemWithEnter = (event: KeyboardEvent) => {\r\n\t\t\t\tif (event.key === 'Enter' && opened) {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\twindow.addEventListener('keyup', submitItemWithEnter);\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t};\r\n\t\t}, [currentItem, submitItem, opened]);\r\n\r\n\t\tconst TitleJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={currentItem.title}\r\n\t\t\t\tonInput={handleTitleChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst PriceJSX = (\r\n\t\t\t<InputNumber\r\n\t\t\t\tstyle={{ inlineSize: '50%' }}\r\n\t\t\t\tformatter={(price?: number) => `${getSymbolAndPrice(currency)}${price}`}\r\n\t\t\t\trequired\r\n\t\t\t\tmin={1}\r\n\t\t\t\tstep={1}\r\n\t\t\t\tvalue={Math.round(currentItem.price[currency])}\r\n\t\t\t\tonChange={handlePriceChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst DateJSX = (\r\n\t\t\t<DatePicker\r\n\t\t\t\trequired\r\n\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\tvalue={dayjs(currentItem.date)}\r\n\t\t\t\tminDate={constants.startDate}\r\n\t\t\t\tmaxDate={dayjs()}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CategoryJSX = (\r\n\t\t\t<CategorySelect\r\n\t\t\t\tid={currentItem.categoryId}\r\n\t\t\t\ttype={currentItem.type}\r\n\t\t\t\tonChange={handleCategoryChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst ImageJSX = (\r\n\t\t\t<ImageUpload\r\n\t\t\t\timage={currentItem.image}\r\n\t\t\t\tonChange={handleImageChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\topen={opened}\r\n\t\t\t\tokButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tcancelButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tonOk={() => {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t}}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetCurrentItem(initialItem);\r\n\t\t\t\t\ttoggleOpened();\r\n\t\t\t\t}}\r\n\t\t\t\tokText={<CheckOutlined />}\r\n\t\t\t\tcancelText={<CloseOutlined />}\r\n\t\t\t>\r\n\t\t\t\t<Form\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tlayout='vertical'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Form.Item label={languages.type[language]}>\r\n\t\t\t\t\t\t<TypeSelect\r\n\t\t\t\t\t\t\ttype={currentItem.type}\r\n\t\t\t\t\t\t\tonChange={handleTypeChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.title[language]}>{TitleJSX}</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.price[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={16}>{PriceJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.dateAndCat[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={10}>{DateJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={13}>{CategoryJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.image[language]}>{ImageJSX}</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default ItemModal;\r\n","import { FrownOutlined } from '@ant-design/icons';\r\nimport {\r\n\tAvatar,\r\n\tButton,\r\n\tCheckbox,\r\n\tFlex,\r\n\tImage,\r\n\tStatistic,\r\n\tTag,\r\n\tTooltip,\r\n\tTypography,\r\n} from 'antd';\r\nimport { ListType, category, currencies, language } from 'settings/interfaces';\r\nimport languages from 'settings/languages';\r\nimport dayjs from 'dayjs';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport React, { ComponentType, RefAttributes } from 'react';\r\nimport { CheckboxChangeEvent } from 'antd/es/checkbox';\r\nimport Search from 'antd/es/input/Search';\r\nimport uniqid from 'uniqid';\r\nimport { AntdIconProps } from '@ant-design/icons/lib/components/AntdIcon';\r\nimport { TooltipPlacement } from 'antd/es/tooltip';\r\n\r\nconst getTitleComponents = (\r\n\ttitle: string,\r\n\ttype: ListType,\r\n\tisInOverlaps: boolean,\r\n\tisSmallScreen: boolean,\r\n\teditable: any,\r\n\tindex?: number\r\n): React.ReactNode => {\r\n\treturn title === ' ' ? (\r\n\t\t<>&nbsp;</>\r\n\t) : (\r\n\t\t<Typography.Text\r\n\t\t\ttype={type === 'expense' ? 'danger' : 'success'}\r\n\t\t\tstyle={{ fontSize: isSmallScreen ? '1em' : '1.25em' }}\r\n\t\t\tkey={index || 0}\r\n\t\t\teditable={editable}\r\n\t\t\tellipsis\r\n\t\t\tstrong={isInOverlaps}\r\n\t\t>\r\n\t\t\t{title}\r\n\t\t</Typography.Text>\r\n\t);\r\n};\r\n\r\nexport const MyTitle = (\r\n\ttitle: string,\r\n\ttype: ListType,\r\n\tisSmallScreen: boolean,\r\n\tlanguage: language,\r\n\teditable: any,\r\n\toverlaps?: number[][]\r\n) => {\r\n\tconst markedTitles: React.ReactNode[] = overlaps\r\n\t\t? title.split('').map((char, index) => {\r\n\t\t\t\tconst isInOverlaps = overlaps.some(\r\n\t\t\t\t\t([start, end]) => index >= start && index <= end\r\n\t\t\t\t);\r\n\t\t\t\treturn getTitleComponents(\r\n\t\t\t\t\tchar,\r\n\t\t\t\t\ttype,\r\n\t\t\t\t\tisInOverlaps,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\teditable,\r\n\t\t\t\t\tindex\r\n\t\t\t\t);\r\n\t\t  })\r\n\t\t: [\r\n\t\t\t\tgetTitleComponents(\r\n\t\t\t\t\ttitle || languages.noTitle[language],\r\n\t\t\t\t\ttype,\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\teditable\r\n\t\t\t\t),\r\n\t\t  ];\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tkey={uniqid()}\r\n\t\t\tjustify='center'\r\n\t\t\tstyle={{\r\n\t\t\t\tinlineSize: '100%',\r\n\t\t\t\topacity: !title ? '.5' : '1',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{markedTitles}\r\n\t\t</Flex>\r\n\t);\r\n};\r\n\r\nexport const MyImage = (\r\n\timage: string | undefined,\r\n\tisSmallScreen: boolean,\r\n\tlanguage: language,\r\n\ttoggleOpened?: () => void\r\n) =>\r\n\timage ? (\r\n\t\t<Tooltip\r\n\t\t\tcolor='#0005'\r\n\t\t\tplacement='right'\r\n\t\t\ttitle={\r\n\t\t\t\t!image.startsWith('#') && (\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborderRadius: '50%',\r\n\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Avatar\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\tbackground: image.startsWith('#') ? image : 'unset',\r\n\t\t\t\t}}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\ticon={\r\n\t\t\t\t\t<Flex\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{!image.startsWith('#') && (\r\n\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t) : (\r\n\t\t<Tooltip title={languages.noImage[language]}>\r\n\t\t\t<Avatar\r\n\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\tonClick={toggleOpened}\r\n\t\t\t\ticon={<FrownOutlined />}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n\r\nexport const MyDate = (date: number, isSmallScreen: boolean) => (\r\n\t<Statistic\r\n\t\tvalue={dayjs(date).format('DD.MM.YY')}\r\n\t\tstyle={{\r\n\t\t\tscale: isSmallScreen ? '.67' : '.75',\r\n\t\t}}\r\n\t/>\r\n);\r\n\r\nexport const MyCategory = (category: category) => (\r\n\t<Flex\r\n\t\tvertical\r\n\t\talign='stretch'\r\n\t>\r\n\t\t{category && (\r\n\t\t\t<Tag color={category.color}>\r\n\t\t\t\t<span\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmargin: 'auto',\r\n\t\t\t\t\t\tcolor: category.color,\r\n\t\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{category.name}\r\n\t\t\t\t</span>\r\n\t\t\t</Tag>\r\n\t\t)}\r\n\t</Flex>\r\n);\r\n\r\nexport const MyPrice = (\r\n\tprice: currencies,\r\n\ttype: ListType,\r\n\tisSmallScreen: boolean,\r\n\tcurrency: string,\r\n\textra?: currencies\r\n) => (\r\n\t<Flex justify='center'>\r\n\t\t<Typography.Text\r\n\t\t\tstrong\r\n\t\t\ttype={type === 'expense' ? 'danger' : 'success'}\r\n\t\t\tstyle={{ fontSize: isSmallScreen ? '1.25em' : '1.5em' }}\r\n\t\t>\r\n\t\t\t{getSymbolAndPrice(currency)}\r\n\t\t\t{Math.round(price[currency])}\r\n\t\t</Typography.Text>\r\n\t\t{extra && (\r\n\t\t\t<>\r\n\t\t\t\t<Typography.Text\r\n\t\t\t\t\tstrong\r\n\t\t\t\t\ttype={type === 'expense' ? 'danger' : 'success'}\r\n\t\t\t\t\tstyle={{ fontSize: isSmallScreen ? '1.25em' : '1.5em' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t/\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t\t<Typography.Text\r\n\t\t\t\t\tstrong\r\n\t\t\t\t\ttype={type === 'expense' ? 'danger' : 'success'}\r\n\t\t\t\t\tstyle={{ fontSize: isSmallScreen ? '1.25em' : '1.5em' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{getSymbolAndPrice(currency)}\r\n\t\t\t\t\t{Math.round(extra[currency])}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t</>\r\n\t\t)}\r\n\t</Flex>\r\n);\r\n\r\nexport const MyIconWithTooltip = (\r\n\ttitle: string | React.JSX.Element,\r\n\tisSmallScreen: boolean,\r\n\tIcon: ComponentType<\r\n\t\tOmit<AntdIconProps, 'ref'> & RefAttributes<HTMLSpanElement>\r\n\t>,\r\n\tlight: boolean,\r\n\tonClick?: () => void,\r\n\tplacement?: TooltipPlacement\r\n) => (\r\n\t<Tooltip\r\n\t\tplacement={placement}\r\n\t\ttitle={title}\r\n\t\tcolor={light ? '#0005' : undefined}\r\n\t>\r\n\t\t<Icon\r\n\t\t\tonClick={onClick}\r\n\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.25' }}\r\n\t\t/>\r\n\t</Tooltip>\r\n);\r\n\r\nexport const MyCheckbox = (\r\n\tselected: boolean = false,\r\n\tlanguage: language,\r\n\tisSmallScreen: boolean,\r\n\thandleSelection: (event: CheckboxChangeEvent) => void = () => {},\r\n\tdeleteAll?: () => void,\r\n\trestoreAll?: () => void\r\n) => (\r\n\t<Tooltip\r\n\t\tcolor='#0000'\r\n\t\ttitle={\r\n\t\t\tselected ? (\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\tgap={isSmallScreen ? 4 : 8}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={deleteAll}\r\n\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{languages.deleteSelected[language]}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{restoreAll && (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={restoreAll}\r\n\t\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{languages.restoreSelected[language]}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Flex>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)\r\n\t\t}\r\n\t>\r\n\t\t<Checkbox\r\n\t\t\tonChange={handleSelection}\r\n\t\t\tchecked={selected}\r\n\t\t/>\r\n\t</Tooltip>\r\n);\r\n\r\nexport const MySearch = (\r\n\tonChange: (arg0: React.ChangeEvent<HTMLInputElement>) => void,\r\n\tvalue: string,\r\n\tloading: boolean,\r\n\tisSmallScreen: boolean\r\n) => (\r\n\t<Search\r\n\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\tallowClear\r\n\t\tonChange={onChange}\r\n\t\tvalue={value}\r\n\t\tloading={loading}\r\n\t/>\r\n);\r\n\r\nexport const tooltipTitle = (\r\n\tcreatedAt: number | undefined,\r\n\tupdatedAt: number | undefined,\r\n\tlanguage: language\r\n) => {\r\n\tif (!updatedAt) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{`${languages.createdAt[language]} ${dayjs(createdAt).format(\r\n\t\t\t\t\t'HH:mm:ss DD.MM.YY'\r\n\t\t\t\t)}`}\r\n\t\t\t</>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{`${languages.createdAt[language]} ${dayjs(createdAt).format(\r\n\t\t\t\t\t'HH:mm:ss DD.MM.YY'\r\n\t\t\t\t)}`}\r\n\t\t\t\t<br></br>\r\n\t\t\t\t{`${languages.updatedAt[language]} ${dayjs(updatedAt).format(\r\n\t\t\t\t\t'HH:mm:ss DD.MM.YY'\r\n\t\t\t\t)}`}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n};\r\n","import React, { useState, useCallback } from 'react';\r\nimport { ExpenseItem, ItemWithSearch, Mode } from '../settings/interfaces';\r\nimport Item from 'antd/es/list/Item';\r\nimport { Card, Col, Flex } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport ItemModal from './ItemModal';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n\tMyCategory,\r\n\tMyCheckbox,\r\n\tMyDate,\r\n\tMyIconWithTooltip,\r\n\tMyImage,\r\n\tMyPrice,\r\n\tMyTitle,\r\n\ttooltipTitle,\r\n} from './Items';\r\nimport { CheckboxChangeEvent } from 'antd/es/checkbox';\r\nimport {\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tInfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\ninterface Props {\r\n\tmode: Mode;\r\n\tinitialItem: ItemWithSearch;\r\n\tdeleteAll?: () => void;\r\n\trestoreAll?: () => void;\r\n\thandleSelection?: (event: CheckboxChangeEvent) => void;\r\n\tselected?: boolean;\r\n\tdisabled?: boolean;\r\n\ttransparent?: boolean;\r\n}\r\n\r\nconst ListItem: React.FC<Props> = observer(\r\n\t({\r\n\t\tmode,\r\n\t\tinitialItem,\r\n\t\tdeleteAll,\r\n\t\thandleSelection,\r\n\t\tselected,\r\n\t\tdisabled,\r\n\t\ttransparent,\r\n\t}) => {\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { replaceItem, setLastDeletedItemIds, lastDeletedItemIds, list } =\r\n\t\t\tlistStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\t\tconst { categories } = categoryStore;\r\n\r\n\t\tconst { currency, language } = userOptions;\r\n\r\n\t\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\t\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(\r\n\t\t\tlist[initialItem.id]\r\n\t\t);\r\n\r\n\t\tconst {\r\n\t\t\ttype,\r\n\t\t\tdate,\r\n\t\t\ttitle,\r\n\t\t\tcategoryId,\r\n\t\t\tprice,\r\n\t\t\timage,\r\n\t\t\tcreatedAt,\r\n\t\t\tupdatedAt,\r\n\t\t} = currentItem;\r\n\r\n\t\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t\t}, [setIsModalOpened]);\r\n\r\n\t\tconst updateCurrentItem = useCallback(\r\n\t\t\t(item: ExpenseItem) => {\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => {\r\n\t\t\t\t\tif (JSON.stringify(prevItem) !== JSON.stringify(item)) {\r\n\t\t\t\t\t\tconst newItem: ExpenseItem = {\r\n\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\tupdatedAt: dayjs().valueOf(),\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\treplaceItem(initialItem.id, newItem);\r\n\t\t\t\t\t\treturn newItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn prevItem;\r\n\t\t\t\t});\r\n\t\t\t\ttoggleIsModalOpened();\r\n\t\t\t},\r\n\t\t\t[setCurrentItem, replaceItem, toggleIsModalOpened, initialItem.id]\r\n\t\t);\r\n\r\n\t\tconst deleteItem = useCallback(() => {\r\n\t\t\tsetLastDeletedItemIds([...lastDeletedItemIds, initialItem.id]);\r\n\t\t}, [setLastDeletedItemIds, initialItem.id, lastDeletedItemIds]);\r\n\r\n\t\tconst ActionsJSX = (\r\n\t\t\t<Flex justify='space-evenly'>\r\n\t\t\t\t{MyCheckbox(\r\n\t\t\t\t\tselected,\r\n\t\t\t\t\tlanguage,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\thandleSelection,\r\n\t\t\t\t\tdeleteAll\r\n\t\t\t\t)}\r\n\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\tlanguages.delete[language],\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\tDeleteOutlined,\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\tdeleteItem\r\n\t\t\t\t)}\r\n\t\t\t\t{MyPrice(price, type, isSmallScreen, currency)}\r\n\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\tlanguages.edit[language],\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\tEditOutlined,\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\ttoggleIsModalOpened\r\n\t\t\t\t)}\r\n\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\ttooltipTitle(createdAt, updatedAt, language),\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\tInfoCircleOutlined,\r\n\t\t\t\t\tfalse\r\n\t\t\t\t)}\r\n\t\t\t</Flex>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<ItemModal\r\n\t\t\t\t\topened={isModalOpened}\r\n\t\t\t\t\tinitialItemId={initialItem.id}\r\n\t\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\t\tsubmitItem={updateCurrentItem}\r\n\t\t\t\t/>\r\n\t\t\t\t{mode === 'list' ? (\r\n\t\t\t\t\t<Item\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tpointerEvents: disabled ? 'none' : 'auto',\r\n\t\t\t\t\t\t\topacity: transparent ? '.5' : '1',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyCheckbox(\r\n\t\t\t\t\t\t\t\tselected,\r\n\t\t\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\thandleSelection,\r\n\t\t\t\t\t\t\t\tdeleteAll\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyImage(image, isSmallScreen, language, toggleIsModalOpened)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={3}>{MyDate(date, isSmallScreen)}</Col>\r\n\t\t\t\t\t\t<Col span={7}>\r\n\t\t\t\t\t\t\t{MyTitle(\r\n\t\t\t\t\t\t\t\ttitle,\r\n\t\t\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\t\tinitialItem.overlaps\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={4}>{MyCategory(categories[categoryId])}</Col>\r\n\t\t\t\t\t\t<Col span={4}>{MyPrice(price, type, isSmallScreen, currency)}</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\tlanguages.edit[language],\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tEditOutlined,\r\n\t\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\t\ttoggleIsModalOpened\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\tlanguages.delete[language],\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tDeleteOutlined,\r\n\t\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\t\tdeleteItem\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\ttooltipTitle(createdAt, updatedAt, language),\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tInfoCircleOutlined,\r\n\t\t\t\t\t\t\t\tfalse\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Item>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tstyles={{ title: { fontWeight: '400' } }}\r\n\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\tbordered\r\n\t\t\t\t\t\ttitle={MyTitle(\r\n\t\t\t\t\t\t\ttitle,\r\n\t\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\tinitialItem.overlaps\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\tactions={[ActionsJSX]}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tinlineSize: isSmallScreen ? '10em' : '13em',\r\n\t\t\t\t\t\t\tpointerEvents: disabled ? 'none' : 'auto',\r\n\t\t\t\t\t\t\topacity: transparent ? '.5' : '1',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Flex justify='center'>\r\n\t\t\t\t\t\t\t<Flex\r\n\t\t\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\t\t\talign='stretch'\r\n\t\t\t\t\t\t\t\tgap={4}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Flex align='center'>\r\n\t\t\t\t\t\t\t\t\t{MyImage(image, isSmallScreen, language, toggleIsModalOpened)}\r\n\t\t\t\t\t\t\t\t\t{MyDate(date, isSmallScreen)}\r\n\t\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t\t\t{MyCategory(categories[categoryId])}\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default ListItem;\r\n","import { FallOutlined, MinusOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport { Segmented } from 'antd';\r\nimport { SegmentedOptions } from 'antd/es/segmented';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useMemo } from 'react';\r\nimport { ListType } from 'settings/interfaces';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\ttype: ListType;\r\n\tonChange: (arg0: ListType) => void;\r\n\textra?: boolean;\r\n}\r\n\r\nconst TypeSelect: React.FC<Props> = observer(({ type, onChange, extra }) => {\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\tconst options: SegmentedOptions<ListType> = useMemo(() => {\r\n\t\tconst options = [\r\n\t\t\t{\r\n\t\t\t\tlabel: <FallOutlined />,\r\n\t\t\t\tvalue: 'expense' as ListType,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: <RiseOutlined />,\r\n\t\t\t\tvalue: 'income' as ListType,\r\n\t\t\t},\r\n\t\t];\r\n\r\n\t\textra &&\r\n\t\t\toptions.splice(1, 0, {\r\n\t\t\t\tlabel: <MinusOutlined />,\r\n\t\t\t\tvalue: 'all' as ListType,\r\n\t\t\t});\r\n\r\n\t\treturn options;\r\n\t}, [extra]);\r\n\r\n\treturn (\r\n\t\t<Segmented\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tvalue={type}\r\n\t\t\tonChange={onChange}\r\n\t\t\toptions={options}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default TypeSelect;\r\n"],"names":["ItemsModal","observer","_ref","opened","setOpened","itemIds","list","replaceItem","listStore","isSmallScreen","userStore","userOptions","optionsStore","language","deleteCategoryFromItem","useCallback","key","categoryId","constants","emptyItem","_jsx","Modal","open","onCancel","okButtonProps","style","display","cancelButtonProps","children","Scrollbars","autoHide","blockSize","List","map","_jsxs","Item","Col","span","Statistic","value","dayjs","date","format","scale","Flex","justify","opacity","title","MyTitle","type","MyIconWithTooltip","ListItem","initialItem","id","overlaps","mode","ExportOutlined","languages","delete","DeleteOutlined","memo","initialCategoryId","category","disabled","replaceCategory","categories","setLastDeletedCategoryIds","lastDeletedCategoryIds","categoryStore","setUserList","currentCategory","setCurrentCategory","useState","isModalOpened","setIsModalOpened","itemsWithCurrentCategory","useMemo","Object","keys","reduce","acc","deleteCategory","updateCurrentCategory","prevCategory","JSON","stringify","handleNameChange","newCategory","name","handleColorChange","color","concat","toHex","fixList","fixedList","forEach","handleTypeChange","ColorPickerJSX","MyImage","Tooltip","pickColor","ColorPicker","onChangeComplete","tooltipTitle","length","ActionsJSX","align","InfoCircleOutlined","TypeChangeIconJSX","RiseOutlined","colors","income","onClick","FallOutlined","expense","_Fragment","Card","inlineSize","pointerEvents","extra","size","onChange","actions","styles","padding","body","Select","minInlineSize","suffixIcon","EditFilled","options","filter","deleted","label","image","loading","setLoading","handleChange","info","file","status","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","originFileObj","url","ImgCrop","cropShape","rotationSlider","Upload","action","accept","listType","showUploadList","maxCount","Image","preview","src","width","borderRadius","LoadingOutlined","PlusOutlined","initialItemId","toggleOpened","submitItem","currencyRates","currency","undefined","currentItem","setCurrentItem","handleTitleChange","event","target","prevItem","handleDateChange","valueOf","handleCategoryChange","handlePriceChange","updatedItem","price","Number","calculatePrices","handleImageChange","convertToJpeg","then","useEffect","submitItemWithEnter","window","removeEventListener","TitleJSX","Input","required","onInput","PriceJSX","InputNumber","formatter","getSymbolAndPrice","min","step","Math","round","DateJSX","DatePicker","minDate","startDate","maxDate","CategoryJSX","CategorySelect","ImageJSX","ImageUpload","onOk","okText","CheckOutlined","cancelText","CloseOutlined","Form","layout","TypeSelect","Row","dateAndCat","getTitleComponents","isInOverlaps","editable","index","Typography","Text","fontSize","ellipsis","strong","markedTitles","split","char","some","start","end","noTitle","uniqid","placement","startsWith","objectFit","Avatar","cursor","background","icon","noImage","FrownOutlined","MyDate","MyCategory","vertical","Tag","margin","MyPrice","Icon","light","MyCheckbox","selected","arguments","handleSelection","deleteAll","restoreAll","gap","Button","deleteSelected","restoreSelected","Checkbox","checked","MySearch","Search","allowClear","createdAt","updatedAt","transparent","setLastDeletedItemIds","lastDeletedItemIds","toggleIsModalOpened","prevValue","updateCurrentItem","item","newItem","deleteItem","edit","EditOutlined","ItemModal","fontWeight","bordered","splice","MinusOutlined","Segmented"],"sourceRoot":""}