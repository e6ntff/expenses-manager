{"version":3,"file":"static/js/766.bddb709e.chunk.js","mappings":"iOAaA,MAiBA,GAjBqCA,EAAAA,EAAAA,KAASC,IAA0B,IAAzB,SAAEC,EAAQ,MAAEC,GAAOF,EACjE,MAAM,YAAEG,GAAgBC,EAAAA,cAClB,cAAEC,GAAkBC,EAAAA,UAE1B,OACCC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,MAAOC,EAAAA,EAAUR,MAAMC,EAAYQ,UAAUC,UACrDL,EAAAA,EAAAA,KAACM,EAAAA,GAAM,CACNZ,SAAUA,EACVa,QAASZ,EACTa,KAAMV,EAAgB,QAAU,SAASO,UAEzCL,EAAAA,EAAAA,KAACS,EAAAA,EAAc,OAEP,G,iOCnBZ,MAAMC,GAA0BlB,EAAAA,EAAAA,KAAS,KACxC,MAAM,KAAEmB,GAASC,EAAAA,WACX,aAAEC,GAAiBhB,EAAAA,aAEnBiB,GAAsDC,EAAAA,EAAAA,UAC3D,KAAMC,EAAAA,EAAAA,IAAiBL,EAAME,IAC7B,CAACF,EAAME,IAGFI,EAAO,CACZC,OAAQ,IAAIC,MAAML,EAAcM,QAAQC,KAAK,IAC7CC,SAAU,CACT,CACCL,KAAMH,KAwCT,OACCd,EAAAA,EAAAA,KAACuB,EAAAA,GAAI,CACJC,MAAO,CAAEC,WAAY,QACrBR,KAAMA,EACNS,QAvCc,CACfC,QAAS,CACRC,OAAQ,CACPC,SAAS,GAEVC,QAAS,CACRC,SAAS,IAGXC,OAAQ,CACPC,EAAG,CACFJ,SAAS,EACTK,KAAM,CACLL,SAAS,IAGXM,EAAG,CACFN,SAAS,EACTK,KAAM,CACLL,SAAS,KAIZO,SAAU,CACTC,MAAO,CACNC,OAAQ,GAETC,KAAM,CACLC,uBAAwB,WACxBC,YAAa,UAGfC,YAAa,KAQX,IAIJ,GAAeC,EAAAA,EAAAA,MAAKjC,G,cChDpBkC,EAAAA,GAAMC,SACL5C,EAAAA,EACA6C,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,IAGDC,IAAAA,OAAaC,KASb,MAAMC,GAA8B7D,EAAAA,EAAAA,KACnCC,IAAqD,IAApD,MAAE6D,EAAK,SAAEC,EAAQ,WAAEC,EAAU,cAAEC,GAAehE,EAC9C,MAAM,KAAEkB,GAASC,EAAAA,WACX,cAAEd,GAAkBC,EAAAA,WACpB,aAAEc,EAAY,gBAAE6C,EAAe,YAAE9D,GAAgBC,EAAAA,cAEhD8D,EAAOC,IAAYC,EAAAA,EAAAA,UAAShD,GAE7BiD,GAAgC/C,EAAAA,EAAAA,UAAQ,KAC7C,MAAMgD,EAAQC,OAAOC,OAAOtD,GAAMuD,KAAKC,GAAsBA,EAAKC,OAClE,MAAO,CAACC,KAAKC,OAAOP,GAAQM,KAAKE,OAAOR,GAAO,GAC7C,CAACpD,IAEE6D,GAAmCzD,EAAAA,EAAAA,UAAQ,KAChD,MAAM0D,EAAQtB,IAAMW,EAAY,IAAIY,QAAQ,OACtCC,EAAMxB,IAAMW,EAAY,IAAIc,MAAM,OAClCJ,EAAmC,CAAC,EAC1C,IAAIK,EAAcJ,EAClB,GAAIjB,EACH,KAAOqB,EAAYC,SAASH,IAAQE,EAAYE,OAAOJ,EAAK,QAC3DH,EAAMK,EAAYG,WACM,IAAvBH,EAAYT,OACe,IAAxBS,EAAYI,QACXJ,EAAYK,OAAO,QACnBL,EAAYK,OAAO,KACpB,IACJL,EAAcA,EAAYM,IAAI,EAAG,OAAOT,QAAQ,YAGjD,KAAOG,EAAYC,SAASH,IAAQE,EAAYE,OAAOJ,EAAK,UAC3DH,EAAMK,EAAYG,WACO,IAAxBH,EAAYI,QAAgBJ,EAAYK,OAAO,QAAU,IAC1DL,EAAcA,EAAYM,IAAI,EAAG,SAAST,QAAQ,SAIpD,OAAOF,CAAK,GACV,CAACV,EAAaN,KAEjB4B,EAAAA,EAAAA,YAAU,KACT1B,EAAgBI,EAAY,GAC1B,CAACA,EAAaJ,KAEjB0B,EAAAA,EAAAA,YAAU,KACT7B,EAAS1C,EAAa,GACpB,CAACA,EAAc0C,IAElB,MAAM8B,GAAsBC,EAAAA,EAAAA,cAC1BrB,IACAV,EAASU,EAAO,GAEjB,CAACV,IA8BF,OA3BA6B,EAAAA,EAAAA,YAAU,KACTxB,EAASN,EAAM,GACb,CAACA,KAEJ8B,EAAAA,EAAAA,YAAU,KACTtF,GAAiB2D,GAAc,EAAM,GACnC,CAAC3D,EAAe2D,KAEnB2B,EAAAA,EAAAA,YAAU,MACR5B,GACAD,EAAS,CAEPJ,IAAAA,IAAU,CACTA,IAAMG,EAAM,IAAIoB,QAAQ,SACxBvB,IAAMtC,EAAa,MAEnBmE,UAED7B,IAAAA,IAAU,CACTA,IAAMG,EAAM,IAAIsB,MAAM,SACtBzB,IAAMtC,EAAa,MAEnBmE,WACD,GAED,CAACxB,IAEGL,IAAMtC,EAAa,IAAI0E,KAAKpC,IAAMtC,EAAa,IAAK,UAC1D,IACA2E,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACJC,IAAK,GACLC,MAAM,SAAQtF,SAAA,EAEdL,EAAAA,EAAAA,KAAC4F,EAAAA,EAAS,CACTpF,KAAMV,EAAgB,QAAU,SAChC+F,aAAcrC,EACdG,MAAOH,EACPsC,SAAUrC,EACV/B,QAAS,CACR,CACCqE,OACC/F,EAAAA,EAAAA,KAACgG,EAAAA,EAAW,CAAC9F,MAAOC,EAAAA,EAAU8F,QAAQrG,EAAYQ,UAAUC,UAC3DL,EAAAA,EAAAA,KAACkG,EAAAA,EAAe,MAGlBvC,OAAO,GAER,CACCoC,OACC/F,EAAAA,EAAAA,KAACgG,EAAAA,EAAW,CAAC9F,MAAOC,EAAAA,EAAUgG,MAAMvG,EAAYQ,UAAUC,UACzDL,EAAAA,EAAAA,KAACoG,EAAAA,EAAc,MAGjBzC,OAAO,EACPjE,SAAUI,OAIb0F,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACJY,UAAQ,EACRV,MAAM,UACNnE,MAAO,CAAEC,WAAY,QAASpB,SAAA,EAE9BL,EAAAA,EAAAA,KAACU,EAAa,KACdV,EAAAA,EAAAA,KAACsG,EAAAA,EAAM,CACNhD,OAAK,EACLK,MAAOA,EACPa,MAAOA,EACP+B,KAAM,KACNC,MAAM,EACN1E,QAAS,CACR2E,UAAY9C,IACX3D,EAAAA,EAAAA,KAAA0G,EAAAA,SAAA,CAAArG,SAAG8C,IAAMQ,GAAOuB,OAAO1B,EAAa,WAAa,YAGnDc,IAAKR,EAAY,GACjBS,IAAKT,EAAY,GACjB+B,aAAchF,EACdiF,SAAUlC,EACV+C,iBAAkBtB,WAKrBrF,EAAAA,EAAAA,KAAA0G,EAAAA,SAAA,GACA,IAIH,GAAe/D,EAAAA,EAAAA,MAAKU,E,uMClKpBT,EAAAA,GAAMC,SAAS5C,EAAAA,EAAS2G,EAAAA,GAAeC,EAAAA,GAAY7D,EAAAA,GAAeC,EAAAA,IAOlE,MAuFA,GAvFoCzD,EAAAA,EAAAA,KAASC,IAAwB,IAAvB,KAAEqH,EAAI,QAAEC,GAAStH,EAC9D,MAAM,cAAEK,GAAkBC,EAAAA,WACpB,KAAEY,GAASC,EAAAA,WACX,aAAEoG,EAAY,YAAEpH,EAAW,cAAEqH,GAAkBpH,EAAAA,cAC/C,SAAEqH,EAAQ,SAAE9G,GAAaR,GAEzB,MAAE0D,GAAU0D,EAEZ/C,GAA+ClD,EAAAA,EAAAA,UAAQ,KACrDoG,EAAAA,EAAAA,IAAuBxG,EAAMuG,EAAUJ,EAAM3D,IAAMG,EAAM,IAAI8D,SAClE,CAACF,EAAUvG,EAAMmG,EAAMxD,IAEpB+D,GAAStG,EAAAA,EAAAA,UACd,IACU,SAAT+F,EACG9C,OAAOsD,KAAKrD,GAAQC,KAAKqD,IACzB,MAAMnD,EAAOjB,IAAMoE,GACnB,OAAOnD,GAAQjB,IAAMG,EAAM,IAAIoB,QAAQ,SACtCN,GAAQjB,IAAMG,EAAM,IAAIsB,MAAM,QAC5B,OACA,OAAO,IAEVZ,OAAOsD,KAAKrD,GAAQC,KAAKqD,IACzB,MAAMtC,EAAQuC,OAAOD,GACrB,OAAOtC,GAAS9B,IAAMG,EAAM,IAAIoB,QAAQ,SAASO,SAChDA,GAAS9B,IAAMG,EAAM,IAAIsB,MAAM,SAASK,QACtC,OACA,OAAO,KAGd,CAAC3B,EAAOW,EAAQ6C,IAGX7F,EAAO,CACZC,OAAiB,UAAT4F,EAAmB3G,EAAAA,EAAUsH,OAAOrH,GAAY4D,OAAOsD,KAAKrD,GACpE3C,SAAU,CACT,CACCyE,OAAO2B,EAAAA,EAAAA,GAAkBR,GACzBjG,KAAM+C,OAAOC,OAAOA,GACpB0D,gBAAiBN,KAKd3F,EAAU,CACfC,QAAS,CACRC,OAAQ,CACPC,SAAS,IAGXtB,QAASA,CAACqH,EAAQC,KACjB,GAAIA,EAAczG,OAAQ,CACzB,MAAM0G,EAAQD,EAAc,GAAGC,MAEzBC,EACI,SAATjB,EACG,CACA3D,IAAMG,EAAM,IACV8D,KAAKI,OAAOvG,EAAKC,OAAO4G,KACxBpD,QAAQ,QACRM,UACF7B,IAAMG,EAAM,IACV8D,KAAKI,OAAOvG,EAAKC,OAAO4G,KACxBlD,MAAM,QACNI,WAEF,CACA7B,IAAMG,EAAM,IAAI2B,MAAM6C,GAAOpD,QAAQ,SAASM,UAC9C7B,IAAMG,EAAM,IAAI2B,MAAM6C,GAAOlD,MAAM,SAASI,WAGvC,SAAT8B,GAAmBC,EAAQ,SAC3BE,EAAcc,EACf,IAIF,OACC/H,EAAAA,EAAAA,KAACyF,EAAAA,EAAI,CAACjE,MAAO,CAAEC,WAAY3B,EAAgB,QAAU,OAAQO,UAC5DL,EAAAA,EAAAA,KAACgI,EAAAA,GAAG,CACH/G,KAAMA,EACNS,QAASA,KAEJ,I,cC3FTkB,EAAAA,GAAMC,SAASoF,EAAAA,GAAYC,EAAAA,GAAejI,EAAAA,EAASkI,EAAAA,GAAQC,EAAAA,IAE3D,MAsDA,GAtD6B5I,EAAAA,EAAAA,KAAS,KACrC,MAAM,cAAEM,GAAkBC,EAAAA,WACpB,KAAEY,GAASC,EAAAA,WACX,YAAEhB,EAAW,aAAEoH,GAAiBnH,EAAAA,cAChC,SAAEqH,GAAatH,GACf,WAAEyI,GAAeC,EAAAA,eAEjB,MAAEhF,GAAU0D,EAEZuB,GAA4BxH,EAAAA,EAAAA,UACjC,KAAMyH,EAAAA,EAAAA,IAAuB7H,EAAM2C,EAAO4D,IAC1C,CAACvG,EAAMuG,EAAU5D,KAGXmF,EAAOpB,EAAQpD,GAAU,CAC/BsE,EAAiBrE,KAAKP,GAAiB0E,EAAW1E,EAAM+E,YAAYC,OACpEJ,EAAiBrE,KAAKP,GAAiB0E,EAAW1E,EAAM+E,YAAYE,QACpEL,EAAiBrE,KAAKP,GAAiBU,KAAKwE,MAAMlF,EAAMA,UAGnD1C,EAAO,CACZC,OAAQuH,EACRnH,SAAU,CACT,CACCyE,OAAO2B,EAAAA,EAAAA,GAAkBR,GACzBjG,KAAMgD,EACN0D,gBAAiBN,KAcpB,OACCrH,EAAAA,EAAAA,KAACyF,EAAAA,EAAI,CACJjE,MAAO,CACNC,WAAY3B,EAAgB,QAAU,OACrCO,UAEFL,EAAAA,EAAAA,KAAC8I,EAAAA,GAAG,CACH7H,KAAMA,EACNS,QAjBa,CACfC,QAAS,CACRC,OAAQ,CACPC,SAAS,EACTkH,SAAU,cAeL,I,yEC7DT,MAAMC,GAAsBxJ,EAAAA,EAAAA,KAAS,KACpC,MAAM,cAAEM,GAAkBC,EAAAA,WACpB,KAAEY,GAASC,EAAAA,WACX,aAAEoG,EAAY,YAAEpH,GAAgBC,EAAAA,cAEhC,MAAEyD,EAAK,WAAEE,GAAewD,GACxB,SAAEE,GAAatH,EAEf+D,GAAQ5C,EAAAA,EAAAA,UACb,KAAMkI,EAAAA,EAAAA,IAAuBtI,EAAM2C,EAAO4D,IAC1C,CAACvG,EAAM2C,EAAO4D,IAGTgC,GAAYnI,EAAAA,EAAAA,UAAQ,KACzB,MAAMmE,EAAS1B,EAAa,WAAa,QACzC,OACCgC,EAAAA,EAAAA,MAAC2D,EAAAA,EAAWC,KAAI,CACfC,KAAK,YACL7H,MAAO,CAAE8H,SAAUxJ,EAAgB,OAAS,OAAQO,SAAA,CAEnD8C,IAAMG,EAAM,IAAI4B,OAAOA,GACvB5B,EAAM,KAAOA,EAAM,GAAE,IAAAiG,OAAOpG,IAAMG,EAAM,IAAI4B,OAAOA,IAAY,KAC/C,GAEjB,CAAC1B,EAAYF,EAAOxD,IAEvB,OACCE,EAAAA,EAAAA,KAACwJ,EAAAA,EAAI,CAACC,UAAQ,EAAApJ,UACbL,EAAAA,EAAAA,KAAC0J,EAAAA,EAAS,CACTxJ,MAAOgJ,EACPvF,MAAOA,EACPgG,QAAQjC,EAAAA,EAAAA,GAAkBR,GAC1B0C,WAAY,CACXhB,MAAO,OACPU,SAAUxJ,EAAgB,MAAQ,YAG9B,IAIT,GAAe6C,EAAAA,EAAAA,MAAKqG,G,cCnCpB7F,IAAAA,OAAa0G,KAEb,MAAMC,GAAkBtK,EAAAA,EAAAA,KAAS,KAChC,MAAM,KAAEmB,GAASC,EAAAA,WACX,cAAEd,EAAa,QAAEiK,GAAYhK,EAAAA,WAC7B,aAAEiH,EAAY,aAAEnG,EAAY,cAAEoG,EAAa,mBAAE+C,GAClDnK,EAAAA,cAEK,MAAEyD,EAAK,WAAEE,GAAewD,GAEvBF,EAAMC,IAAWlD,EAAAA,EAAAA,UAAmB,QAErCoG,GAAa3E,EAAAA,EAAAA,cAAY,KAC9ByB,EAAQ,QACRE,EAAcpG,EAAa,GACzB,CAACkG,EAASlG,EAAcoG,KAE3B7B,EAAAA,EAAAA,YAAU,KACT,MAAM8E,EAAqBC,IACR,WAAdA,EAAM5C,KACT0C,GACD,EAKD,OAFAG,OAAOC,iBAAiB,UAAWH,GAE5B,KACNE,OAAOE,oBAAoB,UAAWJ,EAAkB,CACxD,GACC,CAACD,IAEJ,MAAMM,GAAiBxJ,EAAAA,EAAAA,UACtB,IAAMuC,EAAM,KAAOzC,EAAa,IAAMyC,EAAM,KAAOzC,EAAa,IAChE,CAACyC,EAAOzC,KAGTuE,EAAAA,EAAAA,YAAU,KACLjC,IAAMG,EAAM,IAAI8D,SAAWjE,IAAMG,EAAM,IAAI8D,OAC9CL,EAAQ,QAERA,EAAQ,QACT,GACE,CAACzD,IAEJ,MAAMkH,GACLhF,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,IAAK,GAAGrF,SAAA,EACbL,EAAAA,EAAAA,KAACgJ,EAAS,KACVhJ,EAAAA,EAAAA,KAACyK,EAAAA,EAAW,CACX9K,MAAOsK,EACPvK,UAAW6K,OAKRG,GACLlF,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACJY,UAAQ,EACRX,IAAK,GACLC,MAAM,UAAStF,SAAA,EAEfL,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CACVI,cAAeuG,EACfxG,WAAYA,EACZF,MAAOA,EACPC,SAAU0D,KAEXzB,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACJE,MAAM,SACNgF,QAAQ,gBACRtE,SAAUvG,EAAcO,SAAA,EAExBL,EAAAA,EAAAA,KAAC4K,EAAU,CACV9D,KAAMA,EACNC,QAASA,KAEV/G,EAAAA,EAAAA,KAAC6K,EAAU,UAKd,OAAOd,GACN/J,EAAAA,EAAAA,KAAC8K,EAAAA,EAAS,IACP9G,OAAOsD,KAAK3G,GAAMS,QACrBoE,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACJY,UAAQ,EACRX,IAAK,GAAGrF,SAAA,CAEPmK,EACAE,MAGF1K,EAAAA,EAAAA,KAAC+K,EAAAA,EAAK,CACLC,MAAOD,EAAAA,EAAME,uBACbC,YAAa,IAEd,IAGF,GAAevI,EAAAA,EAAAA,MAAKmH,E,oICvGpB3G,IAAAA,OAAa0G,KAEN,MAAMsB,EAAqBA,CACjCzJ,EACAf,EACAP,KAEA,MAAM,MAAEkD,EAAK,sBAAE8H,EAAqB,iBAAEC,EAAgB,kBAAEC,GACvD5J,EACD,OAAO6J,EAAAA,EAAAA,GACN5K,EACAqD,OAAOsD,KAAK3G,GAAM6K,QAChBjE,GACA5G,EAAK4G,GAAKnD,MAAQd,EAAM,IACxB3C,EAAK4G,GAAKnD,MAAQd,EAAM,MACvB8H,EAAsBhK,QACpBgK,EAAsBK,MACrBC,GAAe/K,EAAK4G,GAAKmB,aAAegD,OAI9CL,EACAC,EACAlL,EACA,EAGWuL,EAAgCA,CAC5CjK,EACAkK,KAEA,MAAM,YAAEC,EAAW,SAAEC,GAAapK,EAC5BqK,GAAcF,EAAc,GAAKC,EACjCE,EAAWD,EAAaD,EAC9B,OAAOF,EAAgBK,MAAMF,EAAYC,EAAS,EAGtC7E,EAAyBA,CACrCxG,EACAuG,EACAJ,EACAM,KAEA,GAAa,SAATN,EAAiB,CACpB,MAAMoF,EAAoC,CAAC,EAC3ClI,OAAOsD,KAAK3G,GAAMwL,SAAS5E,IAC1B,MAAM6E,EAAoBjJ,IAAMxC,EAAK4G,GAAKnD,MAAMgD,YACtBiF,IAAtBH,EAAOE,GACVF,EAAOE,GAAazL,EAAK4G,GAAK+E,MAAMpF,GAEpCgF,EAAOE,IAAczL,EAAK4G,GAAK+E,MAAMpF,EACtC,IAED,IAAK,IAAIE,KAAQ8E,EAChBA,EAAO9E,GAAQ/C,KAAKwE,MAAMqD,EAAO9E,IAElC,OAAO8E,CACR,CAAO,GAAa,UAATpF,EAAkB,CAC5B,MAAMoF,EAAmB,IAAI/K,MAAM,IAAIE,KAAK,GAQ5C,OAPA2C,OAAOsD,KAAK3G,GAAMwL,SAAS5E,IAC1B,GAAIpE,IAAMxC,EAAK4G,GAAKnD,MAAMgD,SAAWA,EAAM,CAC1C,MAAMU,EAAgB3E,IAAMxC,EAAK4G,GAAKnD,MAAMa,QAC5CiH,EAAOpE,IAAUnH,EAAK4G,GAAK+E,MAAMpF,EAClC,KAGMgF,EAAOhI,KAAKC,GAAiBE,KAAKwE,MAAM1E,IAChD,CACA,MAAO,EAAE,EAGGqE,EAAyBA,CACrC7H,EACA2C,EACA4D,KAEA,MAAMjD,EAAkB,GAgBxB,OAfAD,OAAOsD,KAAK3G,GAAMwL,SAAS5E,IAC1B,GAAI5G,EAAK4G,GAAKnD,KAAOd,EAAM,IAAM3C,EAAK4G,GAAKnD,KAAOd,EAAM,GAAI,CAC3D,MAAMiJ,EAAsBvI,OAAOsD,KAAKrD,GAAQuI,WAC9CC,GAAcxI,EAAOuD,OAAOiF,IAAI/D,aAAe/H,EAAK4G,GAAKmB,cAEtC,IAAjB6D,EACHtI,EAAOsI,GAAa5I,OAAShD,EAAK4G,GAAK+E,MAAMpF,GAE7CjD,EAAOyI,KAAK,CACXhE,WAAY/H,EAAK4G,GAAKmB,WACtB/E,MAAOhD,EAAK4G,GAAK+E,MAAMpF,IAG1B,KAEMjD,EAAOC,KAAKP,IAAY,IAC3BA,EACHA,MAAOU,KAAKwE,MAAMlF,EAAMA,UACtB,EAGSsF,EAAyBA,CACrCtI,EACA2C,EACA4D,IAEA7C,KAAKsI,MACJ3I,OAAOC,OAAOtD,GAAMiM,QAAO,CAACC,EAAa1I,IACpCA,EAAKC,MAAQd,EAAM,IAAMa,EAAKC,MAAQd,EAAM,GACxCuJ,EAAM1I,EAAKmI,MAAMpF,GAElB2F,GACL,IAGQ7L,EAAmBA,CAC/BL,EACA2C,KAEA,MAAMW,EAAmB,GACnBU,EAAMxB,IAAMG,EAAM,IACxB,IAAIwJ,EAAY3J,IAAMG,EAAM,IACxByJ,EAAU5J,IAAMG,EAAM,IAAI6B,IAAI,EAAG,SAErC,MAAQ4H,EAAQC,QAAQrI,EAAK,QAAQ,CACpC,MAKMsI,EALejJ,OAAOC,OAAOtD,GAAM6K,QAEvCrH,GACAA,EAAKC,KAAO0I,EAAU9H,WAAab,EAAKC,KAAO2I,EAAQ/H,YAEtB4H,QAClC,CAACC,EAAK1I,IAAS0I,EAAM1I,EAAKmI,MAAMY,KAChC,GAEDjJ,EAAOyI,KAAKO,GACZH,EAAYA,EAAU3H,IAAI,EAAG,SAC7B4H,EAAUA,EAAQ5H,IAAI,EAAG,QAC1B,CAEA,OAAOlB,CAAM,C,0CCjJP,MAAMyD,EAAoBA,CAACR,EAAkBoF,KAAoB,IAADa,EACtE,IAAIjB,EAAS,GACI,QAAbhF,IAAoBgF,GAAU,KACjB,QAAbhF,IAAoBgF,GAAU,UACjB,QAAbhF,IAAoBgF,GAAU,UAElC,MAAMkB,EAA4C,QAA9BD,EAAG9I,KAAKwE,MAAMyD,UAAgB,IAAAa,OAAA,EAA3BA,EACpBE,WACDC,MAAM,IACNC,UACAX,QACA,CAACC,EAAeW,EAAgB1F,IAC/BA,EAAQ,IAAM,GAAe,IAAVA,EAChB,IAAI+E,EAAKW,EAAS,KAClB,IAAIX,EAAKW,IACb,IAEAD,UACAE,KAAK,IAEP,YAAiBpB,IAAVC,EAAsBJ,EAASA,EAASkB,CAAc,EAGjD7B,EAASA,CACrB5K,EACA+M,EACArC,EACAsC,EACAvN,KAEA,IAAI8L,EACJ,OAAQb,GACP,IAAK,OACJa,EAASwB,EAASE,MACjB,CAACC,EAAcC,IACdnN,EAAKmN,GAAM1J,KAAKY,UAAYrE,EAAKkN,GAAMzJ,KAAKY,YAE9C,MACD,IAAK,QACJkH,EAASwB,EAASE,MAAK,CAACC,EAAcC,IACrCnN,EAAKkN,GAAM3N,MAAM6N,cAAcpN,EAAKmN,GAAM5N,MAAOE,EAAU,CAC1D4N,YAAa,WAGf,MACD,IAAK,QACJ9B,EAASwB,EAASE,MACjB,CAACC,EAAcC,IACdnN,EAAKmN,GAAMxB,MAAMY,IAAMvM,EAAKkN,GAAMvB,MAAMY,MAE1C,MACD,QACChB,EAASwB,EAGX,OAAOC,EAAWzB,EAAOqB,UAAYrB,CAAM,C","sources":["components/ResetButton.tsx","components/SliderDiagram.tsx","components/YearSlider.tsx","components/DiagramBar.tsx","components/DiagramPie.tsx","components/StatsCard.tsx","pages/Stats.tsx","utils/transformData.ts","utils/utils.ts"],"sourcesContent":["import { ReloadOutlined } from '@ant-design/icons';\r\nimport { Button, Tooltip } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tdisabled?: boolean;\r\n\treset: () => void;\r\n}\r\n\r\nconst ResetButton: React.FC<Props> = observer(({ disabled, reset }) => {\r\n\tconst { userOptions } = optionsStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.reset[userOptions.language]}>\r\n\t\t\t<Button\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t\tonClick={reset}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<ReloadOutlined />\r\n\t\t\t</Button>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default ResetButton;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { memo, useMemo } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { getValuesByMonth } from 'utils/transformData';\r\n\r\nconst SliderDiagram: React.FC = observer(() => {\r\n\tconst { list } = listStore;\r\n\tconst { defaultRange } = optionsStore;\r\n\r\n\tconst valuesByMonth: number[] | { [key: string]: number } = useMemo(\r\n\t\t() => getValuesByMonth(list, defaultRange),\r\n\t\t[list, defaultRange]\r\n\t);\r\n\r\n\tconst data = {\r\n\t\tlabels: new Array(valuesByMonth.length).fill(''),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tdata: valuesByMonth,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tx: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\ty: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\telements: {\r\n\t\t\tpoint: {\r\n\t\t\t\tradius: 0,\r\n\t\t\t},\r\n\t\t\tline: {\r\n\t\t\t\tcubicInterpolationMode: 'monotone' as 'monotone',\r\n\t\t\t\tborderColor: '#7775',\r\n\t\t\t},\r\n\t\t},\r\n\t\taspectRatio: 25,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Line\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\tdata={data}\r\n\t\t\toptions={options}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default memo(SliderDiagram);\r\n","import React, { memo, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Slider, Tooltip as TooltipAntd } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport { ExpenseItem } from 'settings/interfaces';\r\nimport dayjs from 'dayjs';\r\nimport minMax from 'dayjs/plugin/minMax';\r\nimport { ZoomInOutlined, ZoomOutOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport {\r\n\tChart,\r\n\tTooltip,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tLineElement,\r\n\tLineController,\r\n\tPointElement,\r\n} from 'chart.js';\r\nimport SliderDiagram from './SliderDiagram';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\nChart.register(\r\n\tTooltip,\r\n\tLineElement,\r\n\tLineController,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tPointElement\r\n);\r\n\r\ndayjs.extend(minMax);\r\n\r\ninterface Props {\r\n\trange: number[];\r\n\tsetRange: (arg0: number[]) => void;\r\n\tisAccurate: boolean;\r\n\tsetIsAccurate: (arg0: boolean) => void;\r\n}\r\n\r\nconst YearSlider: React.FC<Props> = observer(\r\n\t({ range, setRange, isAccurate, setIsAccurate }) => {\r\n\t\tconst { list } = listStore;\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { defaultRange, setDefaultRange, userOptions } = optionsStore;\r\n\r\n\t\tconst [value, setValue] = useState(defaultRange);\r\n\r\n\t\tconst sliderRange: [number, number] = useMemo(() => {\r\n\t\t\tconst dates = Object.values(list).map((item: ExpenseItem) => item.date);\r\n\t\t\treturn [Math.min(...dates), Math.max(...dates)];\r\n\t\t}, [list]);\r\n\r\n\t\tconst marks: { [key: number]: string } = useMemo(() => {\r\n\t\t\tconst start = dayjs(sliderRange[0]).startOf('day');\r\n\t\t\tconst end = dayjs(sliderRange[1]).endOf('day');\r\n\t\t\tconst marks: { [key: number]: string } = {};\r\n\t\t\tlet currentDate = start;\r\n\t\t\tif (isAccurate) {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'day')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.date() === 1\r\n\t\t\t\t\t\t\t? currentDate.month() === 0\r\n\t\t\t\t\t\t\t\t? currentDate.format('YYYY')\r\n\t\t\t\t\t\t\t\t: currentDate.format('M')\r\n\t\t\t\t\t\t\t: ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'day').startOf('day');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'month')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.month() === 0 ? currentDate.format('YYYY') : ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'month').startOf('month');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn marks;\r\n\t\t}, [sliderRange, isAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetDefaultRange(sliderRange);\r\n\t\t}, [sliderRange, setDefaultRange]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetRange(defaultRange);\r\n\t\t}, [defaultRange, setRange]);\r\n\r\n\t\tconst handleRangeChanging = useCallback(\r\n\t\t\t(values: number[]) => {\r\n\t\t\t\tsetRange(values);\r\n\t\t\t},\r\n\t\t\t[setRange]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetValue(range);\r\n\t\t}, [range]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tisSmallScreen && setIsAccurate(false);\r\n\t\t}, [isSmallScreen, setIsAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\t!isAccurate &&\r\n\t\t\t\tsetRange([\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.max([\r\n\t\t\t\t\t\t\tdayjs(range[0]).startOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[0]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.min([\r\n\t\t\t\t\t\t\tdayjs(range[1]).endOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[1]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t]);\r\n\t\t\t// eslint-disable-next-line\r\n\t\t}, [isAccurate]);\r\n\r\n\t\treturn dayjs(defaultRange[1]).diff(dayjs(defaultRange[0]), 'hours') >=\r\n\t\t\t48 ? (\r\n\t\t\t<Flex\r\n\t\t\t\tgap={16}\r\n\t\t\t\talign='center'\r\n\t\t\t>\r\n\t\t\t\t<Segmented\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tdefaultValue={isAccurate}\r\n\t\t\t\t\tvalue={isAccurate}\r\n\t\t\t\t\tonChange={setIsAccurate}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t\t<TooltipAntd title={languages.byMonth[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t\t<ZoomOutOutlined />\r\n\t\t\t\t\t\t\t\t</TooltipAntd>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tvalue: false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t\t<TooltipAntd title={languages.byDay[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t\t<ZoomInOutlined />\r\n\t\t\t\t\t\t\t\t</TooltipAntd>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t\tdisabled: isSmallScreen,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\talign='stretch'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<SliderDiagram />\r\n\t\t\t\t\t<Slider\r\n\t\t\t\t\t\trange\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tmarks={marks}\r\n\t\t\t\t\t\tstep={null}\r\n\t\t\t\t\t\tdots={true}\r\n\t\t\t\t\t\ttooltip={{\r\n\t\t\t\t\t\t\tformatter: (value: number | undefined) => (\r\n\t\t\t\t\t\t\t\t<>{dayjs(value).format(isAccurate ? 'DD.MM.YY' : 'MM.YY')}</>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tmin={sliderRange[0]}\r\n\t\t\t\t\t\tmax={sliderRange[1]}\r\n\t\t\t\t\t\tdefaultValue={defaultRange}\r\n\t\t\t\t\t\tonChange={setValue}\r\n\t\t\t\t\t\tonChangeComplete={handleRangeChanging}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Flex>\r\n\t\t) : (\r\n\t\t\t<></>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default memo(YearSlider);\r\n","import React, { useMemo } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport languages from 'settings/languages';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport { Flex } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n\tChart,\r\n\tTooltip,\r\n\tBarController,\r\n\tBarElement,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n} from 'chart.js';\r\nimport { getValuesForBarDiagram } from 'utils/transformData';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Interval } from 'settings/interfaces';\r\nChart.register(Tooltip, BarController, BarElement, CategoryScale, LinearScale);\r\n\r\ninterface Props {\r\n\tmode: Interval;\r\n\tsetMode: (arg0: Interval) => void;\r\n}\r\n\r\nconst DiagramBar: React.FC<Props> = observer(({ mode, setMode }) => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { statsOptions, userOptions, setStatsRange } = optionsStore;\r\n\tconst { currency, language } = userOptions;\r\n\r\n\tconst { range } = statsOptions;\r\n\r\n\tconst values: number[] | { [key: string]: number } = useMemo(() => {\r\n\t\treturn getValuesForBarDiagram(list, currency, mode, dayjs(range[0]).year());\r\n\t}, [currency, list, mode, range]);\r\n\r\n\tconst colors = useMemo(\r\n\t\t() =>\r\n\t\t\tmode === 'year'\r\n\t\t\t\t? Object.keys(values).map((key: string) => {\r\n\t\t\t\t\t\tconst date = dayjs(key);\r\n\t\t\t\t\t\treturn date >= dayjs(range[0]).startOf('year') &&\r\n\t\t\t\t\t\t\tdate <= dayjs(range[1]).endOf('year')\r\n\t\t\t\t\t\t\t? '#f00'\r\n\t\t\t\t\t\t\t: '#f007';\r\n\t\t\t\t  })\r\n\t\t\t\t: Object.keys(values).map((key: string) => {\r\n\t\t\t\t\t\tconst month = Number(key);\r\n\t\t\t\t\t\treturn month >= dayjs(range[0]).startOf('month').month() &&\r\n\t\t\t\t\t\t\tmonth <= dayjs(range[1]).endOf('month').month()\r\n\t\t\t\t\t\t\t? '#f00'\r\n\t\t\t\t\t\t\t: '#f005';\r\n\t\t\t\t  }),\r\n\r\n\t\t[range, values, mode]\r\n\t);\r\n\r\n\tconst data = {\r\n\t\tlabels: mode === 'month' ? languages.months[language] : Object.keys(values),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: getSymbolAndPrice(currency),\r\n\t\t\t\tdata: Object.values(values),\r\n\t\t\t\tbackgroundColor: colors,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonClick: (_: any, chartElements: any) => {\r\n\t\t\tif (chartElements.length) {\r\n\t\t\t\tconst index = chartElements[0].index;\r\n\r\n\t\t\t\tconst newRangeItem =\r\n\t\t\t\t\tmode === 'year'\r\n\t\t\t\t\t\t? [\r\n\t\t\t\t\t\t\t\tdayjs(range[0])\r\n\t\t\t\t\t\t\t\t\t.year(Number(data.labels[index]))\r\n\t\t\t\t\t\t\t\t\t.startOf('year')\r\n\t\t\t\t\t\t\t\t\t.valueOf(),\r\n\t\t\t\t\t\t\t\tdayjs(range[0])\r\n\t\t\t\t\t\t\t\t\t.year(Number(data.labels[index]))\r\n\t\t\t\t\t\t\t\t\t.endOf('year')\r\n\t\t\t\t\t\t\t\t\t.valueOf(),\r\n\t\t\t\t\t\t  ]\r\n\t\t\t\t\t\t: [\r\n\t\t\t\t\t\t\t\tdayjs(range[0]).month(index).startOf('month').valueOf(),\r\n\t\t\t\t\t\t\t\tdayjs(range[0]).month(index).endOf('month').valueOf(),\r\n\t\t\t\t\t\t  ];\r\n\r\n\t\t\t\tmode === 'year' && setMode('month');\r\n\t\t\t\tsetStatsRange(newRangeItem);\r\n\t\t\t}\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Flex style={{ inlineSize: isSmallScreen ? 'unset' : '50%' }}>\r\n\t\t\t<Bar\r\n\t\t\t\tdata={data}\r\n\t\t\t\toptions={options}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default DiagramBar;\r\n","import React, { useMemo } from 'react';\r\nimport { Value } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { Flex } from 'antd';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport {\r\n\tChart,\r\n\tArcElement,\r\n\tPieController,\r\n\tTooltip,\r\n\tLegend,\r\n\tTitle,\r\n} from 'chart.js';\r\nimport { getValuesForPieDiagram } from 'utils/transformData';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { listStore } from 'utils/listStore';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nChart.register(ArcElement, PieController, Tooltip, Legend, Title);\r\n\r\nconst DiagramPie: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { userOptions, statsOptions } = optionsStore;\r\n\tconst { currency } = userOptions;\r\n\tconst { categories } = categoryStore;\r\n\r\n\tconst { range } = statsOptions;\r\n\r\n\tconst valuesByCategory: Value[] = useMemo(\r\n\t\t() => getValuesForPieDiagram(list, range, currency),\r\n\t\t[list, currency, range]\r\n\t);\r\n\r\n\tconst [names, colors, values] = [\r\n\t\tvaluesByCategory.map((value: Value) => categories[value.categoryId].name),\r\n\t\tvaluesByCategory.map((value: Value) => categories[value.categoryId].color),\r\n\t\tvaluesByCategory.map((value: Value) => Math.round(value.value)),\r\n\t];\r\n\r\n\tconst data = {\r\n\t\tlabels: names,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: getSymbolAndPrice(currency),\r\n\t\t\t\tdata: values,\r\n\t\t\t\tbackgroundColor: colors,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tposition: 'right' as const,\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tstyle={{\r\n\t\t\t\tinlineSize: isSmallScreen ? 'unset' : '40%',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Pie\r\n\t\t\t\tdata={data}\r\n\t\t\t\toptions={options}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default DiagramPie;\r\n","import { Card, Statistic, Typography } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { memo, useMemo } from 'react';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { getTotalInCurrentRange } from 'utils/transformData';\r\nimport { userStore } from 'utils/userStore';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport dayjs from 'dayjs';\r\n\r\nconst StatsCard: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { statsOptions, userOptions } = optionsStore;\r\n\r\n\tconst { range, isAccurate } = statsOptions;\r\n\tconst { currency } = userOptions;\r\n\r\n\tconst value = useMemo(\r\n\t\t() => getTotalInCurrentRange(list, range, currency),\r\n\t\t[list, range, currency]\r\n\t);\r\n\r\n\tconst cardTitle = useMemo(() => {\r\n\t\tconst format = isAccurate ? 'DD.MM.YY' : 'MM.YY';\r\n\t\treturn (\r\n\t\t\t<Typography.Text\r\n\t\t\t\ttype='secondary'\r\n\t\t\t\tstyle={{ fontSize: isSmallScreen ? '.8em' : '1em' }}\r\n\t\t\t>\r\n\t\t\t\t{dayjs(range[0]).format(format)}\r\n\t\t\t\t{range[0] !== range[1] ? `-${dayjs(range[1]).format(format)}` : ''}\r\n\t\t\t</Typography.Text>\r\n\t\t);\r\n\t}, [isAccurate, range, isSmallScreen]);\r\n\r\n\treturn (\r\n\t\t<Card bordered>\r\n\t\t\t<Statistic\r\n\t\t\t\ttitle={cardTitle}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tprefix={getSymbolAndPrice(currency)}\r\n\t\t\t\tvalueStyle={{\r\n\t\t\t\t\tcolor: '#f00',\r\n\t\t\t\t\tfontSize: isSmallScreen ? '1em' : '1.5em',\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Card>\r\n\t);\r\n});\r\n\r\nexport default memo(StatsCard);\r\n","import React, { useState, useCallback, memo, useEffect, useMemo } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Empty, Flex } from 'antd';\r\nimport DiagramBar from '../components/DiagramBar';\r\nimport DiagramPie from 'components/DiagramPie';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport dayjs from 'dayjs';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\nimport YearSlider from 'components/YearSlider';\r\nimport { Interval } from 'settings/interfaces';\r\nimport LargeSpin from 'components/LargeSpin';\r\nimport StatsCard from 'components/StatsCard';\r\nimport ResetButton from 'components/ResetButton';\r\n\r\ndayjs.extend(isBetween);\r\n\r\nconst Stats: React.FC = observer(() => {\r\n\tconst { list } = listStore;\r\n\tconst { isSmallScreen, loading } = userStore;\r\n\tconst { statsOptions, defaultRange, setStatsRange, setIsStatsAccurate } =\r\n\t\toptionsStore;\r\n\r\n\tconst { range, isAccurate } = statsOptions;\r\n\r\n\tconst [mode, setMode] = useState<Interval>('year');\r\n\r\n\tconst resetRange = useCallback(() => {\r\n\t\tsetMode('year');\r\n\t\tsetStatsRange(defaultRange);\r\n\t}, [setMode, defaultRange, setStatsRange]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst resetRangeWithEsc = (event: KeyboardEvent) => {\r\n\t\t\tif (event.key === 'Escape') {\r\n\t\t\t\tresetRange();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\twindow.addEventListener('keydown', resetRangeWithEsc);\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('keydown', resetRangeWithEsc);\r\n\t\t};\r\n\t}, [resetRange]);\r\n\r\n\tconst isRangeChanged = useMemo(\r\n\t\t() => range[0] !== defaultRange[0] || range[1] !== defaultRange[1],\r\n\t\t[range, defaultRange]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dayjs(range[0]).year() !== dayjs(range[1]).year()) {\r\n\t\t\tsetMode('year');\r\n\t\t} else {\r\n\t\t\tsetMode('month');\r\n\t\t}\r\n\t}, [range]);\r\n\r\n\tconst PanelJSX = (\r\n\t\t<Flex gap={16}>\r\n\t\t\t<StatsCard />\r\n\t\t\t<ResetButton\r\n\t\t\t\treset={resetRange}\r\n\t\t\t\tdisabled={!isRangeChanged}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst DiagramsJSX = (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t\talign='stretch'\r\n\t\t>\r\n\t\t\t<YearSlider\r\n\t\t\t\tsetIsAccurate={setIsStatsAccurate}\r\n\t\t\t\tisAccurate={isAccurate}\r\n\t\t\t\trange={range}\r\n\t\t\t\tsetRange={setStatsRange}\r\n\t\t\t/>\r\n\t\t\t<Flex\r\n\t\t\t\talign='center'\r\n\t\t\t\tjustify='space-between'\r\n\t\t\t\tvertical={isSmallScreen}\r\n\t\t\t>\r\n\t\t\t\t<DiagramBar\r\n\t\t\t\t\tmode={mode}\r\n\t\t\t\t\tsetMode={setMode}\r\n\t\t\t\t/>\r\n\t\t\t\t<DiagramPie />\r\n\t\t\t</Flex>\r\n\t\t</Flex>\r\n\t);\r\n\r\n\treturn loading ? (\r\n\t\t<LargeSpin />\r\n\t) : Object.keys(list).length ? (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={32}\r\n\t\t>\r\n\t\t\t{PanelJSX}\r\n\t\t\t{DiagramsJSX}\r\n\t\t</Flex>\r\n\t) : (\r\n\t\t<Empty\r\n\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\tdescription={''}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default memo(Stats);\r\n","import {\r\n\tExpenseItem,\r\n\tInterval,\r\n\tListOptions,\r\n\tValue,\r\n\tlanguage,\r\n} from 'settings/interfaces';\r\nimport { sortBy } from './utils';\r\nimport dayjs from 'dayjs';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\n\r\ndayjs.extend(isBetween);\r\n\r\nexport const getFilteredListIds = (\r\n\toptions: ListOptions,\r\n\tlist: { [key: string]: ExpenseItem },\r\n\tlanguage: language\r\n) => {\r\n\tconst { range, categoriesToFilterIds, sortingAlgorithm, isSortingReversed } =\r\n\t\toptions;\r\n\treturn sortBy(\r\n\t\tlist,\r\n\t\tObject.keys(list).filter(\r\n\t\t\t(key: string) =>\r\n\t\t\t\tlist[key].date >= range[0] &&\r\n\t\t\t\tlist[key].date <= range[1] &&\r\n\t\t\t\t(categoriesToFilterIds.length\r\n\t\t\t\t\t? categoriesToFilterIds.some(\r\n\t\t\t\t\t\t\t(id: string) => list[key].categoryId === id\r\n\t\t\t\t\t  )\r\n\t\t\t\t\t: true)\r\n\t\t),\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tlanguage\r\n\t);\r\n};\r\n\r\nexport const getListToShowOnCurrentPageIds = (\r\n\toptions: ListOptions,\r\n\tfilteredListIds: string[]\r\n) => {\r\n\tconst { currentPage, pageSize } = options;\r\n\tconst startIndex = (currentPage - 1) * pageSize;\r\n\tconst endIndex = startIndex + pageSize;\r\n\treturn filteredListIds.slice(startIndex, endIndex);\r\n};\r\n\r\nexport const getValuesForBarDiagram = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\tcurrency: string,\r\n\tmode: Interval,\r\n\tyear: number\r\n) => {\r\n\tif (mode === 'year') {\r\n\t\tconst result: { [key: number]: number } = {};\r\n\t\tObject.keys(list).forEach((key: string) => {\r\n\t\t\tconst resultKey: number = dayjs(list[key].date).year();\r\n\t\t\tif (result[resultKey] === undefined) {\r\n\t\t\t\tresult[resultKey] = list[key].price[currency];\r\n\t\t\t} else {\r\n\t\t\t\tresult[resultKey] += list[key].price[currency];\r\n\t\t\t}\r\n\t\t});\r\n\t\tfor (let year in result) {\r\n\t\t\tresult[year] = Math.round(result[year]);\r\n\t\t}\r\n\t\treturn result;\r\n\t} else if (mode === 'month') {\r\n\t\tconst result: number[] = new Array(12).fill(0);\r\n\t\tObject.keys(list).forEach((key: string) => {\r\n\t\t\tif (dayjs(list[key].date).year() === year) {\r\n\t\t\t\tconst index: number = dayjs(list[key].date).month();\r\n\t\t\t\tresult[index] += list[key].price[currency];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result.map((item: number) => Math.round(item));\r\n\t}\r\n\treturn [];\r\n};\r\n\r\nexport const getValuesForPieDiagram = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\trange: number[],\r\n\tcurrency: string\r\n) => {\r\n\tconst values: Value[] = [];\r\n\tObject.keys(list).forEach((key: string) => {\r\n\t\tif (list[key].date > range[0] && list[key].date < range[1]) {\r\n\t\t\tconst categoryKey: number = Object.keys(values).findIndex(\r\n\t\t\t\t(n: string) => values[Number(n)].categoryId === list[key].categoryId\r\n\t\t\t);\r\n\t\t\tif (categoryKey !== -1) {\r\n\t\t\t\tvalues[categoryKey].value += list[key].price[currency];\r\n\t\t\t} else {\r\n\t\t\t\tvalues.push({\r\n\t\t\t\t\tcategoryId: list[key].categoryId,\r\n\t\t\t\t\tvalue: list[key].price[currency],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn values.map((value: Value) => ({\r\n\t\t...value,\r\n\t\tvalue: Math.round(value.value),\r\n\t}));\r\n};\r\n\r\nexport const getTotalInCurrentRange = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\trange: number[],\r\n\tcurrency: string\r\n) =>\r\n\tMath.floor(\r\n\t\tObject.values(list).reduce((acc: number, item: ExpenseItem) => {\r\n\t\t\tif (item.date >= range[0] && item.date <= range[1]) {\r\n\t\t\t\treturn acc + item.price[currency];\r\n\t\t\t}\r\n\t\t\treturn acc;\r\n\t\t}, 0)\r\n\t);\r\n\r\nexport const getValuesByMonth = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\trange: number[]\r\n) => {\r\n\tconst values: number[] = [];\r\n\tconst end = dayjs(range[1]);\r\n\tlet startDate = dayjs(range[0]);\r\n\tlet endDate = dayjs(range[0]).add(1, 'month');\r\n\r\n\twhile (!endDate.isAfter(end, 'day')) {\r\n\t\tconst itemsInMonth = Object.values(list).filter(\r\n\t\t\t// eslint-disable-next-line\r\n\t\t\t(item: ExpenseItem) =>\r\n\t\t\t\titem.date > startDate.valueOf() && item.date < endDate.valueOf()\r\n\t\t);\r\n\t\tconst valueForMonth = itemsInMonth.reduce(\r\n\t\t\t(acc, item) => acc + item.price.USD,\r\n\t\t\t0\r\n\t\t);\r\n\t\tvalues.push(valueForMonth);\r\n\t\tstartDate = startDate.add(1, 'month');\r\n\t\tendDate = endDate.add(1, 'month');\r\n\t}\r\n\r\n\treturn values;\r\n};\r\n","import { ExpenseItem, Sort, language } from 'settings/interfaces';\r\n\r\nexport const getSymbolAndPrice = (currency: string, price?: number) => {\r\n\tlet result = '';\r\n\tif (currency === 'USD') result += '$';\r\n\tif (currency === 'EUR') result += '€';\r\n\tif (currency === 'RUB') result += '₽';\r\n\r\n\tconst formattedPrice = Math.round(price as number)\r\n\t\t?.toString()\r\n\t\t.split('')\r\n\t\t.reverse()\r\n\t\t.reduce(\r\n\t\t\t(acc: string[], symbol: string, index: number) =>\r\n\t\t\t\tindex % 3 === 0 && index !== 0\r\n\t\t\t\t\t? [...acc, symbol + ',']\r\n\t\t\t\t\t: [...acc, symbol],\r\n\t\t\t[]\r\n\t\t)\r\n\t\t.reverse()\r\n\t\t.join('');\r\n\r\n\treturn price === undefined ? result : result + formattedPrice;\r\n};\r\n\r\nexport const sortBy = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\tlistKeys: string[],\r\n\tsortingAlgorithm: Sort,\r\n\treversed: boolean,\r\n\tlanguage?: language\r\n) => {\r\n\tlet result: string[];\r\n\tswitch (sortingAlgorithm) {\r\n\t\tcase 'date':\r\n\t\t\tresult = listKeys.sort(\r\n\t\t\t\t(prev: string, next: string) =>\r\n\t\t\t\t\tlist[next].date.valueOf() - list[prev].date.valueOf()\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'title':\r\n\t\t\tresult = listKeys.sort((prev: string, next: string) =>\r\n\t\t\t\tlist[prev].title.localeCompare(list[next].title, language, {\r\n\t\t\t\t\tsensitivity: 'base',\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'price':\r\n\t\t\tresult = listKeys.sort(\r\n\t\t\t\t(prev: string, next: string) =>\r\n\t\t\t\t\tlist[next].price.USD - list[prev].price.USD\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tresult = listKeys;\r\n\t}\r\n\r\n\treturn reversed ? result.reverse() : result;\r\n};\r\n"],"names":["observer","_ref","disabled","reset","userOptions","optionsStore","isSmallScreen","userStore","_jsx","Tooltip","title","languages","language","children","Button","onClick","size","ReloadOutlined","SliderDiagram","list","listStore","defaultRange","valuesByMonth","useMemo","getValuesByMonth","data","labels","Array","length","fill","datasets","Line","style","inlineSize","options","plugins","legend","display","tooltip","enabled","scales","x","grid","y","elements","point","radius","line","cubicInterpolationMode","borderColor","aspectRatio","memo","Chart","register","LineElement","LineController","CategoryScale","LinearScale","PointElement","dayjs","minMax","YearSlider","range","setRange","isAccurate","setIsAccurate","setDefaultRange","value","setValue","useState","sliderRange","dates","Object","values","map","item","date","Math","min","max","marks","start","startOf","end","endOf","currentDate","isBefore","isSame","valueOf","month","format","add","useEffect","handleRangeChanging","useCallback","diff","_jsxs","Flex","gap","align","Segmented","defaultValue","onChange","label","TooltipAntd","byMonth","ZoomOutOutlined","byDay","ZoomInOutlined","vertical","Slider","step","dots","formatter","_Fragment","onChangeComplete","BarController","BarElement","mode","setMode","statsOptions","setStatsRange","currency","getValuesForBarDiagram","year","colors","keys","key","Number","months","getSymbolAndPrice","backgroundColor","_","chartElements","index","newRangeItem","Bar","ArcElement","PieController","Legend","Title","categories","categoryStore","valuesByCategory","getValuesForPieDiagram","names","categoryId","name","color","round","Pie","position","StatsCard","getTotalInCurrentRange","cardTitle","Typography","Text","type","fontSize","concat","Card","bordered","Statistic","prefix","valueStyle","isBetween","Stats","loading","setIsStatsAccurate","resetRange","resetRangeWithEsc","event","window","addEventListener","removeEventListener","isRangeChanged","PanelJSX","ResetButton","DiagramsJSX","justify","DiagramBar","DiagramPie","LargeSpin","Empty","image","PRESENTED_IMAGE_SIMPLE","description","getFilteredListIds","categoriesToFilterIds","sortingAlgorithm","isSortingReversed","sortBy","filter","some","id","getListToShowOnCurrentPageIds","filteredListIds","currentPage","pageSize","startIndex","endIndex","slice","result","forEach","resultKey","undefined","price","categoryKey","findIndex","n","push","floor","reduce","acc","startDate","endDate","isAfter","valueForMonth","USD","_Math$round","formattedPrice","toString","split","reverse","symbol","join","listKeys","reversed","sort","prev","next","localeCompare","sensitivity"],"sourceRoot":""}