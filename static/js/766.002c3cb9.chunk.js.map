{"version":3,"file":"static/js/766.002c3cb9.chunk.js","mappings":"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","sources":["components/SliderDiagram.tsx","components/YearSlider.tsx","components/DiagramBar.tsx","components/DiagramPie.tsx","components/StatsCard.tsx","pages/Stats.tsx","utils/transformData.ts","utils/utils.ts"],"sourcesContent":["import { observer } from 'mobx-react-lite';\r\nimport React, { memo, useMemo } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { getValuesByMonth } from 'utils/transformData';\r\n\r\nconst SliderDiagram: React.FC = observer(() => {\r\n\tconst { list } = listStore;\r\n\tconst { defaultRange } = optionsStore;\r\n\r\n\tconst valuesByMonth: number[] | { [key: string]: number } = useMemo(\r\n\t\t() => getValuesByMonth(list, defaultRange),\r\n\t\t[list, defaultRange]\r\n\t);\r\n\r\n\tconst data = {\r\n\t\tlabels: new Array(valuesByMonth.length).fill(''),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tdata: valuesByMonth,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tx: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\ty: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\telements: {\r\n\t\t\tpoint: {\r\n\t\t\t\tradius: 0,\r\n\t\t\t},\r\n\t\t\tline: {\r\n\t\t\t\tcubicInterpolationMode: 'monotone' as 'monotone',\r\n\t\t\t\tborderColor: '#7775',\r\n\t\t\t},\r\n\t\t},\r\n\t\taspectRatio: 25,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Line\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\tdata={data}\r\n\t\t\toptions={options}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default memo(SliderDiagram);\r\n","import React, { memo, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Slider } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport { ExpenseItem } from 'settings/interfaces';\r\nimport dayjs from 'dayjs';\r\nimport minMax from 'dayjs/plugin/minMax';\r\nimport { ZoomInOutlined, ZoomOutOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport {\r\n\tChart,\r\n\tTooltip,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tLineElement,\r\n\tLineController,\r\n\tPointElement,\r\n} from 'chart.js';\r\nimport SliderDiagram from './SliderDiagram';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nChart.register(\r\n\tTooltip,\r\n\tLineElement,\r\n\tLineController,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tPointElement\r\n);\r\n\r\ndayjs.extend(minMax);\r\n\r\ninterface Props {\r\n\trange: number[];\r\n\tsetRange: (arg0: number[]) => void;\r\n\tisAccurate: boolean;\r\n\tsetIsAccurate: (arg0: boolean) => void;\r\n}\r\n\r\nconst YearSlider: React.FC<Props> = observer(\r\n\t({ range, setRange, isAccurate, setIsAccurate }) => {\r\n\t\tconst { list } = listStore;\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { defaultRange, setDefaultRange } = optionsStore;\r\n\r\n\t\tconst [value, setValue] = useState(defaultRange);\r\n\r\n\t\tconst sliderRange: [number, number] = useMemo(() => {\r\n\t\t\tconst mappedList = Object.values(list).map((item: ExpenseItem) =>\r\n\t\t\t\tdayjs(item.date)\r\n\t\t\t);\r\n\t\t\treturn [\r\n\t\t\t\tdayjs.min(mappedList)?.valueOf() || 0,\r\n\t\t\t\tdayjs.max(mappedList)?.valueOf() || 0,\r\n\t\t\t];\r\n\t\t}, [list]);\r\n\r\n\t\tconst marks: { [key: number]: string } = useMemo(() => {\r\n\t\t\tconst start = dayjs(sliderRange[0]).startOf('day');\r\n\t\t\tconst end = dayjs(sliderRange[1]).endOf('day');\r\n\t\t\tconst marks: { [key: number]: string } = {};\r\n\t\t\tlet currentDate = start;\r\n\t\t\tif (isAccurate) {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'day')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.date() === 1\r\n\t\t\t\t\t\t\t? currentDate.month() === 0\r\n\t\t\t\t\t\t\t\t? currentDate.format('YYYY')\r\n\t\t\t\t\t\t\t\t: currentDate.format('M')\r\n\t\t\t\t\t\t\t: ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'day').startOf('day');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'month')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.month() === 0 ? currentDate.format('YYYY') : ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'month').startOf('month');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn marks;\r\n\t\t}, [sliderRange, isAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetDefaultRange(sliderRange);\r\n\t\t}, [sliderRange, setDefaultRange]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetRange(defaultRange);\r\n\t\t}, [defaultRange, setRange]);\r\n\r\n\t\tconst handleRangeChanging = useCallback(\r\n\t\t\t(values: number[]) => {\r\n\t\t\t\tsetRange(values);\r\n\t\t\t},\r\n\t\t\t[setRange]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetValue(range);\r\n\t\t}, [range]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tisSmallScreen && setIsAccurate(false);\r\n\t\t}, [isSmallScreen, setIsAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\t!isAccurate &&\r\n\t\t\t\tsetRange([\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.max([\r\n\t\t\t\t\t\t\tdayjs(range[0]).startOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[0]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.min([\r\n\t\t\t\t\t\t\tdayjs(range[1]).endOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[1]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t]);\r\n\t\t\t// eslint-disable-next-line\r\n\t\t}, [isAccurate]);\r\n\r\n\t\treturn dayjs(defaultRange[1]).diff(dayjs(defaultRange[0]), 'hours') >=\r\n\t\t\t48 ? (\r\n\t\t\t<Flex\r\n\t\t\t\tgap={16}\r\n\t\t\t\talign='center'\r\n\t\t\t>\r\n\t\t\t\t<Segmented\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tdefaultValue={isAccurate}\r\n\t\t\t\t\tvalue={isAccurate}\r\n\t\t\t\t\tonChange={setIsAccurate}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{ label: <ZoomOutOutlined />, value: false },\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: <ZoomInOutlined />,\r\n\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t\tdisabled: isSmallScreen,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\talign='stretch'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<SliderDiagram />\r\n\t\t\t\t\t<Slider\r\n\t\t\t\t\t\trange\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tmarks={marks}\r\n\t\t\t\t\t\tstep={null}\r\n\t\t\t\t\t\tdots={true}\r\n\t\t\t\t\t\ttooltip={{\r\n\t\t\t\t\t\t\tformatter: (value: number | undefined) => (\r\n\t\t\t\t\t\t\t\t<>{dayjs(value).format(isAccurate ? 'DD.MM.YY' : 'MM.YY')}</>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tmin={sliderRange[0]}\r\n\t\t\t\t\t\tmax={sliderRange[1]}\r\n\t\t\t\t\t\tdefaultValue={defaultRange}\r\n\t\t\t\t\t\tonChange={setValue}\r\n\t\t\t\t\t\tonChangeComplete={handleRangeChanging}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Flex>\r\n\t\t) : (\r\n\t\t\t<></>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default memo(YearSlider);\r\n","import React, { useMemo } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport languages from 'settings/languages';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport { Flex } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n\tChart,\r\n\tTooltip,\r\n\tBarController,\r\n\tBarElement,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n} from 'chart.js';\r\nimport { getValuesForBarDiagram } from 'utils/transformData';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Interval } from 'settings/interfaces';\r\nChart.register(Tooltip, BarController, BarElement, CategoryScale, LinearScale);\r\n\r\ninterface Props {\r\n\tmode: Interval;\r\n\tsetMode: (arg0: Interval) => void;\r\n}\r\n\r\nconst DiagramBar: React.FC<Props> = observer(({ mode, setMode }) => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { statsOptions, userOptions, setStatsRange } = optionsStore;\r\n\tconst { currency, language } = userOptions;\r\n\r\n\tconst { range } = statsOptions;\r\n\r\n\tconst values: number[] | { [key: string]: number } = useMemo(() => {\r\n\t\treturn getValuesForBarDiagram(list, currency, mode, dayjs(range[0]).year());\r\n\t}, [currency, list, mode, range]);\r\n\r\n\tconst data = {\r\n\t\tlabels: mode === 'month' ? languages.months[language] : Object.keys(values),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: getSymbolAndPrice(currency),\r\n\t\t\t\tdata: Object.values(values),\r\n\t\t\t\tbackgroundColor: '#f00',\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonClick: (_: any, chartElements: any) => {\r\n\t\t\tif (chartElements.length) {\r\n\t\t\t\tconst index = chartElements[0].index;\r\n\r\n\t\t\t\tconst newRangeItem =\r\n\t\t\t\t\tmode === 'year'\r\n\t\t\t\t\t\t? [\r\n\t\t\t\t\t\t\t\tdayjs(range[0])\r\n\t\t\t\t\t\t\t\t\t.year(Number(data.labels[index]))\r\n\t\t\t\t\t\t\t\t\t.startOf('year')\r\n\t\t\t\t\t\t\t\t\t.valueOf(),\r\n\t\t\t\t\t\t\t\tdayjs(range[0])\r\n\t\t\t\t\t\t\t\t\t.year(Number(data.labels[index]))\r\n\t\t\t\t\t\t\t\t\t.endOf('year')\r\n\t\t\t\t\t\t\t\t\t.valueOf(),\r\n\t\t\t\t\t\t  ]\r\n\t\t\t\t\t\t: [\r\n\t\t\t\t\t\t\t\tdayjs(range[0]).month(index).startOf('month').valueOf(),\r\n\t\t\t\t\t\t\t\tdayjs(range[0]).month(index).endOf('month').valueOf(),\r\n\t\t\t\t\t\t  ];\r\n\r\n\t\t\t\tmode === 'year' && setMode('month');\r\n\t\t\t\tsetStatsRange(newRangeItem);\r\n\t\t\t}\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Flex style={{ inlineSize: isSmallScreen ? 'unset' : '50%' }}>\r\n\t\t\t<Bar\r\n\t\t\t\tdata={data}\r\n\t\t\t\toptions={options}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default DiagramBar;\r\n","import React, { useMemo } from 'react';\r\nimport { Value } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { Flex } from 'antd';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport {\r\n\tChart,\r\n\tArcElement,\r\n\tPieController,\r\n\tTooltip,\r\n\tLegend,\r\n\tTitle,\r\n} from 'chart.js';\r\nimport { getValuesForPieDiagram } from 'utils/transformData';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { listStore } from 'utils/listStore';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nChart.register(ArcElement, PieController, Tooltip, Legend, Title);\r\n\r\nconst DiagramPie: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { userOptions, statsOptions } = optionsStore;\r\n\tconst { currency } = userOptions;\r\n\tconst { categories } = categoryStore;\r\n\r\n\tconst { range } = statsOptions;\r\n\r\n\tconst valuesByCategory: Value[] = useMemo(\r\n\t\t() => getValuesForPieDiagram(list, range, currency),\r\n\t\t[list, currency, range]\r\n\t);\r\n\r\n\tconst [names, colors, values] = [\r\n\t\tvaluesByCategory.map((value: Value) => categories[value.categoryId].name),\r\n\t\tvaluesByCategory.map((value: Value) => categories[value.categoryId].color),\r\n\t\tvaluesByCategory.map((value: Value) => Math.round(value.value)),\r\n\t];\r\n\r\n\tconst data = {\r\n\t\tlabels: names,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: getSymbolAndPrice(currency),\r\n\t\t\t\tdata: values,\r\n\t\t\t\tbackgroundColor: colors,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tposition: 'right' as const,\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tstyle={{\r\n\t\t\t\tinlineSize: isSmallScreen ? 'unset' : '40%',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Pie\r\n\t\t\t\tdata={data}\r\n\t\t\t\toptions={options}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default DiagramPie;\r\n","import { Card, Statistic, Typography } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { memo, useMemo } from 'react';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { getTotalInCurrentRange } from 'utils/transformData';\r\nimport { userStore } from 'utils/userStore';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport dayjs from 'dayjs';\r\n\r\nconst StatsCard: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { statsOptions, userOptions } = optionsStore;\r\n\r\n\tconst { range, isAccurate } = statsOptions;\r\n\tconst { currency } = userOptions;\r\n\r\n\tconst value = useMemo(\r\n\t\t() => getTotalInCurrentRange(list, range, currency),\r\n\t\t[list, range, currency]\r\n\t);\r\n\r\n\tconst cardTitle = useMemo(() => {\r\n\t\tconst format = isAccurate ? 'DD.MM.YY' : 'MM.YY';\r\n\t\treturn (\r\n\t\t\t<Typography.Text\r\n\t\t\t\ttype='secondary'\r\n\t\t\t\tstyle={{ fontSize: isSmallScreen ? '.8em' : '1em' }}\r\n\t\t\t>\r\n\t\t\t\t{dayjs(range[0]).format(format)}\r\n\t\t\t\t{range[0] !== range[1] ? `-${dayjs(range[1]).format(format)}` : ''}\r\n\t\t\t</Typography.Text>\r\n\t\t);\r\n\t}, [isAccurate, range, isSmallScreen]);\r\n\r\n\treturn (\r\n\t\t<Card bordered>\r\n\t\t\t<Statistic\r\n\t\t\t\ttitle={cardTitle}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tprefix={getSymbolAndPrice(currency)}\r\n\t\t\t\tvalueStyle={{\r\n\t\t\t\t\tcolor: '#f00',\r\n\t\t\t\t\tfontSize: isSmallScreen ? '1em' : '1.5em',\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Card>\r\n\t);\r\n});\r\n\r\nexport default memo(StatsCard);\r\n","import React, { useState, useCallback, memo, useEffect, useMemo } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Button, Empty, Flex } from 'antd';\r\nimport DiagramBar from '../components/DiagramBar';\r\nimport DiagramPie from 'components/DiagramPie';\r\nimport { userStore } from 'utils/userStore';\r\nimport { ReloadOutlined } from '@ant-design/icons';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport dayjs from 'dayjs';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\nimport YearSlider from 'components/YearSlider';\r\nimport { Interval } from 'settings/interfaces';\r\nimport LargeSpin from 'components/LargeSpin';\r\nimport StatsCard from 'components/StatsCard';\r\n\r\ndayjs.extend(isBetween);\r\n\r\nconst Stats: React.FC = observer(() => {\r\n\tconst { list } = listStore;\r\n\tconst { isSmallScreen, loading } = userStore;\r\n\tconst { statsOptions, defaultRange, setStatsRange, setIsStatsAccurate } =\r\n\t\toptionsStore;\r\n\r\n\tconst { range, isAccurate } = statsOptions;\r\n\r\n\tconst [mode, setMode] = useState<Interval>('year');\r\n\r\n\tconst resetRange = useCallback(() => {\r\n\t\tsetMode('year');\r\n\t\tsetStatsRange(defaultRange);\r\n\t}, [setMode, defaultRange, setStatsRange]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst resetRangeWithEsc = (event: KeyboardEvent) => {\r\n\t\t\tif (event.key === 'Escape') {\r\n\t\t\t\tresetRange();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\twindow.addEventListener('keydown', resetRangeWithEsc);\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('keydown', resetRangeWithEsc);\r\n\t\t};\r\n\t}, [resetRange]);\r\n\r\n\tconst isRangeChanged = useMemo(\r\n\t\t() => range[0] !== defaultRange[0] || range[1] !== defaultRange[1],\r\n\t\t[range, defaultRange]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dayjs(range[0]).year() !== dayjs(range[1]).year()) {\r\n\t\t\tsetMode('year');\r\n\t\t} else {\r\n\t\t\tsetMode('month');\r\n\t\t}\r\n\t}, [range]);\r\n\r\n\tconst PanelJSX = (\r\n\t\t<Flex gap={16}>\r\n\t\t\t<StatsCard />\r\n\t\t\t<Button\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tonClick={resetRange}\r\n\t\t\t\tdisabled={!isRangeChanged}\r\n\t\t\t>\r\n\t\t\t\t<ReloadOutlined />\r\n\t\t\t</Button>\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst DiagramsJSX = (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t\talign='stretch'\r\n\t\t>\r\n\t\t\t<YearSlider\r\n\t\t\t\tsetIsAccurate={setIsStatsAccurate}\r\n\t\t\t\tisAccurate={isAccurate}\r\n\t\t\t\trange={range}\r\n\t\t\t\tsetRange={setStatsRange}\r\n\t\t\t/>\r\n\t\t\t<Flex\r\n\t\t\t\talign='center'\r\n\t\t\t\tjustify='space-between'\r\n\t\t\t\tvertical={isSmallScreen}\r\n\t\t\t>\r\n\t\t\t\t<DiagramBar\r\n\t\t\t\t\tmode={mode}\r\n\t\t\t\t\tsetMode={setMode}\r\n\t\t\t\t/>\r\n\t\t\t\t<DiagramPie />\r\n\t\t\t</Flex>\r\n\t\t</Flex>\r\n\t);\r\n\r\n\treturn loading ? (\r\n\t\t<LargeSpin />\r\n\t) : Object.keys(list).length ? (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={32}\r\n\t\t>\r\n\t\t\t{PanelJSX}\r\n\t\t\t{DiagramsJSX}\r\n\t\t</Flex>\r\n\t) : (\r\n\t\t<Empty\r\n\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\tdescription={''}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default memo(Stats);\r\n","import {\r\n\tExpenseItem,\r\n\tInterval,\r\n\tListOptions,\r\n\tValue,\r\n\tlanguage,\r\n} from 'settings/interfaces';\r\nimport { sortBy } from './utils';\r\nimport dayjs from 'dayjs';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\n\r\ndayjs.extend(isBetween);\r\n\r\nexport const getFilteredListIds = (\r\n\toptions: ListOptions,\r\n\tlist: { [key: string]: ExpenseItem },\r\n\tlanguage: language\r\n) => {\r\n\tconst { range, categoriesToFilterIds, sortingAlgorithm, isSortingReversed } =\r\n\t\toptions;\r\n\treturn sortBy(\r\n\t\tlist,\r\n\t\tObject.keys(list).filter(\r\n\t\t\t(key: string) =>\r\n\t\t\t\tlist[key].date > range[0] &&\r\n\t\t\t\tlist[key].date < range[1] &&\r\n\t\t\t\t(categoriesToFilterIds.length\r\n\t\t\t\t\t? categoriesToFilterIds.some(\r\n\t\t\t\t\t\t\t(id: string) => list[key].categoryId === id\r\n\t\t\t\t\t  )\r\n\t\t\t\t\t: true)\r\n\t\t),\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tlanguage\r\n\t);\r\n};\r\n\r\nexport const getListToShowOnCurrentPageIds = (\r\n\toptions: ListOptions,\r\n\tfilteredListIds: string[]\r\n) => {\r\n\tconst { currentPage, pageSize } = options;\r\n\tconst startIndex = (currentPage - 1) * pageSize;\r\n\tconst endIndex = startIndex + pageSize;\r\n\treturn filteredListIds.slice(startIndex, endIndex);\r\n};\r\n\r\nexport const getValuesForBarDiagram = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\tcurrency: string,\r\n\tmode: Interval,\r\n\tyear: number\r\n) => {\r\n\tif (mode === 'year') {\r\n\t\tconst result: { [key: number]: number } = {};\r\n\t\tObject.keys(list).forEach((key: string) => {\r\n\t\t\tconst resultKey: number = dayjs(list[key].date).year();\r\n\t\t\tif (result[resultKey] === undefined) {\r\n\t\t\t\tresult[resultKey] = list[key].price[currency];\r\n\t\t\t} else {\r\n\t\t\t\tresult[resultKey] += list[key].price[currency];\r\n\t\t\t}\r\n\t\t});\r\n\t\tfor (let year in result) {\r\n\t\t\tresult[year] = Math.round(result[year]);\r\n\t\t}\r\n\t\treturn result;\r\n\t} else if (mode === 'month') {\r\n\t\tconst result: number[] = new Array(12).fill(0);\r\n\t\tObject.keys(list).forEach((key: string) => {\r\n\t\t\tif (dayjs(list[key].date).year() === year) {\r\n\t\t\t\tconst index: number = dayjs(list[key].date).month();\r\n\t\t\t\tresult[index] += list[key].price[currency];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result.map((item: number) => Math.round(item));\r\n\t}\r\n\treturn [];\r\n};\r\n\r\nexport const getValuesForPieDiagram = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\trange: number[],\r\n\tcurrency: string\r\n) => {\r\n\tconst values: Value[] = [];\r\n\tObject.keys(list).forEach((key: string) => {\r\n\t\tif (list[key].date > range[0] && list[key].date < range[1]) {\r\n\t\t\tconst categoryKey: number = Object.keys(values).findIndex(\r\n\t\t\t\t(n: string) => values[Number(n)].categoryId === list[key].categoryId\r\n\t\t\t);\r\n\t\t\tif (categoryKey !== -1) {\r\n\t\t\t\tvalues[categoryKey].value += list[key].price[currency];\r\n\t\t\t} else {\r\n\t\t\t\tvalues.push({\r\n\t\t\t\t\tcategoryId: list[key].categoryId,\r\n\t\t\t\t\tvalue: list[key].price[currency],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn values.map((value: Value) => ({\r\n\t\t...value,\r\n\t\tvalue: Math.round(value.value),\r\n\t}));\r\n};\r\n\r\nexport const getTotalInCurrentRange = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\trange: number[],\r\n\tcurrency: string\r\n) =>\r\n\tMath.floor(\r\n\t\tObject.values(list).reduce((acc: number, item: ExpenseItem) => {\r\n\t\t\tif (item.date > range[0] && item.date < range[1]) {\r\n\t\t\t\treturn acc + item.price[currency];\r\n\t\t\t}\r\n\t\t\treturn acc;\r\n\t\t}, 0)\r\n\t);\r\n\r\nexport const getValuesByMonth = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\trange: number[]\r\n) => {\r\n\tconst values: number[] = [];\r\n\tconst end = dayjs(range[1]);\r\n\tlet startDate = dayjs(range[0]);\r\n\tlet endDate = dayjs(range[0]).add(1, 'month');\r\n\r\n\twhile (!endDate.isAfter(end, 'day')) {\r\n\t\tconst itemsInMonth = Object.values(list).filter(\r\n\t\t\t// eslint-disable-next-line\r\n\t\t\t(item: ExpenseItem) =>\r\n\t\t\t\titem.date > startDate.valueOf() && item.date < endDate.valueOf()\r\n\t\t);\r\n\t\tconst valueForMonth = itemsInMonth.reduce(\r\n\t\t\t(acc, item) => acc + item.price.USD,\r\n\t\t\t0\r\n\t\t);\r\n\t\tvalues.push(valueForMonth);\r\n\t\tstartDate = startDate.add(1, 'month');\r\n\t\tendDate = endDate.add(1, 'month');\r\n\t}\r\n\r\n\treturn values;\r\n};\r\n","import { ExpenseItem, Sort, language } from 'settings/interfaces';\r\n\r\nexport const getSymbolAndPrice = (currency: string, price?: number) => {\r\n\tlet result = '';\r\n\tif (currency === 'USD') result += '$';\r\n\tif (currency === 'EUR') result += '€';\r\n\tif (currency === 'RUB') result += '₽';\r\n\r\n\tconst formattedPrice = Math.round(price as number)\r\n\t\t?.toString()\r\n\t\t.split('')\r\n\t\t.reverse()\r\n\t\t.reduce(\r\n\t\t\t(acc: string[], symbol: string, index: number) =>\r\n\t\t\t\tindex % 3 === 0 && index !== 0\r\n\t\t\t\t\t? [...acc, symbol + ',']\r\n\t\t\t\t\t: [...acc, symbol],\r\n\t\t\t[]\r\n\t\t)\r\n\t\t.reverse()\r\n\t\t.join('');\r\n\r\n\treturn price === undefined ? result : result + formattedPrice;\r\n};\r\n\r\nexport const sortBy = (\r\n\tlist: { [key: number]: ExpenseItem },\r\n\tlistKeys: string[],\r\n\tsortingAlgorithm: Sort,\r\n\treversed: boolean,\r\n\tlanguage?: language\r\n) => {\r\n\tlet result: string[];\r\n\tswitch (sortingAlgorithm) {\r\n\t\tcase 'date':\r\n\t\t\tresult = listKeys.sort(\r\n\t\t\t\t(prev: string, next: string) =>\r\n\t\t\t\t\tlist[Number(next)].date.valueOf() - list[Number(prev)].date.valueOf()\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'title':\r\n\t\t\tresult = listKeys.sort((prev: string, next: string) =>\r\n\t\t\t\tlist[Number(prev)].title.localeCompare(\r\n\t\t\t\t\tlist[Number(next)].title,\r\n\t\t\t\t\tlanguage,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsensitivity: 'base',\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'price':\r\n\t\t\tresult = listKeys.sort(\r\n\t\t\t\t(prev: string, next: string) =>\r\n\t\t\t\t\tlist[Number(next)].price.USD - list[Number(prev)].price.USD\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tresult = listKeys;\r\n\t}\r\n\r\n\treturn reversed ? result.reverse() : result;\r\n};\r\n"],"names":["SliderDiagram","observer","list","listStore","defaultRange","optionsStore","valuesByMonth","useMemo","getValuesByMonth","data","labels","Array","length","fill","datasets","_jsx","Line","style","inlineSize","options","plugins","legend","display","tooltip","enabled","scales","x","grid","y","elements","point","radius","line","cubicInterpolationMode","borderColor","aspectRatio","memo","Chart","register","Tooltip","LineElement","LineController","CategoryScale","LinearScale","PointElement","dayjs","minMax","YearSlider","_ref","range","setRange","isAccurate","setIsAccurate","isSmallScreen","userStore","setDefaultRange","value","setValue","useState","sliderRange","_dayjs$min","_dayjs$max","mappedList","Object","values","map","item","date","valueOf","marks","start","startOf","end","endOf","currentDate","isBefore","isSame","month","format","add","useEffect","handleRangeChanging","useCallback","diff","_jsxs","Flex","gap","align","children","Segmented","size","defaultValue","onChange","label","ZoomOutOutlined","ZoomInOutlined","disabled","vertical","Slider","step","dots","formatter","_Fragment","min","max","onChangeComplete","BarController","BarElement","mode","setMode","statsOptions","userOptions","setStatsRange","currency","language","getValuesForBarDiagram","year","languages","months","keys","getSymbolAndPrice","backgroundColor","onClick","_","chartElements","index","newRangeItem","Number","Bar","ArcElement","PieController","Legend","Title","categories","categoryStore","valuesByCategory","getValuesForPieDiagram","names","colors","categoryId","name","color","Math","round","Pie","position","StatsCard","getTotalInCurrentRange","cardTitle","Typography","Text","type","fontSize","concat","Card","bordered","Statistic","title","prefix","valueStyle","isBetween","Stats","loading","setIsStatsAccurate","resetRange","resetRangeWithEsc","event","key","window","addEventListener","removeEventListener","isRangeChanged","PanelJSX","Button","ReloadOutlined","DiagramsJSX","justify","DiagramBar","DiagramPie","LargeSpin","Empty","image","PRESENTED_IMAGE_SIMPLE","description","getFilteredListIds","categoriesToFilterIds","sortingAlgorithm","isSortingReversed","sortBy","filter","some","id","getListToShowOnCurrentPageIds","filteredListIds","currentPage","pageSize","startIndex","endIndex","slice","result","forEach","resultKey","undefined","price","categoryKey","findIndex","n","push","floor","reduce","acc","startDate","endDate","isAfter","valueForMonth","USD","_Math$round","formattedPrice","toString","split","reverse","symbol","join","listKeys","reversed","sort","prev","next","localeCompare","sensitivity"],"sourceRoot":""}