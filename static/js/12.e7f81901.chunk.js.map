{"version":3,"file":"static/js/12.e7f81901.chunk.js","mappings":"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","sources":["components/CategoryItem.tsx","components/CategoryList.tsx","components/AddCategory.tsx","pages/Categories.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Button, Card, ColorPicker, Flex, Progress, Typography } from 'antd';\r\nimport { Color } from 'antd/es/color-picker';\r\nimport Title from 'antd/es/typography/Title';\r\nimport { CloseOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\ninterface Props {\r\n\tinitialCategoryId: string;\r\n}\r\n\r\nconst CategoryItem: React.FC<Props> = observer(({ initialCategoryId }) => {\r\n\tconst { replaceCategory, removeCategory, categories } = categoryStore;\r\n\tconst { clearListFromCategory } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { userOptions } = optionsStore;\r\n\r\n\tconst [isCategoryItemDeleting, setIsCategoryItemDeleting] =\r\n\t\tuseState<boolean>(false);\r\n\tconst [deleteValue, setDeleteValue] = useState<number>(0);\r\n\r\n\tconst [currentCategory, setCurrentCategory] = useState<category>(\r\n\t\tcategories[initialCategoryId]\r\n\t);\r\n\r\n\tconst deleteCategory = useCallback(() => {\r\n\t\tremoveCategory(initialCategoryId);\r\n\t\tclearListFromCategory(initialCategoryId);\r\n\t}, [removeCategory, clearListFromCategory, initialCategoryId]);\r\n\r\n\tconst startCategoryItemDeleting = useCallback(() => {\r\n\t\tsetIsCategoryItemDeleting(true);\r\n\t}, [setIsCategoryItemDeleting]);\r\n\r\n\tconst cancelCategoryItemDeleting = useCallback(() => {\r\n\t\tsetIsCategoryItemDeleting(false);\r\n\t}, [setIsCategoryItemDeleting]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst deleteId = setInterval(() => {\r\n\t\t\tsetDeleteValue((prevValue: number) => {\r\n\t\t\t\tconst newValue = prevValue + 10;\r\n\t\t\t\tif (newValue >= userOptions.deleteDelay && isCategoryItemDeleting) {\r\n\t\t\t\t\tdeleteCategory();\r\n\t\t\t\t\tclearInterval(deleteId);\r\n\t\t\t\t}\r\n\t\t\t\treturn newValue;\r\n\t\t\t});\r\n\t\t}, 10);\r\n\t\tif (!isCategoryItemDeleting) {\r\n\t\t\tclearInterval(deleteId);\r\n\t\t\tsetDeleteValue(0);\r\n\t\t}\r\n\t\treturn () => clearInterval(deleteId);\r\n\t}, [isCategoryItemDeleting, deleteCategory, userOptions.deleteDelay]);\r\n\r\n\tconst updateCurrentCategory = useCallback(\r\n\t\t(category: category) => {\r\n\t\t\tsetCurrentCategory((precCategory: category) => {\r\n\t\t\t\tif (JSON.stringify(precCategory) !== JSON.stringify(category)) {\r\n\t\t\t\t\treplaceCategory(initialCategoryId, category);\r\n\t\t\t\t\treturn category;\r\n\t\t\t\t}\r\n\t\t\t\treturn precCategory;\r\n\t\t\t});\r\n\t\t},\r\n\t\t[setCurrentCategory, replaceCategory, initialCategoryId]\r\n\t);\r\n\r\n\tconst handleNameChange = useCallback(\r\n\t\t(value: string) => {\r\n\t\t\tsetCurrentCategory((prevCategory) => {\r\n\t\t\t\tconst newCategory: category = {\r\n\t\t\t\t\t...prevCategory,\r\n\t\t\t\t\tname: value,\r\n\t\t\t\t};\r\n\t\t\t\tupdateCurrentCategory(newCategory);\r\n\t\t\t\treturn newCategory;\r\n\t\t\t});\r\n\t\t},\r\n\t\t[setCurrentCategory, updateCurrentCategory]\r\n\t);\r\n\r\n\tconst handleColorChange = useCallback(\r\n\t\t(value: Color) => {\r\n\t\t\tsetCurrentCategory((prevCategory) => {\r\n\t\t\t\tconst newCategory: category = {\r\n\t\t\t\t\t...prevCategory,\r\n\t\t\t\t\tcolor: `#${value.toHex()}`,\r\n\t\t\t\t};\r\n\t\t\t\tupdateCurrentCategory(newCategory);\r\n\t\t\t\treturn newCategory;\r\n\t\t\t});\r\n\t\t},\r\n\t\t[setCurrentCategory, updateCurrentCategory]\r\n\t);\r\n\r\n\tconst ColorPickerJSX = (\r\n\t\t<ColorPicker\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tvalue={currentCategory.color}\r\n\t\t\tformat='hex'\r\n\t\t\tonChangeComplete={handleColorChange}\r\n\t\t/>\r\n\t);\r\n\r\n\tconst TitleJSX = (\r\n\t\t<Flex justify='center'>\r\n\t\t\t{isSmallScreen ? (\r\n\t\t\t\t<Typography.Text\r\n\t\t\t\t\tstrong\r\n\t\t\t\t\teditable={{ onChange: handleNameChange }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentCategory.name}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t) : (\r\n\t\t\t\t<Title\r\n\t\t\t\t\tlevel={isSmallScreen ? 5 : 3}\r\n\t\t\t\t\teditable={{ onChange: handleNameChange }}\r\n\t\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentCategory.name}\r\n\t\t\t\t</Title>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst DeleteButtonJSX = (\r\n\t\t<Button\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tonClick={\r\n\t\t\t\tisCategoryItemDeleting\r\n\t\t\t\t\t? cancelCategoryItemDeleting\r\n\t\t\t\t\t: startCategoryItemDeleting\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{isCategoryItemDeleting ? <CloseOutlined /> : <DeleteOutlined />}\r\n\t\t</Button>\r\n\t);\r\n\r\n\tconst ProgressJSX = (\r\n\t\t<Progress\r\n\t\t\tshowInfo={false}\r\n\t\t\tpercent={(deleteValue / userOptions.deleteDelay) * 100}\r\n\t\t\tstatus='exception'\r\n\t\t/>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Card\r\n\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\ttitle={isCategoryItemDeleting ? ProgressJSX : TitleJSX}\r\n\t\t\tactions={[ColorPickerJSX, DeleteButtonJSX]}\r\n\t\t\tstyles={{\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\tpadding: 10,\r\n\t\t\t\t},\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tpadding: 0,\r\n\t\t\t\t},\r\n\t\t\t}}\r\n\t\t></Card>\r\n\t);\r\n});\r\n\r\nexport default CategoryItem;\r\n","import React, { memo, useEffect, useMemo, useState } from 'react';\r\nimport CategoryItem from './CategoryItem';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Col, Empty, Flex, Row } from 'antd';\r\nimport { userStore } from 'utils/userStore';\r\nimport LargeSpin from './LargeSpin';\r\n\r\nconst CategoryList: React.FC = observer(() => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { width, loading } = userStore;\r\n\r\n\tconst [colNumber, setColNumber] = useState<number>(4);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (width < 300) {\r\n\t\t\tsetColNumber(1);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (width < 400) {\r\n\t\t\tsetColNumber(2);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (width < 600) {\r\n\t\t\tsetColNumber(3);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetColNumber(4);\r\n\t}, [setColNumber, width]);\r\n\r\n\tconst splittedCategories = useMemo(() => {\r\n\t\tconst result: string[][] = [];\r\n\t\tlet row = -1;\r\n\r\n\t\tObject.keys(categories)\r\n\t\t\t.slice(1)\r\n\t\t\t.forEach((key: string, col: number) => {\r\n\t\t\t\tif (col % colNumber === 0) {\r\n\t\t\t\t\trow++;\r\n\t\t\t\t\tresult.push([]);\r\n\t\t\t\t}\r\n\t\t\t\tresult[row].push(key);\r\n\t\t\t});\r\n\r\n\t\treturn result;\r\n\t}, [colNumber, categories]);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<LargeSpin />\r\n\t\t\t) : Object.values(categories).length > 1 ? (\r\n\t\t\t\tsplittedCategories.map((keys: string[]) => (\r\n\t\t\t\t\t<Row\r\n\t\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t\t\tkey={keys[0]}\r\n\t\t\t\t\t\tgutter={16}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{keys.map((key: string) => (\r\n\t\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\t\tspan={24 / colNumber}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<CategoryItem initialCategoryId={key} />\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t))\r\n\t\t\t) : (\r\n\t\t\t\t<Empty\r\n\t\t\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\t\t\tdescription={''}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default memo(CategoryList);\r\n","import React, { useCallback, useState } from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport constants from 'settings/constants';\r\nimport ColorPicker, { Color } from 'antd/es/color-picker';\r\nimport { Button, Flex, Input } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\n\r\nconst AddCategory: React.FC = observer(() => {\r\n\tconst { addCategory } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\tconst [currentCategory, setCurrentCategory] = useState<category>(\r\n\t\tconstants.defaultCategory\r\n\t);\r\n\r\n\tconst handleNameChange = useCallback(\r\n\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\tconst { value } = event.target;\r\n\t\t\tsetCurrentCategory((prevCategory) => ({\r\n\t\t\t\t...prevCategory,\r\n\t\t\t\tname: value,\r\n\t\t\t}));\r\n\t\t},\r\n\t\t[setCurrentCategory]\r\n\t);\r\n\r\n\tconst handleColorChange = useCallback(\r\n\t\t(value: Color) => {\r\n\t\t\tsetCurrentCategory((prevCategory) => ({\r\n\t\t\t\t...prevCategory,\r\n\t\t\t\tcolor: `#${value.toHex()}`,\r\n\t\t\t}));\r\n\t\t},\r\n\t\t[setCurrentCategory]\r\n\t);\r\n\r\n\tconst clearCurrentCategory = useCallback(() => {\r\n\t\tsetCurrentCategory(constants.defaultCategory);\r\n\t}, [setCurrentCategory]);\r\n\r\n\tconst addCurrentCategory = useCallback(() => {\r\n\t\taddCategory(currentCategory);\r\n\t\tclearCurrentCategory();\r\n\t}, [currentCategory, addCategory, clearCurrentCategory]);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={32}\r\n\t\t\tstyle={{ inlineSize: 'min(100%, 560px)', margin: 'auto' }}\r\n\t\t>\r\n\t\t\t<ColorPicker\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={currentCategory.color}\r\n\t\t\t\tformat='hex'\r\n\t\t\t\tonChange={handleColorChange}\r\n\t\t\t/>\r\n\t\t\t<Input\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={currentCategory.name}\r\n\t\t\t\tonChange={handleNameChange}\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={addCurrentCategory}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<CheckOutlined />\r\n\t\t\t</Button>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\nimport CategoryList from '../components/CategoryList';\r\nimport AddCategory from '../components/AddCategory';\r\nimport { Divider, Flex } from 'antd';\r\n\r\nconst Categories: React.FC = () => (\r\n\t<Flex\r\n\t\tvertical\r\n\t\talign='center'\r\n\t\tgap={16}\r\n\t>\r\n\t\t<AddCategory />\r\n\t\t<Divider />\r\n\t\t<CategoryList />\r\n\t</Flex>\r\n);\r\n\r\nexport default Categories;\r\n"],"names":["observer","_ref","initialCategoryId","replaceCategory","removeCategory","categories","categoryStore","clearListFromCategory","listStore","isSmallScreen","userStore","userOptions","optionsStore","isCategoryItemDeleting","setIsCategoryItemDeleting","useState","deleteValue","setDeleteValue","currentCategory","setCurrentCategory","deleteCategory","useCallback","startCategoryItemDeleting","cancelCategoryItemDeleting","useEffect","deleteId","setInterval","prevValue","newValue","deleteDelay","clearInterval","updateCurrentCategory","category","precCategory","JSON","stringify","handleNameChange","value","prevCategory","newCategory","name","handleColorChange","color","concat","toHex","ColorPickerJSX","_jsx","ColorPicker","size","format","onChangeComplete","TitleJSX","Flex","justify","children","Typography","Text","strong","editable","onChange","Title","level","style","margin","DeleteButtonJSX","Button","onClick","CloseOutlined","DeleteOutlined","ProgressJSX","Progress","showInfo","percent","status","Card","title","actions","styles","padding","body","CategoryList","width","loading","colNumber","setColNumber","splittedCategories","useMemo","result","row","Object","keys","slice","forEach","key","col","push","inlineSize","vertical","gap","LargeSpin","values","length","map","Row","gutter","Col","span","CategoryItem","Empty","image","PRESENTED_IMAGE_SIMPLE","description","memo","addCategory","constants","defaultCategory","event","target","clearCurrentCategory","addCurrentCategory","_jsxs","Input","type","CheckOutlined","Categories","align","AddCategory","Divider"],"sourceRoot":""}