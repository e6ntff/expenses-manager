{"version":3,"file":"static/js/12.40324051.chunk.js","mappings":"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","sources":["components/CategoryItem.tsx","components/CategoryList.tsx","components/AddCategory.tsx","pages/Categories.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Button, Card, ColorPicker, Flex, Progress, Typography } from 'antd';\r\nimport { Color } from 'antd/es/color-picker';\r\nimport Title from 'antd/es/typography/Title';\r\nimport { CloseOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\ninterface Props {\r\n\tinitialCategory: category;\r\n}\r\n\r\nconst CategoryItem: React.FC<Props> = observer(({ initialCategory }) => {\r\n\tconst { id, color, name } = initialCategory;\r\n\tconst { replaceCategory, removeCategory } = categoryStore;\r\n\tconst { clearListFromCategory } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { userOptions } = optionsStore;\r\n\r\n\tconst [isCategoryItemDeleting, setIsCategoryItemDeleting] =\r\n\t\tuseState<boolean>(false);\r\n\tconst [deleteValue, setDeleteValue] = useState<number>(0);\r\n\r\n\tconst [currentCategory, setCurrentCategory] = useState<category>({\r\n\t\tid: id,\r\n\t\tcolor: color,\r\n\t\tname: name,\r\n\t});\r\n\r\n\tconst deleteCategory = useCallback(() => {\r\n\t\tremoveCategory(currentCategory);\r\n\t\tclearListFromCategory(currentCategory.id);\r\n\t}, [currentCategory, removeCategory, clearListFromCategory]);\r\n\r\n\tconst startCategoryItemDeleting = useCallback(() => {\r\n\t\tsetIsCategoryItemDeleting(true);\r\n\t}, [setIsCategoryItemDeleting]);\r\n\r\n\tconst cancelCategoryItemDeleting = useCallback(() => {\r\n\t\tsetIsCategoryItemDeleting(false);\r\n\t}, [setIsCategoryItemDeleting]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst deleteId = setInterval(() => {\r\n\t\t\tsetDeleteValue((prevValue: number) => {\r\n\t\t\t\tconst newValue = prevValue + 10;\r\n\t\t\t\tif (newValue >= userOptions.deleteDelay && isCategoryItemDeleting) {\r\n\t\t\t\t\tdeleteCategory();\r\n\t\t\t\t\tclearInterval(deleteId);\r\n\t\t\t\t}\r\n\t\t\t\treturn newValue;\r\n\t\t\t});\r\n\t\t}, 10);\r\n\t\tif (!isCategoryItemDeleting) {\r\n\t\t\tclearInterval(deleteId);\r\n\t\t\tsetDeleteValue(0);\r\n\t\t}\r\n\t\treturn () => clearInterval(deleteId);\r\n\t}, [isCategoryItemDeleting, deleteCategory, userOptions.deleteDelay]);\r\n\r\n\tconst updateCurrentCategory = useCallback(\r\n\t\t(category: category) => {\r\n\t\t\tsetCurrentCategory((precCategory: category) => {\r\n\t\t\t\tif (JSON.stringify(precCategory) !== JSON.stringify(category)) {\r\n\t\t\t\t\treplaceCategory(category);\r\n\t\t\t\t\treturn category;\r\n\t\t\t\t}\r\n\t\t\t\treturn precCategory;\r\n\t\t\t});\r\n\t\t},\r\n\t\t[setCurrentCategory, replaceCategory]\r\n\t);\r\n\r\n\tconst handleNameChange = useCallback(\r\n\t\t(value: string) => {\r\n\t\t\tsetCurrentCategory((prevCategory) => {\r\n\t\t\t\tconst newCategory: category = {\r\n\t\t\t\t\t...prevCategory,\r\n\t\t\t\t\tname: value,\r\n\t\t\t\t};\r\n\t\t\t\tupdateCurrentCategory(newCategory);\r\n\t\t\t\treturn newCategory;\r\n\t\t\t});\r\n\t\t},\r\n\t\t[setCurrentCategory, updateCurrentCategory]\r\n\t);\r\n\r\n\tconst handleColorChange = useCallback(\r\n\t\t(value: Color) => {\r\n\t\t\tsetCurrentCategory((prevCategory) => {\r\n\t\t\t\tconst newCategory: category = {\r\n\t\t\t\t\t...prevCategory,\r\n\t\t\t\t\tcolor: `#${value.toHex()}`,\r\n\t\t\t\t};\r\n\t\t\t\tupdateCurrentCategory(newCategory);\r\n\t\t\t\treturn newCategory;\r\n\t\t\t});\r\n\t\t},\r\n\t\t[setCurrentCategory, updateCurrentCategory]\r\n\t);\r\n\r\n\tconst ColorPickerJSX = (\r\n\t\t<ColorPicker\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tvalue={currentCategory.color}\r\n\t\t\tformat='hex'\r\n\t\t\tonChangeComplete={handleColorChange}\r\n\t\t/>\r\n\t);\r\n\r\n\tconst TitleJSX = (\r\n\t\t<Flex justify='center'>\r\n\t\t\t{isSmallScreen ? (\r\n\t\t\t\t<Typography.Text\r\n\t\t\t\t\tstrong\r\n\t\t\t\t\teditable={{ onChange: handleNameChange }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentCategory.name}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t) : (\r\n\t\t\t\t<Title\r\n\t\t\t\t\tlevel={isSmallScreen ? 5 : 3}\r\n\t\t\t\t\teditable={{ onChange: handleNameChange }}\r\n\t\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentCategory.name}\r\n\t\t\t\t</Title>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst DeleteButtonJSX = (\r\n\t\t<Button\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tonClick={\r\n\t\t\t\tisCategoryItemDeleting\r\n\t\t\t\t\t? cancelCategoryItemDeleting\r\n\t\t\t\t\t: startCategoryItemDeleting\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{isCategoryItemDeleting ? <CloseOutlined /> : <DeleteOutlined />}\r\n\t\t</Button>\r\n\t);\r\n\r\n\tconst ProgressJSX = (\r\n\t\t<Progress\r\n\t\t\tshowInfo={false}\r\n\t\t\tpercent={(deleteValue / userOptions.deleteDelay) * 100}\r\n\t\t\tstatus='exception'\r\n\t\t/>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Card\r\n\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\ttitle={isCategoryItemDeleting ? ProgressJSX : TitleJSX}\r\n\t\t\tactions={[ColorPickerJSX, DeleteButtonJSX]}\r\n\t\t\tstyles={{\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\tpadding: 10,\r\n\t\t\t\t},\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tpadding: 0,\r\n\t\t\t\t},\r\n\t\t\t}}\r\n\t\t></Card>\r\n\t);\r\n});\r\n\r\nexport default CategoryItem;\r\n","import React, { memo, useEffect, useMemo, useState } from 'react';\r\nimport CategoryItem from './CategoryItem';\r\nimport { category } from '../settings/interfaces';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Col, Empty, Flex, Row } from 'antd';\r\nimport { userStore } from 'utils/userStore';\r\nimport LargeSpin from './LargeSpin';\r\n\r\nconst CategoryList: React.FC = observer(() => {\r\n\tconst { categories, loading } = categoryStore;\r\n\tconst { width } = userStore;\r\n\r\n\tconst [colNumber, setColNumber] = useState<number>(4);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (width < 300) {\r\n\t\t\tsetColNumber(1);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (width < 400) {\r\n\t\t\tsetColNumber(2);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (width < 600) {\r\n\t\t\tsetColNumber(3);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetColNumber(4);\r\n\t}, [setColNumber, width]);\r\n\r\n\tconst splittedCategories = useMemo(() => {\r\n\t\tconst result: category[][] = [];\r\n\t\tlet row = -1;\r\n\r\n\t\tcategories\r\n\t\t\t.slice(1)\r\n\t\t\t.reverse()\r\n\t\t\t.forEach((item: category, col: number) => {\r\n\t\t\t\tif (col % colNumber === 0) {\r\n\t\t\t\t\trow++;\r\n\t\t\t\t\tresult.push([]);\r\n\t\t\t\t}\r\n\t\t\t\tresult[row].push(item);\r\n\t\t\t});\r\n\r\n\t\treturn result;\r\n\t}, [colNumber, categories]);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<LargeSpin />\r\n\t\t\t) : categories.length > 1 ? (\r\n\t\t\t\tsplittedCategories.map((categories: category[]) => (\r\n\t\t\t\t\t<Row\r\n\t\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t\t\tkey={categories[0].id}\r\n\t\t\t\t\t\tgutter={16}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{categories.map((category: category) => (\r\n\t\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\t\tkey={category.id}\r\n\t\t\t\t\t\t\t\tspan={24 / colNumber}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<CategoryItem initialCategory={category} />\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t))\r\n\t\t\t) : (\r\n\t\t\t\t<Empty\r\n\t\t\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\t\t\tdescription={''}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default memo(CategoryList);\r\n","import React, { useCallback, useState } from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport constants from 'settings/constants';\r\nimport ColorPicker, { Color } from 'antd/es/color-picker';\r\nimport { Button, Flex, Input } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\n\r\nconst AddCategory: React.FC = observer(() => {\r\n\tconst { addCategory } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\tconst [currentCategory, setCurrentCategory] = useState<category>({\r\n\t\t...constants.defaultCategory,\r\n\t\tid: Math.random(),\r\n\t});\r\n\r\n\tconst handleNameChange = useCallback(\r\n\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\tconst { value } = event.target;\r\n\t\t\tsetCurrentCategory((prevCategory) => ({\r\n\t\t\t\t...prevCategory,\r\n\t\t\t\tname: value,\r\n\t\t\t}));\r\n\t\t},\r\n\t\t[setCurrentCategory]\r\n\t);\r\n\r\n\tconst handleColorChange = useCallback(\r\n\t\t(value: Color) => {\r\n\t\t\tsetCurrentCategory((prevCategory) => ({\r\n\t\t\t\t...prevCategory,\r\n\t\t\t\tcolor: `#${value.toHex()}`,\r\n\t\t\t}));\r\n\t\t},\r\n\t\t[setCurrentCategory]\r\n\t);\r\n\r\n\tconst clearCurrentCategory = useCallback(() => {\r\n\t\tsetCurrentCategory({ ...constants.defaultCategory, id: Math.random() });\r\n\t}, [setCurrentCategory]);\r\n\r\n\tconst addCurrentCategory = useCallback(() => {\r\n\t\taddCategory(currentCategory);\r\n\t\tclearCurrentCategory();\r\n\t}, [currentCategory, addCategory, clearCurrentCategory]);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={32}\r\n\t\t\tstyle={{ inlineSize: 'min(100%, 560px)', margin: 'auto' }}\r\n\t\t>\r\n\t\t\t<ColorPicker\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={currentCategory.color}\r\n\t\t\t\tformat='hex'\r\n\t\t\t\tonChange={handleColorChange}\r\n\t\t\t/>\r\n\t\t\t<Input\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={currentCategory.name}\r\n\t\t\t\tonChange={handleNameChange}\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={addCurrentCategory}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<CheckOutlined />\r\n\t\t\t</Button>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\nimport CategoryList from '../components/CategoryList';\r\nimport AddCategory from '../components/AddCategory';\r\nimport { Divider, Flex } from 'antd';\r\n\r\nconst Categories: React.FC = () => (\r\n\t<Flex\r\n\t\tvertical\r\n\t\talign='center'\r\n\t\tgap={16}\r\n\t>\r\n\t\t<AddCategory />\r\n\t\t<Divider />\r\n\t\t<CategoryList />\r\n\t</Flex>\r\n);\r\n\r\nexport default Categories;\r\n"],"names":["observer","_ref","initialCategory","id","color","name","replaceCategory","removeCategory","categoryStore","clearListFromCategory","listStore","isSmallScreen","userStore","userOptions","optionsStore","isCategoryItemDeleting","setIsCategoryItemDeleting","useState","deleteValue","setDeleteValue","currentCategory","setCurrentCategory","deleteCategory","useCallback","startCategoryItemDeleting","cancelCategoryItemDeleting","useEffect","deleteId","setInterval","prevValue","newValue","deleteDelay","clearInterval","updateCurrentCategory","category","precCategory","JSON","stringify","handleNameChange","value","prevCategory","newCategory","handleColorChange","concat","toHex","ColorPickerJSX","_jsx","ColorPicker","size","format","onChangeComplete","TitleJSX","Flex","justify","children","Typography","Text","strong","editable","onChange","Title","level","style","margin","DeleteButtonJSX","Button","onClick","CloseOutlined","DeleteOutlined","ProgressJSX","Progress","showInfo","percent","status","Card","title","actions","styles","padding","body","CategoryList","categories","loading","width","colNumber","setColNumber","splittedCategories","useMemo","result","row","slice","reverse","forEach","item","col","push","inlineSize","vertical","gap","LargeSpin","length","map","Row","gutter","Col","span","CategoryItem","Empty","image","PRESENTED_IMAGE_SIMPLE","description","memo","addCategory","constants","defaultCategory","Math","random","event","target","clearCurrentCategory","addCurrentCategory","_jsxs","Input","type","CheckOutlined","Categories","align","AddCategory","Divider"],"sourceRoot":""}