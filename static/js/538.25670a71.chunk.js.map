{"version":3,"file":"static/js/538.25670a71.chunk.js","mappings":"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","sources":["components/YearSlider.tsx","components/DiagramBar.tsx","components/DiagramPie.tsx","pages/Stats.tsx","utils/transformData.ts","utils/utils.ts"],"sourcesContent":["import React, { memo, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Slider } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport { ExpenseItem } from 'settings/interfaces';\r\nimport dayjs from 'dayjs';\r\nimport minMax from 'dayjs/plugin/minMax';\r\nimport { ZoomInOutlined, ZoomOutOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport {\r\n\tChart,\r\n\tTooltip,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tLineElement,\r\n\tLineController,\r\n\tPointElement,\r\n} from 'chart.js';\r\nimport { getValuesByMonth } from 'utils/transformData';\r\nimport { Line } from 'react-chartjs-2';\r\nChart.register(\r\n\tTooltip,\r\n\tLineElement,\r\n\tLineController,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tPointElement\r\n);\r\n\r\ndayjs.extend(minMax);\r\n\r\ninterface Props {\r\n\trange: number[];\r\n\tdefaultRange: number[];\r\n\tsetRange: (arg0: number[]) => void;\r\n\tsetDefaultRange: (arg0: number[]) => void;\r\n\tisAccurate: boolean;\r\n\tsetIsAccurate: (arg0: boolean) => void;\r\n}\r\n\r\nconst YearSlider: React.FC<Props> = observer(\r\n\t({\r\n\t\trange,\r\n\t\tdefaultRange,\r\n\t\tsetRange,\r\n\t\tsetDefaultRange,\r\n\t\tisAccurate,\r\n\t\tsetIsAccurate,\r\n\t}) => {\r\n\t\tconst { list } = listStore;\r\n\t\tconst { isSmallScreen } = userStore;\r\n\r\n\t\tconst [value, setValue] = useState(defaultRange);\r\n\r\n\t\tconst sliderRange: [number, number] = useMemo(() => {\r\n\t\t\tconst mappedList = list.map((item: ExpenseItem) => item.date);\r\n\t\t\treturn [\r\n\t\t\t\tdayjs.min(mappedList)?.valueOf() || 0,\r\n\t\t\t\tdayjs.max(mappedList)?.valueOf() || 0,\r\n\t\t\t];\r\n\t\t}, [list]);\r\n\r\n\t\tconst marks: { [key: number]: string } = useMemo(() => {\r\n\t\t\tconst start = dayjs(sliderRange[0]).startOf('day');\r\n\t\t\tconst end = dayjs(sliderRange[1]).endOf('day');\r\n\t\t\tconst marks: { [key: number]: string } = {};\r\n\t\t\tlet currentDate = start;\r\n\t\t\tif (isAccurate) {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'day')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.date() === 1\r\n\t\t\t\t\t\t\t? currentDate.month() === 0\r\n\t\t\t\t\t\t\t\t? currentDate.format('YYYY')\r\n\t\t\t\t\t\t\t\t: currentDate.format('M')\r\n\t\t\t\t\t\t\t: ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'day').startOf('day');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'month')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.month() === 0 ? currentDate.format('YYYY') : ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'month').startOf('month');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn marks;\r\n\t\t}, [sliderRange, isAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetDefaultRange(sliderRange);\r\n\t\t}, [sliderRange, setDefaultRange]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetRange(defaultRange);\r\n\t\t}, [defaultRange, setRange]);\r\n\r\n\t\tconst handleRangeChanging = useCallback(\r\n\t\t\t(values: number[]) => {\r\n\t\t\t\tsetRange(values);\r\n\t\t\t},\r\n\t\t\t[setRange]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetValue(range);\r\n\t\t}, [range]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tisSmallScreen && setIsAccurate(false);\r\n\t\t}, [isSmallScreen, setIsAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\t!isAccurate &&\r\n\t\t\t\tsetRange([\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.max([\r\n\t\t\t\t\t\t\tdayjs(range[0]).startOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[0]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.min([\r\n\t\t\t\t\t\t\tdayjs(range[1]).endOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[1]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t]);\r\n\t\t\t// eslint-disable-next-line\r\n\t\t}, [isAccurate]);\r\n\r\n\t\tconst valuesByMonth: number[] | { [key: string]: number } = useMemo(\r\n\t\t\t() => getValuesByMonth(list, defaultRange),\r\n\t\t\t[list, defaultRange]\r\n\t\t);\r\n\r\n\t\tconst data = {\r\n\t\t\tlabels: new Array(valuesByMonth.length).fill(''),\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\tdata: valuesByMonth,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t};\r\n\r\n\t\tconst options = {\r\n\t\t\tplugins: {\r\n\t\t\t\tlegend: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\tenabled: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tscales: {\r\n\t\t\t\tx: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\tgrid: {\r\n\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\ty: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\tgrid: {\r\n\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\telements: {\r\n\t\t\t\tpoint: {\r\n\t\t\t\t\tradius: 0,\r\n\t\t\t\t},\r\n\t\t\t\tline: {\r\n\t\t\t\t\tcubicInterpolationMode: 'monotone' as 'monotone',\r\n\t\t\t\t\tborderColor: '#7775',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\taspectRatio: 25,\r\n\t\t};\r\n\r\n\t\treturn dayjs(defaultRange[1]).diff(dayjs(defaultRange[0]), 'hours') >=\r\n\t\t\t48 ? (\r\n\t\t\t<Flex\r\n\t\t\t\tgap={16}\r\n\t\t\t\talign='center'\r\n\t\t\t>\r\n\t\t\t\t<Segmented\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tdefaultValue={isAccurate}\r\n\t\t\t\t\tvalue={isAccurate}\r\n\t\t\t\t\tonChange={setIsAccurate}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{ label: <ZoomOutOutlined />, value: false },\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: <ZoomInOutlined />,\r\n\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t\tdisabled: isSmallScreen,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\talign='stretch'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Line\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Slider\r\n\t\t\t\t\t\trange\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tmarks={marks}\r\n\t\t\t\t\t\tstep={null}\r\n\t\t\t\t\t\tdots={true}\r\n\t\t\t\t\t\ttooltip={{\r\n\t\t\t\t\t\t\tformatter: (value: number | undefined) => (\r\n\t\t\t\t\t\t\t\t<>{dayjs(value).format(isAccurate ? 'DD.MM.YY' : 'MM.YY')}</>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tmin={sliderRange[0]}\r\n\t\t\t\t\t\tmax={sliderRange[1]}\r\n\t\t\t\t\t\tdefaultValue={defaultRange}\r\n\t\t\t\t\t\tonChange={setValue}\r\n\t\t\t\t\t\tonChangeComplete={handleRangeChanging}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Flex>\r\n\t\t) : (\r\n\t\t\t<></>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default memo(YearSlider);\r\n","import React, { useMemo } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport languages from 'settings/languages';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport { Flex } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n\tChart,\r\n\tTooltip,\r\n\tBarController,\r\n\tBarElement,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n} from 'chart.js';\r\nimport { getValuesForBarDiagram } from 'utils/transformData';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Interval } from 'settings/interfaces';\r\nChart.register(Tooltip, BarController, BarElement, CategoryScale, LinearScale);\r\n\r\ninterface Props {\r\n\tmode: Interval;\r\n\tsetMode: (arg0: Interval) => void;\r\n}\r\n\r\nconst DiagramBar: React.FC<Props> = observer(({ mode, setMode }) => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { statsOptions, userOptions, setStatsRange } = optionsStore;\r\n\tconst { currency, language } = userOptions;\r\n\r\n\tconst { range } = statsOptions;\r\n\r\n\tconst values: number[] | { [key: string]: number } = useMemo(() => {\r\n\t\treturn getValuesForBarDiagram(list, currency, mode, dayjs(range[0]).year());\r\n\t}, [currency, list, mode, range]);\r\n\r\n\tconst data = {\r\n\t\tlabels: mode === 'month' ? languages.months[language] : Object.keys(values),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: getSymbolAndPrice(currency),\r\n\t\t\t\tdata: Object.values(values),\r\n\t\t\t\tbackgroundColor: '#f00',\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonClick: (_: any, chartElements: any) => {\r\n\t\t\tif (chartElements.length) {\r\n\t\t\t\tconst index = chartElements[0].index;\r\n\r\n\t\t\t\tconst newRangeItem =\r\n\t\t\t\t\tmode === 'year'\r\n\t\t\t\t\t\t? [\r\n\t\t\t\t\t\t\t\tdayjs(range[0])\r\n\t\t\t\t\t\t\t\t\t.year(Number(data.labels[index]))\r\n\t\t\t\t\t\t\t\t\t.startOf('year')\r\n\t\t\t\t\t\t\t\t\t.valueOf(),\r\n\t\t\t\t\t\t\t\tdayjs(range[0])\r\n\t\t\t\t\t\t\t\t\t.year(Number(data.labels[index]))\r\n\t\t\t\t\t\t\t\t\t.endOf('year')\r\n\t\t\t\t\t\t\t\t\t.valueOf(),\r\n\t\t\t\t\t\t  ]\r\n\t\t\t\t\t\t: [\r\n\t\t\t\t\t\t\t\tdayjs(range[0]).month(index).startOf('month').valueOf(),\r\n\t\t\t\t\t\t\t\tdayjs(range[0]).month(index).endOf('month').valueOf(),\r\n\t\t\t\t\t\t  ];\r\n\r\n\t\t\t\tmode === 'year' && setMode('month');\r\n\t\t\t\tsetStatsRange(newRangeItem);\r\n\t\t\t}\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Flex style={{ inlineSize: isSmallScreen ? 'unset' : '50%' }}>\r\n\t\t\t<Bar\r\n\t\t\t\tdata={data}\r\n\t\t\t\toptions={options}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default DiagramBar;\r\n","import React, { useMemo } from 'react';\r\nimport { Value } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { Flex } from 'antd';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport {\r\n\tChart,\r\n\tArcElement,\r\n\tPieController,\r\n\tTooltip,\r\n\tLegend,\r\n\tTitle,\r\n} from 'chart.js';\r\nimport { getValuesForPieDiagram } from 'utils/transformData';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { listStore } from 'utils/listStore';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nChart.register(ArcElement, PieController, Tooltip, Legend, Title);\r\n\r\nconst DiagramPie: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { userOptions, statsOptions } = optionsStore;\r\n\tconst { currency } = userOptions;\r\n\tconst { getCategoryById } = categoryStore;\r\n\r\n\tconst { range, isAccurate } = statsOptions;\r\n\r\n\tconst valuesByCategory: Value[] = useMemo(\r\n\t\t() =>\r\n\t\t\tgetValuesForPieDiagram(\r\n\t\t\t\tlist,\r\n\t\t\t\trange,\r\n\t\t\t\tcurrency,\r\n\t\t\t\tisAccurate,\r\n\t\t\t\tgetCategoryById\r\n\t\t\t),\r\n\t\t[list, currency, range, isAccurate, getCategoryById]\r\n\t);\r\n\r\n\tconst [names, colors, values] = [\r\n\t\tvaluesByCategory.map((value: Value) => value.category.name),\r\n\t\tvaluesByCategory.map((value: Value) => value.category.color),\r\n\t\tvaluesByCategory.map((value: Value) => Math.round(value.value)),\r\n\t];\r\n\r\n\tconst data = {\r\n\t\tlabels: names,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: getSymbolAndPrice(currency),\r\n\t\t\t\tdata: values,\r\n\t\t\t\tbackgroundColor: colors,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tposition: 'right' as const,\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tstyle={{\r\n\t\t\t\tinlineSize: isSmallScreen ? 'unset' : '40%',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Pie\r\n\t\t\t\tdata={data}\r\n\t\t\t\toptions={options}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default DiagramPie;\r\n","import React, { useState, useCallback, memo, useEffect, useMemo } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Button, Card, Empty, Flex, Statistic, Typography } from 'antd';\r\nimport DiagramBar from '../components/DiagramBar';\r\nimport DiagramPie from 'components/DiagramPie';\r\nimport { userStore } from 'utils/userStore';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport { ReloadOutlined } from '@ant-design/icons';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport dayjs from 'dayjs';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\nimport YearSlider from 'components/YearSlider';\r\nimport { Interval } from 'settings/interfaces';\r\nimport LargeSpin from 'components/LargeSpin';\r\nimport { getTotalInCurrentRange } from 'utils/transformData';\r\n\r\ndayjs.extend(isBetween);\r\n\r\nconst Stats: React.FC = observer(() => {\r\n\tconst { list } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst {\r\n\t\tstatsOptions,\r\n\t\tuserOptions,\r\n\t\tsetStatsRange,\r\n\t\tsetDefaultStatsRange,\r\n\t\tsetIsStatsAccurate,\r\n\t} = optionsStore;\r\n\tconst { currency } = userOptions;\r\n\tconst { range, defaultRange, isAccurate } = statsOptions;\r\n\r\n\tconst [mode, setMode] = useState<Interval>('year');\r\n\r\n\tconst resetRange = useCallback(() => {\r\n\t\tsetMode('year');\r\n\t\tsetStatsRange(defaultRange);\r\n\t}, [setMode, defaultRange, setStatsRange]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst resetRangeWithEsc = (event: KeyboardEvent) => {\r\n\t\t\tif (event.key === 'Escape') {\r\n\t\t\t\tresetRange();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\twindow.addEventListener('keydown', resetRangeWithEsc);\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('keydown', resetRangeWithEsc);\r\n\t\t};\r\n\t}, [resetRange]);\r\n\r\n\tconst isRangeChanged = useMemo(\r\n\t\t() => range[0] !== defaultRange[0] || range[1] !== defaultRange[1],\r\n\t\t[range, defaultRange]\r\n\t);\r\n\r\n\tconst cardTitle = useMemo(() => {\r\n\t\tconst format = isAccurate ? 'DD.MM.YY' : 'MM.YY';\r\n\t\treturn (\r\n\t\t\t<Typography.Text\r\n\t\t\t\ttype='secondary'\r\n\t\t\t\tstyle={{ fontSize: isSmallScreen ? '.8em' : '1em' }}\r\n\t\t\t>\r\n\t\t\t\t{dayjs(range[0]).format(format)}\r\n\t\t\t\t{range[0] !== range[1] ? `-${dayjs(range[1]).format(format)}` : ''}\r\n\t\t\t</Typography.Text>\r\n\t\t);\r\n\t}, [isAccurate, range, isSmallScreen]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dayjs(range[0]).year() !== dayjs(range[1]).year()) {\r\n\t\t\tsetMode('year');\r\n\t\t} else {\r\n\t\t\tsetMode('month');\r\n\t\t}\r\n\t}, [range]);\r\n\r\n\tconst PanelJSX = (\r\n\t\t<Flex gap={16}>\r\n\t\t\t<Card bordered>\r\n\t\t\t\t<Statistic\r\n\t\t\t\t\ttitle={cardTitle}\r\n\t\t\t\t\tvalue={getTotalInCurrentRange(list, range, currency, isAccurate)}\r\n\t\t\t\t\tprefix={getSymbolAndPrice(currency)}\r\n\t\t\t\t\tvalueStyle={{\r\n\t\t\t\t\t\tcolor: '#f00',\r\n\t\t\t\t\t\tfontSize: isSmallScreen ? '1em' : '1.5em',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</Card>\r\n\t\t\t<Button\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tonClick={resetRange}\r\n\t\t\t\tdisabled={!isRangeChanged}\r\n\t\t\t>\r\n\t\t\t\t<ReloadOutlined />\r\n\t\t\t</Button>\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst DiagramsJSX = (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t\talign='stretch'\r\n\t\t>\r\n\t\t\t<YearSlider\r\n\t\t\t\tsetIsAccurate={setIsStatsAccurate}\r\n\t\t\t\tisAccurate={isAccurate}\r\n\t\t\t\trange={range}\r\n\t\t\t\tdefaultRange={defaultRange}\r\n\t\t\t\tsetRange={setStatsRange}\r\n\t\t\t\tsetDefaultRange={setDefaultStatsRange}\r\n\t\t\t/>\r\n\t\t\t<Flex\r\n\t\t\t\talign='center'\r\n\t\t\t\tjustify='space-between'\r\n\t\t\t\tvertical={isSmallScreen}\r\n\t\t\t>\r\n\t\t\t\t<DiagramBar\r\n\t\t\t\t\tmode={mode}\r\n\t\t\t\t\tsetMode={setMode}\r\n\t\t\t\t/>\r\n\t\t\t\t<DiagramPie />\r\n\t\t\t</Flex>\r\n\t\t</Flex>\r\n\t);\r\n\r\n\treturn listStore.loading || categoryStore.loading ? (\r\n\t\t<LargeSpin />\r\n\t) : list.length ? (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={32}\r\n\t\t>\r\n\t\t\t{PanelJSX}\r\n\t\t\t{DiagramsJSX}\r\n\t\t</Flex>\r\n\t) : (\r\n\t\t<Empty\r\n\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\tdescription={''}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default memo(Stats);\r\n","import {\r\n\tExpenseItem,\r\n\tInterval,\r\n\tListOptions,\r\n\tValue,\r\n\tcategory,\r\n\tlanguage,\r\n} from 'settings/interfaces';\r\nimport { sortBy } from './utils';\r\nimport dayjs from 'dayjs';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\n\r\ndayjs.extend(isBetween);\r\n\r\nexport const getFilteredList = (\r\n\toptions: ListOptions,\r\n\tlist: ExpenseItem[],\r\n\tlanguage: language,\r\n\tisAccurate: boolean\r\n) => {\r\n\tconst { range, categoriesToFilter, sortingAlgorithm, isSortingReversed } =\r\n\t\toptions;\r\n\treturn sortBy(\r\n\t\tlist.filter((item: ExpenseItem) => {\r\n\t\t\tif (!categoriesToFilter.length) {\r\n\t\t\t\treturn item.date.isBetween(\r\n\t\t\t\t\tdayjs(range[0]),\r\n\t\t\t\t\tdayjs(range[1]),\r\n\t\t\t\t\tisAccurate ? 'day' : 'month',\r\n\t\t\t\t\t'[]'\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\titem.date.isBetween(dayjs(range[0]), dayjs(range[1]), 'day', '[]') &&\r\n\t\t\t\t\tcategoriesToFilter.some(\r\n\t\t\t\t\t\t(category: category) => item.categoryId === category.id\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}),\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tlanguage\r\n\t);\r\n};\r\n\r\nexport const getListToShowOnCurrentPage = (\r\n\toptions: ListOptions,\r\n\tfilteredList: ExpenseItem[]\r\n) => {\r\n\tconst { currentPage, pageSize } = options;\r\n\tconst startIndex = (currentPage - 1) * pageSize;\r\n\tconst endIndex = startIndex + pageSize;\r\n\treturn filteredList.slice(startIndex, endIndex);\r\n};\r\n\r\nexport const getValuesForBarDiagram = (\r\n\tlist: ExpenseItem[],\r\n\tcurrency: string,\r\n\tmode: Interval,\r\n\tyear: number\r\n) => {\r\n\tif (mode === 'year') {\r\n\t\tconst result: { [key: number]: number } = {};\r\n\t\tlist.forEach((item: ExpenseItem) => {\r\n\t\t\tconst key: number = item.date.year();\r\n\t\t\tif (result[key] === undefined) {\r\n\t\t\t\tresult[key] = 0;\r\n\t\t\t} else {\r\n\t\t\t\tresult[key] += item.price[currency];\r\n\t\t\t}\r\n\t\t});\r\n\t\tfor (let year in result) {\r\n\t\t\tresult[year] = Math.round(result[year]);\r\n\t\t}\r\n\t\treturn result;\r\n\t} else if (mode === 'month') {\r\n\t\tconst result: number[] = new Array(12).fill(0);\r\n\t\tlist.forEach((item: ExpenseItem) => {\r\n\t\t\tif (item.date.year() === year) {\r\n\t\t\t\tconst index: number = item.date.month();\r\n\t\t\t\tresult[index] += item.price[currency];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result.map((item: number) => Math.round(item));\r\n\t}\r\n\treturn [];\r\n};\r\n\r\nexport const getValuesForPieDiagram = (\r\n\tlist: ExpenseItem[],\r\n\trange: number[],\r\n\tcurrency: string,\r\n\tisAccurate: boolean,\r\n\tgetCategoryById: (id: number) => category\r\n) => {\r\n\tconst values: Value[] = [];\r\n\tlist.forEach((item: ExpenseItem) => {\r\n\t\tif (\r\n\t\t\titem.date.isBetween(\r\n\t\t\t\tdayjs(range[0]),\r\n\t\t\t\tdayjs(range[1]),\r\n\t\t\t\tisAccurate ? 'day' : 'month',\r\n\t\t\t\t'[]'\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tconst indexOfCategory: number = values.findIndex(\r\n\t\t\t\t(value: Value) => value.category.id === item.categoryId\r\n\t\t\t);\r\n\t\t\tif (indexOfCategory !== -1) {\r\n\t\t\t\tvalues[indexOfCategory].value += item.price[currency];\r\n\t\t\t} else {\r\n\t\t\t\tvalues.push({\r\n\t\t\t\t\tcategory: getCategoryById(item.categoryId),\r\n\t\t\t\t\tvalue: item.price[currency],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn values.map((value: Value) => ({\r\n\t\t...value,\r\n\t\tvalue: Math.round(value.value),\r\n\t}));\r\n};\r\n\r\nexport const getTotalInCurrentRange = (\r\n\tlist: ExpenseItem[],\r\n\trange: number[],\r\n\tcurrency: string,\r\n\tisAccurate: boolean\r\n) =>\r\n\tMath.floor(\r\n\t\tlist.reduce((acc: number, item: ExpenseItem) => {\r\n\t\t\tif (\r\n\t\t\t\titem.date.isBetween(\r\n\t\t\t\t\tdayjs(range[0]),\r\n\t\t\t\t\tdayjs(range[1]),\r\n\t\t\t\t\tisAccurate ? 'hour' : 'day',\r\n\t\t\t\t\t'()'\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\treturn acc + item.price[currency];\r\n\t\t\t}\r\n\t\t\treturn acc;\r\n\t\t}, 0)\r\n\t);\r\n\r\nexport const getValuesByMonth = (list: ExpenseItem[], range: number[]) => {\r\n\tconst values: number[] = [];\r\n\tconst end = dayjs(range[1]);\r\n\tlet startDate = dayjs(range[0]);\r\n\tlet endDate = dayjs(range[0]).add(1, 'month');\r\n\r\n\twhile (!endDate.isAfter(end, 'day')) {\r\n\t\t// eslint-disable-next-line\r\n\t\tconst itemsInMonth = list.filter((item) =>\r\n\t\t\titem.date.isBetween(startDate, endDate, 'day', '[]')\r\n\t\t);\r\n\t\tconst valueForMonth = itemsInMonth.reduce(\r\n\t\t\t(acc, item) => acc + item.price.USD,\r\n\t\t\t0\r\n\t\t);\r\n\t\tvalues.push(valueForMonth);\r\n\t\tstartDate = startDate.add(1, 'month');\r\n\t\tendDate = endDate.add(1, 'month');\r\n\t}\r\n\r\n\treturn values;\r\n};\r\n","import { ExpenseItem, Sort, language } from 'settings/interfaces';\r\n\r\nexport const getSymbolAndPrice = (currency: string, price?: number) => {\r\n\tlet result = '';\r\n\tif (currency === 'USD') result += '$';\r\n\tif (currency === 'EUR') result += '€';\r\n\tif (currency === 'RUB') result += '₽';\r\n\r\n\tconst formattedPrice = Math.round(price as number)\r\n\t\t?.toString()\r\n\t\t.split('')\r\n\t\t.reverse()\r\n\t\t.reduce(\r\n\t\t\t(acc: string[], symbol: string, index: number) =>\r\n\t\t\t\tindex % 3 === 0 && index !== 0\r\n\t\t\t\t\t? [...acc, symbol + ',']\r\n\t\t\t\t\t: [...acc, symbol],\r\n\t\t\t[]\r\n\t\t)\r\n\t\t.reverse()\r\n\t\t.join('');\r\n\r\n\treturn price === undefined ? result : result + formattedPrice;\r\n};\r\n\r\nexport const sortBy = (\r\n\tlist: ExpenseItem[],\r\n\tsortingAlgorithm: Sort,\r\n\treversed: boolean,\r\n\tlanguage?: language\r\n) => {\r\n\tlet result: ExpenseItem[];\r\n\tswitch (sortingAlgorithm) {\r\n\t\tcase 'date':\r\n\t\t\tresult = [...list].sort(\r\n\t\t\t\t(prev: ExpenseItem, next: ExpenseItem) =>\r\n\t\t\t\t\tnext.date.valueOf() - prev.date.valueOf()\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'title':\r\n\t\t\tresult = [...list].sort((prev: ExpenseItem, next: ExpenseItem) =>\r\n\t\t\t\tprev.title.localeCompare(next.title, language, {\r\n\t\t\t\t\tsensitivity: 'base',\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'price':\r\n\t\t\tresult = [...list].sort(\r\n\t\t\t\t(prev: ExpenseItem, next: ExpenseItem) =>\r\n\t\t\t\t\tnext.price.USD - prev.price.USD\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tresult = [...list];\r\n\t}\r\n\r\n\treturn reversed ? result.reverse() : result;\r\n};\r\n"],"names":["Chart","register","Tooltip","LineElement","LineController","CategoryScale","LinearScale","PointElement","dayjs","minMax","YearSlider","observer","_ref","range","defaultRange","setRange","setDefaultRange","isAccurate","setIsAccurate","list","listStore","isSmallScreen","userStore","value","setValue","useState","sliderRange","useMemo","_dayjs$min","_dayjs$max","mappedList","map","item","date","valueOf","marks","start","startOf","end","endOf","currentDate","isBefore","isSame","month","format","add","useEffect","handleRangeChanging","useCallback","values","valuesByMonth","getValuesByMonth","data","labels","Array","length","fill","datasets","diff","_jsxs","Flex","gap","align","children","_jsx","Segmented","size","defaultValue","onChange","options","label","ZoomOutOutlined","ZoomInOutlined","disabled","vertical","style","inlineSize","Line","plugins","legend","display","tooltip","enabled","scales","x","grid","y","elements","point","radius","line","cubicInterpolationMode","borderColor","aspectRatio","Slider","step","dots","formatter","_Fragment","min","max","onChangeComplete","memo","BarController","BarElement","mode","setMode","statsOptions","userOptions","setStatsRange","optionsStore","currency","language","getValuesForBarDiagram","year","languages","months","Object","keys","getSymbolAndPrice","backgroundColor","onClick","_","chartElements","index","newRangeItem","Number","Bar","ArcElement","PieController","Legend","Title","getCategoryById","categoryStore","valuesByCategory","getValuesForPieDiagram","names","colors","category","name","color","Math","round","Pie","position","isBetween","Stats","setDefaultStatsRange","setIsStatsAccurate","resetRange","resetRangeWithEsc","event","key","window","addEventListener","removeEventListener","isRangeChanged","cardTitle","Typography","Text","type","fontSize","concat","PanelJSX","Card","bordered","Statistic","title","getTotalInCurrentRange","prefix","valueStyle","Button","ReloadOutlined","DiagramsJSX","justify","DiagramBar","DiagramPie","loading","LargeSpin","Empty","image","PRESENTED_IMAGE_SIMPLE","description","getFilteredList","categoriesToFilter","sortingAlgorithm","isSortingReversed","sortBy","filter","some","categoryId","id","getListToShowOnCurrentPage","filteredList","currentPage","pageSize","startIndex","endIndex","slice","result","forEach","undefined","price","indexOfCategory","findIndex","push","floor","reduce","acc","startDate","endDate","isAfter","valueForMonth","USD","_Math$round","formattedPrice","toString","split","reverse","symbol","join","reversed","sort","prev","next","localeCompare","sensitivity"],"sourceRoot":""}