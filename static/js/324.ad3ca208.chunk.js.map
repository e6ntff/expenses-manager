{"version":3,"file":"static/js/324.ad3ca208.chunk.js","mappings":"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","sources":["components/DeletedCategories.tsx","components/DeletedItems.tsx","components/TrashPanel.tsx","pages/Trash.tsx"],"sourcesContent":["import { Col, Empty, List } from 'antd';\r\nimport Item from 'antd/es/list/Item';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useMemo, useState } from 'react';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport {\r\n\tDeleteOutlined,\r\n\tExportOutlined,\r\n\tInfoCircleOutlined,\r\n\tUndoOutlined,\r\n} from '@ant-design/icons';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { MyCheckbox, MyIconWithTooltip, MyTitle } from './Items';\r\nimport { CheckboxChangeEvent } from 'antd/es/checkbox';\r\nimport { ItemWithSearch } from 'settings/interfaces';\r\nimport { search } from 'utils/utils';\r\nimport dayjs from 'dayjs';\r\nimport CategoryItem from './CategoryItem';\r\n\r\ninterface Props {\r\n\tquery: string;\r\n}\r\n\r\nconst DeletedCategories: React.FC<Props> = observer(({ query }) => {\r\n\tconst { restoreCategory, deleteCategory, categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { userOptions } = optionsStore;\r\n\r\n\tconst { language } = userOptions;\r\n\r\n\tconst [selectedItemIds, setSelectedItemIds] = useState<string[]>([]);\r\n\r\n\tconst deletedCategoryIds: ItemWithSearch[] = useMemo(() => {\r\n\t\treturn Object.keys(categories).reduce(\r\n\t\t\t(acc: ItemWithSearch[], key: string) => {\r\n\t\t\t\tif (categories[key].deleted === true) {\r\n\t\t\t\t\tconst overlaps = search(query, categories[key].name);\r\n\t\t\t\t\tif (overlaps?.length !== 0) {\r\n\t\t\t\t\t\treturn [...acc, { id: key, overlaps: overlaps }];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn acc;\r\n\t\t\t},\r\n\t\t\t[]\r\n\t\t);\r\n\t}, [categories, query]);\r\n\r\n\tconst deleteSelectedItems = useCallback(() => {\r\n\t\tsetSelectedItemIds((prevSelected: string[]) => {\r\n\t\t\tprevSelected.forEach((key: string) => {\r\n\t\t\t\tdeleteCategory(key);\r\n\t\t\t});\r\n\t\t\treturn [];\r\n\t\t});\r\n\t}, [deleteCategory]);\r\n\r\n\tconst restoreSelectedItems = useCallback(() => {\r\n\t\tsetSelectedItemIds((prevSelected: string[]) => {\r\n\t\t\tprevSelected.forEach((key: string) => {\r\n\t\t\t\trestoreCategory(key);\r\n\t\t\t});\r\n\t\t\treturn [];\r\n\t\t});\r\n\t}, [restoreCategory]);\r\n\r\n\tconst handleCategorySelection = useCallback(\r\n\t\t(id: string) => (event: CheckboxChangeEvent) => {\r\n\t\t\tconst value = event.target.checked;\r\n\t\t\tvalue\r\n\t\t\t\t? setSelectedItemIds((prevSelected: string[]) => [...prevSelected, id])\r\n\t\t\t\t: setSelectedItemIds((prevSelected: string[]) =>\r\n\t\t\t\t\t\tprevSelected.filter((item: string) => item !== id)\r\n\t\t\t\t  );\r\n\t\t},\r\n\t\t[setSelectedItemIds]\r\n\t);\r\n\r\n\tconst DeleteJSX = (callback: () => void) =>\r\n\t\tMyIconWithTooltip(\r\n\t\t\tlanguages.delete[userOptions.language],\r\n\t\t\tisSmallScreen,\r\n\t\t\tDeleteOutlined,\r\n\t\t\tfalse,\r\n\t\t\tcallback\r\n\t\t);\r\n\r\n\tconst CheckboxJSX = (\r\n\t\tkey: string,\r\n\t\thandler: (key: string) => (event: CheckboxChangeEvent) => void\r\n\t) =>\r\n\t\tMyCheckbox(\r\n\t\t\tselectedItemIds.includes(key),\r\n\t\t\tlanguage,\r\n\t\t\tisSmallScreen,\r\n\t\t\thandler(key),\r\n\t\t\tdeleteSelectedItems,\r\n\t\t\trestoreSelectedItems\r\n\t\t);\r\n\r\n\tif (!deletedCategoryIds.length)\r\n\t\treturn (\r\n\t\t\t<Empty\r\n\t\t\t\tstyle={{ margin: 'auto' }}\r\n\t\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\t\tdescription={''}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<List style={{ inlineSize: '100%' }}>\r\n\t\t\t{deletedCategoryIds.map(({ id, overlaps }: ItemWithSearch) => {\r\n\t\t\t\tconst currentCategory = categories[id];\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Item\r\n\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\topacity:\r\n\t\t\t\t\t\t\t\tselectedItemIds.length && !selectedItemIds.includes(id)\r\n\t\t\t\t\t\t\t\t\t? '.5'\r\n\t\t\t\t\t\t\t\t\t: '1',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Col span={1}>{CheckboxJSX(id, handleCategorySelection)}</Col>\r\n\t\t\t\t\t\t<Col span={16}>\r\n\t\t\t\t\t\t\t{MyTitle(\r\n\t\t\t\t\t\t\t\tcurrentCategory?.name,\r\n\t\t\t\t\t\t\t\tcurrentCategory?.type,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\t\toverlaps\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\t<CategoryItem\r\n\t\t\t\t\t\t\t\t\tinitialCategoryId={id}\r\n\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t/>,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tExportOutlined,\r\n\t\t\t\t\t\t\t\ttrue\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\t`${languages.deletedAt[language]}: ${dayjs(\r\n\t\t\t\t\t\t\t\t\tcurrentCategory?.deletedAt\r\n\t\t\t\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tInfoCircleOutlined,\r\n\t\t\t\t\t\t\t\tfalse\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\tlanguages.restore[language],\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tUndoOutlined,\r\n\t\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\t\t() => restoreCategory(id)\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>{DeleteJSX(() => deleteCategory(id))}</Col>\r\n\t\t\t\t\t</Item>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</List>\r\n\t);\r\n});\r\n\r\nexport default DeletedCategories;\r\n","import { Col, Empty, List } from 'antd';\r\nimport Item from 'antd/es/list/Item';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useMemo, useState } from 'react';\r\nimport languages from 'settings/languages';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport {\r\n\tDeleteOutlined,\r\n\tExportOutlined,\r\n\tInfoCircleOutlined,\r\n\tUndoOutlined,\r\n} from '@ant-design/icons';\r\nimport { MyCheckbox, MyIconWithTooltip, MyTitle } from './Items';\r\nimport { CheckboxChangeEvent } from 'antd/es/checkbox';\r\nimport { ItemWithSearch } from 'settings/interfaces';\r\nimport { search } from 'utils/utils';\r\nimport dayjs from 'dayjs';\r\nimport ListItem from './ListItem';\r\n\r\ninterface Props {\r\n\tquery: string;\r\n}\r\n\r\nconst DeletedItems: React.FC<Props> = observer(({ query }) => {\r\n\tconst { list, restoreItem, deleteItem } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { userOptions } = optionsStore;\r\n\r\n\tconst { language } = userOptions;\r\n\r\n\tconst [selectedItemIds, setSelectedItemIds] = useState<string[]>([]);\r\n\r\n\tconst deletedItemIds: ItemWithSearch[] = useMemo(() => {\r\n\t\treturn Object.keys(list).reduce((acc: ItemWithSearch[], key: string) => {\r\n\t\t\tif (list[key].deleted === true) {\r\n\t\t\t\tconst overlaps = search(query, list[key].title);\r\n\t\t\t\tif (overlaps?.length !== 0) {\r\n\t\t\t\t\treturn [...acc, { id: key, overlaps: overlaps }];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn acc;\r\n\t\t}, []);\r\n\t}, [list, query]);\r\n\r\n\tconst deleteSelectedItems = useCallback(() => {\r\n\t\tsetSelectedItemIds((prevSelected: string[]) => {\r\n\t\t\tprevSelected.forEach((key: string) => {\r\n\t\t\t\tdeleteItem(key);\r\n\t\t\t});\r\n\t\t\treturn [];\r\n\t\t});\r\n\t}, [deleteItem]);\r\n\r\n\tconst restoreSelectedItems = useCallback(() => {\r\n\t\tsetSelectedItemIds((prevSelected: string[]) => {\r\n\t\t\tprevSelected.forEach((key: string) => {\r\n\t\t\t\trestoreItem(key);\r\n\t\t\t});\r\n\t\t\treturn [];\r\n\t\t});\r\n\t}, [restoreItem]);\r\n\r\n\tconst handleItemSelection = useCallback(\r\n\t\t(id: string) => (event: CheckboxChangeEvent) => {\r\n\t\t\tconst value = event.target.checked;\r\n\t\t\tvalue\r\n\t\t\t\t? setSelectedItemIds((prevSelected: string[]) => [...prevSelected, id])\r\n\t\t\t\t: setSelectedItemIds((prevSelected: string[]) =>\r\n\t\t\t\t\t\tprevSelected.filter((item: string) => item !== id)\r\n\t\t\t\t  );\r\n\t\t},\r\n\t\t[setSelectedItemIds]\r\n\t);\r\n\r\n\tconst DeleteJSX = (callback: () => void) =>\r\n\t\tMyIconWithTooltip(\r\n\t\t\tlanguages.delete[userOptions.language],\r\n\t\t\tisSmallScreen,\r\n\t\t\tDeleteOutlined,\r\n\t\t\tfalse,\r\n\t\t\tcallback\r\n\t\t);\r\n\r\n\tconst CheckboxJSX = (\r\n\t\tkey: string,\r\n\t\thandler: (key: string) => (event: CheckboxChangeEvent) => void\r\n\t) =>\r\n\t\tMyCheckbox(\r\n\t\t\tselectedItemIds.includes(key),\r\n\t\t\tlanguage,\r\n\t\t\tisSmallScreen,\r\n\t\t\thandler(key),\r\n\t\t\tdeleteSelectedItems,\r\n\t\t\trestoreSelectedItems\r\n\t\t);\r\n\r\n\tif (!deletedItemIds.length)\r\n\t\treturn (\r\n\t\t\t<Empty\r\n\t\t\t\tstyle={{ margin: 'auto' }}\r\n\t\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\t\tdescription={''}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<List style={{ inlineSize: '100%' }}>\r\n\t\t\t{deletedItemIds.map(({ id, overlaps }: ItemWithSearch) => {\r\n\t\t\t\tconst currentItem = list[id];\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Item\r\n\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\topacity:\r\n\t\t\t\t\t\t\t\tselectedItemIds.length && !selectedItemIds.includes(id)\r\n\t\t\t\t\t\t\t\t\t? '.5'\r\n\t\t\t\t\t\t\t\t\t: '1',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Col span={1}>{CheckboxJSX(id, handleItemSelection)}</Col>\r\n\t\t\t\t\t\t<Col span={16}>\r\n\t\t\t\t\t\t\t{MyTitle(\r\n\t\t\t\t\t\t\t\tcurrentItem?.title,\r\n\t\t\t\t\t\t\t\tcurrentItem?.type,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\t\toverlaps\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\tinitialItem={{ id, overlaps }}\r\n\t\t\t\t\t\t\t\t\tmode='grid'\r\n\t\t\t\t\t\t\t\t\tselected={selectedItemIds.includes(id)}\r\n\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t/>,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tExportOutlined,\r\n\t\t\t\t\t\t\t\ttrue\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\t`${languages.deletedAt[language]}: ${dayjs(\r\n\t\t\t\t\t\t\t\t\tcurrentItem?.deletedAt\r\n\t\t\t\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tInfoCircleOutlined,\r\n\t\t\t\t\t\t\t\tfalse\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\tlanguages.restore[language],\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tUndoOutlined,\r\n\t\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\t\t() => restoreItem(id)\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>{DeleteJSX(() => deleteItem(id))}</Col>\r\n\t\t\t\t\t</Item>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</List>\r\n\t);\r\n});\r\n\r\nexport default DeletedItems;\r\n","import {\r\n\tDeleteOutlined,\r\n\tFolderOpenOutlined,\r\n\tUndoOutlined,\r\n\tUnorderedListOutlined,\r\n} from '@ant-design/icons';\r\nimport { Flex, Popconfirm, Segmented } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, {\r\n\tChangeEvent,\r\n\tDispatch,\r\n\tSetStateAction,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseState,\r\n} from 'react';\r\nimport languages from 'settings/languages';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport { MyIconWithTooltip, MySearch } from './Items';\r\n\r\ninterface Props {\r\n\tquery: string;\r\n\tsetQuery: Dispatch<SetStateAction<string>>;\r\n\tdebouncedQuery: string;\r\n\tisExpenses: boolean;\r\n\tsetIsExpenses: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst TrashPanel: React.FC<Props> = observer(\r\n\t({ query, setQuery, debouncedQuery, isExpenses, setIsExpenses }) => {\r\n\t\tconst { deleteItem, restoreItem, list } = listStore;\r\n\t\tconst { categories, deleteCategory, restoreCategory } = categoryStore;\r\n\t\tconst { isSmallScreen, tourRefs } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\r\n\t\tconst { language } = userOptions;\r\n\r\n\t\tconst [isSearchLoading, setIsSearchLoading] = useState<boolean>(false);\r\n\r\n\t\tconst deleteAll = useCallback(() => {\r\n\t\t\tObject.keys(list).forEach((key: string) => {\r\n\t\t\t\tlist[key].deleted && deleteItem(key);\r\n\t\t\t});\r\n\r\n\t\t\tObject.keys(categories).forEach((key: string) => {\r\n\t\t\t\tcategories[key].deleted && deleteCategory(key);\r\n\t\t\t});\r\n\t\t}, [list, categories, deleteCategory, deleteItem]);\r\n\r\n\t\tconst restoreAll = useCallback(() => {\r\n\t\t\tObject.keys(list).forEach((key: string) => {\r\n\t\t\t\tlist[key].deleted && restoreItem(key);\r\n\t\t\t});\r\n\r\n\t\t\tObject.keys(categories).forEach((key: string) => {\r\n\t\t\t\tcategories[key].deleted && restoreCategory(key);\r\n\t\t\t});\r\n\t\t}, [list, categories, restoreCategory, restoreItem]);\r\n\r\n\t\tconst handleSearch = useCallback(\r\n\t\t\t(event: ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tsetQuery(event.target.value);\r\n\t\t\t\tsetIsSearchLoading(true);\r\n\t\t\t},\r\n\t\t\t[setQuery, setIsSearchLoading]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetIsSearchLoading(false);\r\n\t\t}, [debouncedQuery]);\r\n\r\n\t\treturn (\r\n\t\t\t<Flex\r\n\t\t\t\talign='center'\r\n\t\t\t\tgap={16}\r\n\t\t\t\tref={tourRefs[5]}\r\n\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t>\r\n\t\t\t\t<Popconfirm\r\n\t\t\t\t\ttitle={languages.deleteAllConfirm[language]}\r\n\t\t\t\t\tonConfirm={deleteAll}\r\n\t\t\t\t>\r\n\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\tlanguages.deleteAll[language],\r\n\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\tDeleteOutlined,\r\n\t\t\t\t\t\tfalse\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Popconfirm>\r\n\r\n\t\t\t\t<Popconfirm\r\n\t\t\t\t\ttitle={languages.restoreAllConfirm[language]}\r\n\t\t\t\t\tonConfirm={restoreAll}\r\n\t\t\t\t>\r\n\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\tlanguages.restoreAll[language],\r\n\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\tUndoOutlined,\r\n\t\t\t\t\t\tfalse\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Popconfirm>\r\n\t\t\t\t{isSmallScreen && (\r\n\t\t\t\t\t<Segmented\r\n\t\t\t\t\t\tonChange={setIsExpenses}\r\n\t\t\t\t\t\tvalue={isExpenses}\r\n\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlabel: <UnorderedListOutlined />,\r\n\t\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlabel: <FolderOpenOutlined />,\r\n\t\t\t\t\t\t\t\tvalue: false,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<Flex style={{ inlineSize: isSmallScreen ? '100%' : '50%' }}>\r\n\t\t\t\t\t{MySearch(handleSearch, query, isSearchLoading, isSmallScreen)}\r\n\t\t\t\t</Flex>\r\n\t\t\t</Flex>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default TrashPanel;\r\n","import { Flex } from 'antd';\r\nimport DeletedCategories from 'components/DeletedCategories';\r\nimport DeletedList from 'components/DeletedItems';\r\nimport TrashPanel from 'components/TrashPanel';\r\nimport { debounce } from 'lodash';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport constants from 'settings/constants';\r\n\r\nimport { userStore } from 'utils/userStore';\r\n\r\nconst Trash: React.FC = observer(() => {\r\n\tconst { isSmallScreen, tourRefs } = userStore;\r\n\r\n\tconst [query, setQuery] = useState<string>('');\r\n\tconst [debouncedQuery, setDebouncedQuery] = useState<string>('');\r\n\tconst [isExpenses, setIsExpenses] = useState<boolean>(true);\r\n\r\n\tconst debouncedSetQuery = useMemo(\r\n\t\t() =>\r\n\t\t\tdebounce(\r\n\t\t\t\t(query: string) => setDebouncedQuery(query),\r\n\t\t\t\tconstants.optionsDebounceDelay\r\n\t\t\t),\r\n\t\t[]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tdebouncedSetQuery(query);\r\n\t\treturn () => {\r\n\t\t\tdebouncedSetQuery.cancel();\r\n\t\t};\r\n\t}, [query, debouncedSetQuery]);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={isSmallScreen ? 16 : 32}\r\n\t\t>\r\n\t\t\t<TrashPanel\r\n\t\t\t\tquery={query}\r\n\t\t\t\tsetQuery={setQuery}\r\n\t\t\t\tdebouncedQuery={debouncedQuery}\r\n\t\t\t\tisExpenses={isExpenses}\r\n\t\t\t\tsetIsExpenses={setIsExpenses}\r\n\t\t\t/>\r\n\t\t\t<Flex\r\n\t\t\t\tref={tourRefs[4]}\r\n\t\t\t\tgap={isSmallScreen ? 16 : 32}\r\n\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t>\r\n\t\t\t\t{isSmallScreen ? (\r\n\t\t\t\t\tisExpenses ? (\r\n\t\t\t\t\t\t<DeletedList query={debouncedQuery} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<DeletedCategories query={debouncedQuery} />\r\n\t\t\t\t\t)\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Flex\r\n\t\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t\t\tgap={32}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Flex style={{ inlineSize: '50%' }}>\r\n\t\t\t\t\t\t\t<DeletedList query={debouncedQuery} />\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t<Flex style={{ inlineSize: '50%' }}>\r\n\t\t\t\t\t\t\t<DeletedCategories query={debouncedQuery} />\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t)}\r\n\t\t\t</Flex>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default Trash;\r\n"],"names":["observer","_ref","query","restoreCategory","deleteCategory","categories","categoryStore","isSmallScreen","userStore","userOptions","optionsStore","language","selectedItemIds","setSelectedItemIds","useState","deletedCategoryIds","useMemo","Object","keys","reduce","acc","key","deleted","overlaps","search","name","length","id","deleteSelectedItems","useCallback","prevSelected","forEach","restoreSelectedItems","handleCategorySelection","event","value","target","checked","filter","item","_jsx","List","style","inlineSize","children","map","_ref2","currentCategory","_jsxs","Item","opacity","includes","Col","span","handler","MyCheckbox","MyTitle","type","MyIconWithTooltip","CategoryItem","initialCategoryId","disabled","ExportOutlined","concat","languages","deletedAt","dayjs","format","InfoCircleOutlined","restore","UndoOutlined","callback","delete","DeleteOutlined","Empty","margin","image","PRESENTED_IMAGE_SIMPLE","description","list","restoreItem","deleteItem","listStore","deletedItemIds","title","handleItemSelection","currentItem","ListItem","initialItem","mode","selected","setQuery","debouncedQuery","isExpenses","setIsExpenses","tourRefs","isSearchLoading","setIsSearchLoading","deleteAll","restoreAll","handleSearch","useEffect","Flex","align","gap","ref","Popconfirm","deleteAllConfirm","onConfirm","restoreAllConfirm","Segmented","onChange","options","label","UnorderedListOutlined","FolderOpenOutlined","MySearch","setDebouncedQuery","debouncedSetQuery","debounce","constants","optionsDebounceDelay","cancel","vertical","TrashPanel","DeletedList","DeletedCategories"],"sourceRoot":""}