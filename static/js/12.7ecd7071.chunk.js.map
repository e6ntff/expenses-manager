{"version":3,"file":"static/js/12.7ecd7071.chunk.js","mappings":"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","sources":["components/CategoryItem.tsx","components/CategoryList.tsx","components/AddCategory.tsx","pages/Categories.tsx"],"sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Button, Card, ColorPicker, Flex, Tooltip, Typography } from 'antd';\r\nimport { Color } from 'antd/es/color-picker';\r\nimport Title from 'antd/es/typography/Title';\r\nimport { DeleteOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\ninterface Props {\r\n\tinitialCategoryId: string;\r\n}\r\n\r\nconst CategoryItem: React.FC<Props> = observer(({ initialCategoryId }) => {\r\n\tconst { replaceCategory, categories, setLastDeletedCategoryId } =\r\n\t\tcategoryStore;\r\n\tconst { list } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { userOptions } = optionsStore;\r\n\r\n\tconst { language } = userOptions;\r\n\r\n\tconst [currentCategory, setCurrentCategory] = useState<category>(\r\n\t\tcategories[initialCategoryId]\r\n\t);\r\n\r\n\tconst itemsWithCurrentCategory = useMemo(\r\n\t\t() =>\r\n\t\t\tObject.keys(list).reduce(\r\n\t\t\t\t(acc: string[], key: string) =>\r\n\t\t\t\t\tlist[key].categoryId === initialCategoryId ? [...acc, key] : [...acc],\r\n\t\t\t\t[]\r\n\t\t\t),\r\n\t\t[list, initialCategoryId]\r\n\t);\r\n\r\n\tconst deleteCategory = useCallback(() => {\r\n\t\tsetLastDeletedCategoryId(initialCategoryId);\r\n\t}, [setLastDeletedCategoryId, initialCategoryId]);\r\n\r\n\tconst updateCurrentCategory = useCallback(\r\n\t\t(category: category) => {\r\n\t\t\tsetCurrentCategory((prevCategory: category) => {\r\n\t\t\t\tif (JSON.stringify(prevCategory) !== JSON.stringify(category)) {\r\n\t\t\t\t\treplaceCategory(initialCategoryId, category);\r\n\t\t\t\t\treturn category;\r\n\t\t\t\t}\r\n\t\t\t\treturn prevCategory;\r\n\t\t\t});\r\n\t\t},\r\n\t\t[setCurrentCategory, replaceCategory, initialCategoryId]\r\n\t);\r\n\r\n\tconst handleNameChange = useCallback(\r\n\t\t(value: string) => {\r\n\t\t\tsetCurrentCategory((prevCategory) => {\r\n\t\t\t\tconst newCategory: category = {\r\n\t\t\t\t\t...prevCategory,\r\n\t\t\t\t\tname: value,\r\n\t\t\t\t};\r\n\t\t\t\tupdateCurrentCategory(newCategory);\r\n\t\t\t\treturn newCategory;\r\n\t\t\t});\r\n\t\t},\r\n\t\t[setCurrentCategory, updateCurrentCategory]\r\n\t);\r\n\r\n\tconst handleColorChange = useCallback(\r\n\t\t(value: Color) => {\r\n\t\t\tsetCurrentCategory((prevCategory) => {\r\n\t\t\t\tconst newCategory: category = {\r\n\t\t\t\t\t...prevCategory,\r\n\t\t\t\t\tcolor: `#${value.toHex()}`,\r\n\t\t\t\t};\r\n\t\t\t\tupdateCurrentCategory(newCategory);\r\n\t\t\t\treturn newCategory;\r\n\t\t\t});\r\n\t\t},\r\n\t\t[setCurrentCategory, updateCurrentCategory]\r\n\t);\r\n\r\n\tconst ColorPickerJSX = (\r\n\t\t<ColorPicker\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tvalue={currentCategory.color}\r\n\t\t\tformat='hex'\r\n\t\t\tonChangeComplete={handleColorChange}\r\n\t\t/>\r\n\t);\r\n\r\n\tconst TitleJSX = (\r\n\t\t<Flex justify='center'>\r\n\t\t\t{isSmallScreen ? (\r\n\t\t\t\t<Typography.Text\r\n\t\t\t\t\tstrong\r\n\t\t\t\t\teditable={{ onChange: handleNameChange }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentCategory.name}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t) : (\r\n\t\t\t\t<Title\r\n\t\t\t\t\tlevel={isSmallScreen ? 5 : 3}\r\n\t\t\t\t\teditable={{ onChange: handleNameChange }}\r\n\t\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentCategory.name}\r\n\t\t\t\t</Title>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst tooltipTitle = useMemo(\r\n\t\t() =>\r\n\t\t\t`${languages.itemsWithCurrentCategory[language]} ${itemsWithCurrentCategory.length}`,\r\n\t\t[itemsWithCurrentCategory, language]\r\n\t);\r\n\r\n\tconst TooltipJSX = (\r\n\t\t<Tooltip title={tooltipTitle}>\r\n\t\t\t<InfoCircleOutlined />\r\n\t\t</Tooltip>\r\n\t);\r\n\r\n\tconst DeleteButtonJSX = (\r\n\t\t<Button\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tonClick={deleteCategory}\r\n\t\t>\r\n\t\t\t<DeleteOutlined />\r\n\t\t</Button>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Card\r\n\t\t\textra={TooltipJSX}\r\n\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\ttitle={TitleJSX}\r\n\t\t\tactions={[ColorPickerJSX, DeleteButtonJSX]}\r\n\t\t\tstyles={{\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\tpadding: 10,\r\n\t\t\t\t},\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tpadding: 0,\r\n\t\t\t\t},\r\n\t\t\t}}\r\n\t\t></Card>\r\n\t);\r\n});\r\n\r\nexport default CategoryItem;\r\n","import React, { memo, useEffect, useMemo, useState } from 'react';\r\nimport CategoryItem from './CategoryItem';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Col, Empty, Flex, Row } from 'antd';\r\nimport { userStore } from 'utils/userStore';\r\nimport LargeSpin from './LargeSpin';\r\n\r\nconst CategoryList: React.FC = observer(() => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { width, loading } = userStore;\r\n\r\n\tconst [colNumber, setColNumber] = useState<number>(4);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (width < 300) {\r\n\t\t\tsetColNumber(1);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (width < 400) {\r\n\t\t\tsetColNumber(2);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (width < 600) {\r\n\t\t\tsetColNumber(3);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetColNumber(4);\r\n\t}, [setColNumber, width]);\r\n\r\n\tconst splittedCategories = useMemo(() => {\r\n\t\tconst result: string[][] = [];\r\n\t\tlet row = -1;\r\n\r\n\t\tObject.keys(categories)\r\n\t\t\t.slice(1)\r\n\t\t\t.forEach((key: string, col: number) => {\r\n\t\t\t\tif (col % colNumber === 0) {\r\n\t\t\t\t\trow++;\r\n\t\t\t\t\tresult.push([]);\r\n\t\t\t\t}\r\n\t\t\t\tresult[row].push(key);\r\n\t\t\t});\r\n\r\n\t\treturn result;\r\n\t}, [colNumber, categories]);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<LargeSpin />\r\n\t\t\t) : Object.values(categories).length > 1 ? (\r\n\t\t\t\tsplittedCategories.map((keys: string[]) => (\r\n\t\t\t\t\t<Row\r\n\t\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t\t\tkey={keys[0]}\r\n\t\t\t\t\t\tgutter={16}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{keys.map((key: string) => (\r\n\t\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\t\tspan={24 / colNumber}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<CategoryItem initialCategoryId={key} />\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t))\r\n\t\t\t) : (\r\n\t\t\t\t<Empty\r\n\t\t\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\t\t\tdescription={''}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default memo(CategoryList);\r\n","import React, { useCallback, useState } from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport constants from 'settings/constants';\r\nimport ColorPicker, { Color } from 'antd/es/color-picker';\r\nimport { Button, Flex, Input } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\n\r\nconst AddCategory: React.FC = observer(() => {\r\n\tconst { addCategory } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\tconst [currentCategory, setCurrentCategory] = useState<category>(\r\n\t\tconstants.defaultCategory\r\n\t);\r\n\r\n\tconst handleNameChange = useCallback(\r\n\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\tconst { value } = event.target;\r\n\t\t\tsetCurrentCategory((prevCategory) => ({\r\n\t\t\t\t...prevCategory,\r\n\t\t\t\tname: value,\r\n\t\t\t}));\r\n\t\t},\r\n\t\t[setCurrentCategory]\r\n\t);\r\n\r\n\tconst handleColorChange = useCallback(\r\n\t\t(value: Color) => {\r\n\t\t\tsetCurrentCategory((prevCategory) => ({\r\n\t\t\t\t...prevCategory,\r\n\t\t\t\tcolor: `#${value.toHex()}`,\r\n\t\t\t}));\r\n\t\t},\r\n\t\t[setCurrentCategory]\r\n\t);\r\n\r\n\tconst clearCurrentCategory = useCallback(() => {\r\n\t\tsetCurrentCategory(constants.defaultCategory);\r\n\t}, [setCurrentCategory]);\r\n\r\n\tconst addCurrentCategory = useCallback(() => {\r\n\t\taddCategory(currentCategory);\r\n\t\tclearCurrentCategory();\r\n\t}, [currentCategory, addCategory, clearCurrentCategory]);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={32}\r\n\t\t\tstyle={{ inlineSize: 'min(100%, 560px)', margin: 'auto' }}\r\n\t\t>\r\n\t\t\t<ColorPicker\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={currentCategory.color}\r\n\t\t\t\tformat='hex'\r\n\t\t\t\tonChange={handleColorChange}\r\n\t\t\t/>\r\n\t\t\t<Input\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={currentCategory.name}\r\n\t\t\t\tonChange={handleNameChange}\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={addCurrentCategory}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<CheckOutlined />\r\n\t\t\t</Button>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\nimport CategoryList from '../components/CategoryList';\r\nimport AddCategory from '../components/AddCategory';\r\nimport { Divider, Flex } from 'antd';\r\n\r\nconst Categories: React.FC = () => (\r\n\t<Flex\r\n\t\tvertical\r\n\t\talign='center'\r\n\t\tgap={16}\r\n\t>\r\n\t\t<AddCategory />\r\n\t\t<Divider />\r\n\t\t<CategoryList />\r\n\t</Flex>\r\n);\r\n\r\nexport default Categories;\r\n"],"names":["observer","_ref","initialCategoryId","replaceCategory","categories","setLastDeletedCategoryId","categoryStore","list","listStore","isSmallScreen","userStore","userOptions","optionsStore","language","currentCategory","setCurrentCategory","useState","itemsWithCurrentCategory","useMemo","Object","keys","reduce","acc","key","categoryId","deleteCategory","useCallback","updateCurrentCategory","category","prevCategory","JSON","stringify","handleNameChange","value","newCategory","name","handleColorChange","color","concat","toHex","ColorPickerJSX","_jsx","ColorPicker","size","format","onChangeComplete","TitleJSX","Flex","justify","children","Typography","Text","strong","editable","onChange","Title","level","style","margin","tooltipTitle","languages","length","TooltipJSX","Tooltip","title","InfoCircleOutlined","DeleteButtonJSX","Button","onClick","DeleteOutlined","Card","extra","actions","styles","padding","body","CategoryList","width","loading","colNumber","setColNumber","useEffect","splittedCategories","result","row","slice","forEach","col","push","inlineSize","vertical","gap","LargeSpin","values","map","Row","gutter","Col","span","CategoryItem","Empty","image","PRESENTED_IMAGE_SIMPLE","description","memo","addCategory","constants","defaultCategory","event","target","clearCurrentCategory","addCurrentCategory","_jsxs","Input","type","CheckOutlined","Categories","align","AddCategory","Divider"],"sourceRoot":""}