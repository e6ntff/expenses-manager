{"version":3,"file":"static/js/196.044a6f35.chunk.js","mappings":"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","sources":["components/CategorySelect.tsx","components/ImageUpload.tsx","components/ItemModal.tsx","components/Items.tsx","components/ListItem.tsx","components/ResetButton.tsx","components/SliderDiagram.tsx","components/YearSlider.tsx","hooks/useDebounce.ts","components/ItemList.tsx","components/NewItemButton.tsx","components/CategoriesSelect.tsx","components/SortSelect.tsx","components/ModeSelect.tsx","components/Selectors.tsx","pages/Expenses.tsx","utils/transformData.ts","utils/utils.ts"],"sourcesContent":["import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select } from 'antd';\r\nimport { EditFilled } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tid: string;\r\n\tonChange: (arg0: string) => void;\r\n}\r\n\r\nconst CategorySelect: React.FC<Props> = observer(({ id, onChange }) => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tstyle={{ minInlineSize: '7em' }}\r\n\t\t\tonChange={onChange}\r\n\t\t\tvalue={id}\r\n\t\t\tsuffixIcon={\r\n\t\t\t\t<EditFilled style={{ color: categories[id] && categories[id].color }} />\r\n\t\t\t}\r\n\t\t\toptions={Object.keys(categories).map((key: string) => ({\r\n\t\t\t\tlabel: categories[key].name,\r\n\t\t\t\tvalue: key,\r\n\t\t\t}))}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default CategorySelect;\r\n","import { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Image, Upload } from 'antd';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useState } from 'react';\r\n\r\ninterface Props {\r\n\timage: string | undefined;\r\n\tonChange: (arg0: string) => void;\r\n}\r\n\r\nconst ImageUpload: React.FC<Props> = observer(({ onChange, image }) => {\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\r\n\tconst getBase64 = (img: any, callback: any) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t};\r\n\r\n\tconst handleChange = useCallback(\r\n\t\t(info: any) => {\r\n\t\t\tif (info.file.status === 'uploading') {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t}\r\n\t\t\tif (info.file.status === 'done') {\r\n\t\t\t\tgetBase64(info.file.originFileObj, (url: any) => {\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tonChange(url);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t[setLoading, onChange]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<ImgCrop\r\n\t\t\tcropShape='round'\r\n\t\t\trotationSlider\r\n\t\t>\r\n\t\t\t<Upload\r\n\t\t\t\taction={'1'}\r\n\t\t\t\taccept='image/*'\r\n\t\t\t\tlistType='picture-circle'\r\n\t\t\t\tshowUploadList={false}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tmaxCount={1}\r\n\t\t\t>\r\n\t\t\t\t{image ? (\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\tborderRadius: '50px',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : loading ? (\r\n\t\t\t\t\t<LoadingOutlined style={{ scale: '1.5' }} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<PlusOutlined style={{ scale: '1.5' }} />\r\n\t\t\t\t)}\r\n\t\t\t</Upload>\r\n\t\t</ImgCrop>\r\n\t);\r\n});\r\n\r\nexport default ImageUpload;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport calculatePrices from '../utils/calculatePrices';\r\nimport { ExpenseItem } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport languages from 'settings/languages';\r\nimport { Col, DatePicker, Form, Input, Modal, Row } from 'antd';\r\nimport CurrencySelect from 'components/CurrencySelect';\r\nimport constants from 'settings/constants';\r\nimport dayjs from 'dayjs';\r\nimport CategorySelect from './CategorySelect';\r\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { listStore } from 'utils/listStore';\r\nimport ImageUpload from './ImageUpload';\r\nimport { convertToJpeg } from 'utils/utils';\r\n\r\ninterface Props {\r\n\topened: boolean;\r\n\tinitialItemId?: string;\r\n\ttoggleOpened: () => void;\r\n\tsubmitItem: (arg0: ExpenseItem) => void;\r\n}\r\n\r\nconst ItemModal: React.FC<Props> = observer(\r\n\t({ opened, initialItemId, toggleOpened, submitItem }) => {\r\n\t\tconst [currency, setCurrency] = useState(constants.baseCurrency);\r\n\t\tconst { currencyRates, isSmallScreen } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\t\tconst { list } = listStore;\r\n\r\n\t\tconst { language } = userOptions;\r\n\r\n\t\tconst initialItem = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tinitialItemId !== undefined ? list[initialItemId] : constants.emptyItem,\r\n\t\t\t[list, initialItemId]\r\n\t\t);\r\n\r\n\t\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(initialItem);\r\n\r\n\t\tconst handleTitleChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\ttitle: value,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleDateChange = useCallback(\r\n\t\t\t(value: dayjs.Dayjs) => {\r\n\t\t\t\tif (value)\r\n\t\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tdate: value.valueOf(),\r\n\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleCategoryChange = useCallback(\r\n\t\t\t(id: string) => {\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\tcategoryId: id,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handlePriceChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem) => {\r\n\t\t\t\t\tconst updatedItem = {\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tprice: {\r\n\t\t\t\t\t\t\t...prevItem.price,\r\n\t\t\t\t\t\t\t[currency]: Number(value),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...updatedItem,\r\n\t\t\t\t\t\tprice: calculatePrices(updatedItem.price, currencyRates, currency),\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentItem, currency, currencyRates]\r\n\t\t);\r\n\r\n\t\tconst handleImageChange = useCallback(\r\n\t\t\t(image: string) => {\r\n\t\t\t\tconvertToJpeg(image as string, 0.5).then((image: string) => {\r\n\t\t\t\t\tsetCurrentItem((prevItem) => ({\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\timage: image,\r\n\t\t\t\t\t}));\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tconst submitItemWithEnter = (event: KeyboardEvent) => {\r\n\t\t\t\tif (event.key === 'Enter' && opened) {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\twindow.addEventListener('keyup', submitItemWithEnter);\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t};\r\n\t\t}, [currentItem, submitItem, opened]);\r\n\r\n\t\tconst TitleJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={currentItem.title}\r\n\t\t\t\tonInput={handleTitleChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst PriceJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='number'\r\n\t\t\t\tmin='1'\r\n\t\t\t\tstep='1'\r\n\t\t\t\tvalue={Math.round(currentItem.price[currency])}\r\n\t\t\t\tonInput={handlePriceChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CurrencyJSX = (\r\n\t\t\t<CurrencySelect\r\n\t\t\t\tvalue={currency}\r\n\t\t\t\tsetCurrency={setCurrency}\r\n\t\t\t\tonChange={setCurrency}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst DateJSX = (\r\n\t\t\t<DatePicker\r\n\t\t\t\trequired\r\n\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\tvalue={dayjs(currentItem.date)}\r\n\t\t\t\tminDate={constants.startDate}\r\n\t\t\t\tmaxDate={dayjs()}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CategoryJSX = (\r\n\t\t\t<CategorySelect\r\n\t\t\t\tid={currentItem.categoryId}\r\n\t\t\t\tonChange={handleCategoryChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst ImageJSX = (\r\n\t\t\t<ImageUpload\r\n\t\t\t\timage={currentItem.image}\r\n\t\t\t\tonChange={handleImageChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\topen={opened}\r\n\t\t\t\tokButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tcancelButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tonOk={() => {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t}}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetCurrentItem(initialItem);\r\n\t\t\t\t\ttoggleOpened();\r\n\t\t\t\t}}\r\n\t\t\t\tokText={<CheckOutlined />}\r\n\t\t\t\tcancelText={<CloseOutlined />}\r\n\t\t\t>\r\n\t\t\t\t<Form\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tlayout='vertical'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Form.Item label={languages.title[language]}>{TitleJSX}</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.price[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={16}>{PriceJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={7}>{CurrencyJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.dateAndCat[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={10}>{DateJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={13}>{CategoryJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.image[language]}>{ImageJSX}</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default ItemModal;\r\n","import {\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tFrownOutlined,\r\n\tInfoCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport { Avatar, Flex, Image, Statistic, Tag, Tooltip, Typography } from 'antd';\r\nimport Title from 'antd/es/typography/Title';\r\nimport { category, currencies, language } from 'settings/interfaces';\r\nimport languages from 'settings/languages';\r\nimport dayjs from 'dayjs';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\n\r\nexport const MyInfoTooltip = (\r\n\ttitle: string | React.JSX.Element,\r\n\tisSmallScreen: boolean,\r\n\tonClick?: () => void\r\n) => (\r\n\t<Tooltip title={title}>\r\n\t\t<InfoCircleOutlined\r\n\t\t\tonClick={onClick}\r\n\t\t\tstyle={{\r\n\t\t\t\tscale: isSmallScreen ? '1' : '1.5',\r\n\t\t\t}}\r\n\t\t/>\r\n\t</Tooltip>\r\n);\r\n\r\nexport const MyTitle = (\r\n\ttitle: string,\r\n\tisSmallScreen: boolean,\r\n\tlanguage: language,\r\n\teditable?: any\r\n) => (\r\n\t<Flex\r\n\t\tjustify='center'\r\n\t\tstyle={{\r\n\t\t\topacity: !title ? '.5' : '1',\r\n\t\t}}\r\n\t>\r\n\t\t{isSmallScreen ? (\r\n\t\t\t<Typography.Text\r\n\t\t\t\tstrong\r\n\t\t\t\tellipsis\r\n\t\t\t\teditable={editable || false}\r\n\t\t\t>\r\n\t\t\t\t{title || languages.noTitle[language]}\r\n\t\t\t</Typography.Text>\r\n\t\t) : (\r\n\t\t\t<Title\r\n\t\t\t\teditable={editable || false}\r\n\t\t\t\tellipsis\r\n\t\t\t\tlevel={3}\r\n\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t>\r\n\t\t\t\t{title || languages.noTitle[language]}\r\n\t\t\t</Title>\r\n\t\t)}\r\n\t</Flex>\r\n);\r\n\r\nexport const MyImage = (\r\n\timage: string | undefined,\r\n\tisSmallScreen: boolean,\r\n\ttoggleOpened: () => void,\r\n\tlanguage: language\r\n) =>\r\n\timage ? (\r\n\t\t<Tooltip\r\n\t\t\tcolor='#0005'\r\n\t\t\tplacement='right'\r\n\t\t\ttitle={\r\n\t\t\t\t<Image\r\n\t\t\t\t\tpreview={false}\r\n\t\t\t\t\tsrc={image}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tborderRadius: '50%',\r\n\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Avatar\r\n\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\ticon={\r\n\t\t\t\t\t<Flex\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t) : (\r\n\t\t<Tooltip title={languages.noImage[language]}>\r\n\t\t\t<Avatar\r\n\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\tonClick={toggleOpened}\r\n\t\t\t\ticon={<FrownOutlined />}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n\r\nexport const MyDate = (date: number, isSmallScreen: boolean) => (\r\n\t<Statistic\r\n\t\tvalue={dayjs(date).format('DD.MM.YY')}\r\n\t\tstyle={{\r\n\t\t\tscale: isSmallScreen ? '.67' : '.75',\r\n\t\t}}\r\n\t/>\r\n);\r\n\r\nexport const MyCategory = (category: category) => (\r\n\t<Flex\r\n\t\tvertical\r\n\t\talign='stretch'\r\n\t>\r\n\t\t{category && (\r\n\t\t\t<Tag color={category.color}>\r\n\t\t\t\t<span\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmargin: 'auto',\r\n\t\t\t\t\t\tcolor: category.color,\r\n\t\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{category.name}\r\n\t\t\t\t</span>\r\n\t\t\t</Tag>\r\n\t\t)}\r\n\t</Flex>\r\n);\r\n\r\nexport const MyPrice = (\r\n\tprice: currencies,\r\n\tisSmallScreen: boolean,\r\n\tcurrency: string\r\n) => (\r\n\t<Flex justify='center'>\r\n\t\t{isSmallScreen ? (\r\n\t\t\t<Typography.Text strong>\r\n\t\t\t\t{getSymbolAndPrice(currency)}\r\n\t\t\t\t{Math.round(price[currency])}\r\n\t\t\t</Typography.Text>\r\n\t\t) : (\r\n\t\t\t<Title\r\n\t\t\t\tlevel={3}\r\n\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t>\r\n\t\t\t\t{getSymbolAndPrice(currency, price[currency])}\r\n\t\t\t</Title>\r\n\t\t)}\r\n\t</Flex>\r\n);\r\n\r\nexport const MyEdit = (\r\n\ttitle: string,\r\n\tisSmallScreen: boolean,\r\n\ttoggleOpened: () => void\r\n) => (\r\n\t<Tooltip title={title}>\r\n\t\t<EditOutlined\r\n\t\t\tonClick={toggleOpened}\r\n\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t/>\r\n\t</Tooltip>\r\n);\r\n\r\nexport const MyDelete = (\r\n\ttitle: string,\r\n\tisSmallScreen: boolean,\r\n\tonClick: () => void\r\n) => (\r\n\t<Tooltip title={title}>\r\n\t\t<DeleteOutlined\r\n\t\t\tonClick={onClick}\r\n\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t/>\r\n\t</Tooltip>\r\n);\r\n","import React, { useState, useCallback, useMemo } from 'react';\r\nimport { ExpenseItem, Mode } from '../settings/interfaces';\r\nimport Item from 'antd/es/list/Item';\r\nimport { Card, Col, Flex } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport ItemModal from './ItemModal';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n\tMyCategory,\r\n\tMyDate,\r\n\tMyDelete,\r\n\tMyEdit,\r\n\tMyImage,\r\n\tMyInfoTooltip,\r\n\tMyPrice,\r\n\tMyTitle,\r\n} from './Items';\r\n\r\ninterface Props {\r\n\tmode: Mode;\r\n\tinitialItemId: string;\r\n}\r\n\r\nconst ListItem: React.FC<Props> = observer(({ mode, initialItemId }) => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { replaceItem, list, setLastDeletedItemIds, lastDeletedItemIds } =\r\n\t\tlistStore;\r\n\tconst { userOptions } = optionsStore;\r\n\tconst { categories } = categoryStore;\r\n\r\n\tconst { currency, language } = userOptions;\r\n\r\n\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(\r\n\t\tlist[initialItemId]\r\n\t);\r\n\r\n\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t}, [setIsModalOpened]);\r\n\r\n\tconst updateCurrentItem = useCallback(\r\n\t\t(item: ExpenseItem) => {\r\n\t\t\tsetCurrentItem((prevItem: ExpenseItem) => {\r\n\t\t\t\tif (JSON.stringify(prevItem) !== JSON.stringify(item)) {\r\n\t\t\t\t\tconst newItem: ExpenseItem = {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tupdatedAt: dayjs().valueOf(),\r\n\t\t\t\t\t};\r\n\t\t\t\t\treplaceItem(initialItemId, newItem);\r\n\t\t\t\t\treturn newItem;\r\n\t\t\t\t}\r\n\t\t\t\treturn prevItem;\r\n\t\t\t});\r\n\t\t\ttoggleIsModalOpened();\r\n\t\t},\r\n\t\t[setCurrentItem, replaceItem, toggleIsModalOpened, initialItemId]\r\n\t);\r\n\r\n\tconst deleteItem = useCallback(() => {\r\n\t\tsetLastDeletedItemIds([...lastDeletedItemIds, initialItemId]);\r\n\t}, [setLastDeletedItemIds, initialItemId, lastDeletedItemIds]);\r\n\r\n\tconst ActionsJSX = (\r\n\t\t<Flex justify='space-evenly'>\r\n\t\t\t{MyEdit(languages.edit[language], isSmallScreen, toggleIsModalOpened)}\r\n\t\t\t{MyPrice(currentItem.price, isSmallScreen, currency)}\r\n\t\t\t{MyDelete(languages.delete[language], isSmallScreen, deleteItem)}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst ImageAndDateJSX = (\r\n\t\t<Flex align='center'>\r\n\t\t\t{MyImage(currentItem.image, isSmallScreen, toggleIsModalOpened, language)}\r\n\t\t\t{MyDate(currentItem.date, isSmallScreen)}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst tooltipTitle = useMemo(() => {\r\n\t\tif (!currentItem.updatedAt) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{`${languages.createdAt[language]} ${dayjs(\r\n\t\t\t\t\t\tcurrentItem.createdAt\r\n\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{`${languages.createdAt[language]} ${dayjs(\r\n\t\t\t\t\t\tcurrentItem.createdAt\r\n\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t{`${languages.updatedAt[language]} ${dayjs(\r\n\t\t\t\t\t\tcurrentItem.updatedAt\r\n\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t}, [currentItem, language]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ItemModal\r\n\t\t\t\topened={isModalOpened}\r\n\t\t\t\tinitialItemId={initialItemId}\r\n\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\tsubmitItem={updateCurrentItem}\r\n\t\t\t/>\r\n\t\t\t{mode === 'list' ? (\r\n\t\t\t\t<Item>\r\n\t\t\t\t\t<Col>{ImageAndDateJSX}</Col>\r\n\t\t\t\t\t<Col span={9}>\r\n\t\t\t\t\t\t{MyTitle(currentItem.title, isSmallScreen, language)}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span={3}>{MyCategory(categories[currentItem.categoryId])}</Col>\r\n\t\t\t\t\t<Col span={5}>\r\n\t\t\t\t\t\t{MyPrice(currentItem.price, isSmallScreen, currency)}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t{MyEdit(\r\n\t\t\t\t\t\t\tlanguages.edit[language],\r\n\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\ttoggleIsModalOpened\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t{MyDelete(languages.delete[language], isSmallScreen, deleteItem)}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span={1}>{MyInfoTooltip(tooltipTitle, isSmallScreen)}</Col>\r\n\t\t\t\t</Item>\r\n\t\t\t) : (\r\n\t\t\t\t<Card\r\n\t\t\t\t\textra={[MyInfoTooltip(tooltipTitle, isSmallScreen)]}\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\tbordered\r\n\t\t\t\t\ttitle={MyTitle(currentItem.title, isSmallScreen, language)}\r\n\t\t\t\t\tactions={[ActionsJSX]}\r\n\t\t\t\t\tstyle={{ inlineSize: isSmallScreen ? '9em' : '12em' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Flex justify='center'>\r\n\t\t\t\t\t\t<Flex\r\n\t\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\t\talign='stretch'\r\n\t\t\t\t\t\t\tgap={4}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{ImageAndDateJSX}\r\n\t\t\t\t\t\t\t{MyCategory(categories[currentItem.categoryId])}\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Card>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default ListItem;\r\n","import { ReloadOutlined } from '@ant-design/icons';\r\nimport { Button, Tooltip } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tdisabled?: boolean;\r\n\treset: () => void;\r\n}\r\n\r\nconst ResetButton: React.FC<Props> = observer(({ disabled, reset }) => {\r\n\tconst { userOptions } = optionsStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.reset[userOptions.language]}>\r\n\t\t\t<Button\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t\tonClick={reset}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<ReloadOutlined />\r\n\t\t\t</Button>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default ResetButton;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { memo, useMemo } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { getValuesByMonth } from 'utils/transformData';\r\n\r\nconst SliderDiagram: React.FC = observer(() => {\r\n\tconst { list } = listStore;\r\n\tconst { defaultRange } = optionsStore;\r\n\r\n\tconst valuesByMonth: number[] | { [key: string]: number } = useMemo(\r\n\t\t() => getValuesByMonth(list, defaultRange),\r\n\t\t[list, defaultRange]\r\n\t);\r\n\r\n\tconst data = {\r\n\t\tlabels: new Array(valuesByMonth.length).fill(''),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tdata: valuesByMonth,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tx: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\ty: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\telements: {\r\n\t\t\tpoint: {\r\n\t\t\t\tradius: 0,\r\n\t\t\t},\r\n\t\t\tline: {\r\n\t\t\t\tcubicInterpolationMode: 'monotone' as 'monotone',\r\n\t\t\t\tborderColor: '#7775',\r\n\t\t\t},\r\n\t\t},\r\n\t\taspectRatio: 25,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Line\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\tdata={data}\r\n\t\t\toptions={options}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default memo(SliderDiagram);\r\n","import React, { memo, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Slider, Tooltip as TooltipAntd } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport { ExpenseItem } from 'settings/interfaces';\r\nimport dayjs from 'dayjs';\r\nimport minMax from 'dayjs/plugin/minMax';\r\nimport { ZoomInOutlined, ZoomOutOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport {\r\n\tChart,\r\n\tTooltip,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tLineElement,\r\n\tLineController,\r\n\tPointElement,\r\n} from 'chart.js';\r\nimport SliderDiagram from './SliderDiagram';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\nChart.register(\r\n\tTooltip,\r\n\tLineElement,\r\n\tLineController,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tPointElement\r\n);\r\n\r\ndayjs.extend(minMax);\r\n\r\ninterface Props {\r\n\trange: number[];\r\n\tsetRange: (arg0: number[]) => void;\r\n\tisAccurate: boolean;\r\n\tsetIsAccurate: (arg0: boolean) => void;\r\n}\r\n\r\nconst YearSlider: React.FC<Props> = observer(\r\n\t({ range, setRange, isAccurate, setIsAccurate }) => {\r\n\t\tconst { list } = listStore;\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { defaultRange, setDefaultRange, userOptions } = optionsStore;\r\n\r\n\t\tconst [value, setValue] = useState(defaultRange);\r\n\r\n\t\tconst sliderRange: [number, number] = useMemo(() => {\r\n\t\t\tconst dates = Object.values(list).map((item: ExpenseItem) => item.date);\r\n\t\t\treturn [Math.min(...dates), Math.max(...dates)];\r\n\t\t}, [list]);\r\n\r\n\t\tconst marks: { [key: number]: string } = useMemo(() => {\r\n\t\t\tconst start = dayjs(sliderRange[0]).startOf('day');\r\n\t\t\tconst end = dayjs(sliderRange[1]).endOf('day');\r\n\t\t\tconst marks: { [key: number]: string } = {};\r\n\t\t\tlet currentDate = start;\r\n\t\t\tif (isAccurate) {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'day')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.date() === 1\r\n\t\t\t\t\t\t\t? currentDate.month() === 0\r\n\t\t\t\t\t\t\t\t? currentDate.format('YYYY')\r\n\t\t\t\t\t\t\t\t: currentDate.format('M')\r\n\t\t\t\t\t\t\t: ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'day').startOf('day');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'month')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.month() === 0 ? currentDate.format('YYYY') : ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'month').startOf('month');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn marks;\r\n\t\t}, [sliderRange, isAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetDefaultRange(sliderRange);\r\n\t\t}, [sliderRange, setDefaultRange]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetRange(defaultRange);\r\n\t\t}, [defaultRange, setRange]);\r\n\r\n\t\tconst handleRangeChanging = useCallback(\r\n\t\t\t(values: number[]) => {\r\n\t\t\t\tsetRange(values);\r\n\t\t\t},\r\n\t\t\t[setRange]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetValue(range);\r\n\t\t}, [range]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tisSmallScreen && setIsAccurate(false);\r\n\t\t}, [isSmallScreen, setIsAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\t!isAccurate &&\r\n\t\t\t\tsetRange([\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.max([\r\n\t\t\t\t\t\t\tdayjs(range[0]).startOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[0]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.min([\r\n\t\t\t\t\t\t\tdayjs(range[1]).endOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[1]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t]);\r\n\t\t\t// eslint-disable-next-line\r\n\t\t}, [isAccurate]);\r\n\r\n\t\treturn dayjs(defaultRange[1]).diff(dayjs(defaultRange[0]), 'hours') >=\r\n\t\t\t48 ? (\r\n\t\t\t<Flex\r\n\t\t\t\tgap={16}\r\n\t\t\t\talign='center'\r\n\t\t\t>\r\n\t\t\t\t<Segmented\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tdefaultValue={isAccurate}\r\n\t\t\t\t\tvalue={isAccurate}\r\n\t\t\t\t\tonChange={setIsAccurate}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t\t<TooltipAntd title={languages.byMonth[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t\t<ZoomOutOutlined />\r\n\t\t\t\t\t\t\t\t</TooltipAntd>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tvalue: false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t\t<TooltipAntd title={languages.byDay[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t\t<ZoomInOutlined />\r\n\t\t\t\t\t\t\t\t</TooltipAntd>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t\tdisabled: isSmallScreen,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\talign='stretch'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<SliderDiagram />\r\n\t\t\t\t\t<Slider\r\n\t\t\t\t\t\trange\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tmarks={marks}\r\n\t\t\t\t\t\tstep={null}\r\n\t\t\t\t\t\tdots={true}\r\n\t\t\t\t\t\ttooltip={{\r\n\t\t\t\t\t\t\tformatter: (value: number | undefined) => (\r\n\t\t\t\t\t\t\t\t<>{dayjs(value).format(isAccurate ? 'DD.MM.YY' : 'MM.YY')}</>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tmin={sliderRange[0]}\r\n\t\t\t\t\t\tmax={sliderRange[1]}\r\n\t\t\t\t\t\tdefaultValue={defaultRange}\r\n\t\t\t\t\t\tonChange={setValue}\r\n\t\t\t\t\t\tonChangeComplete={handleRangeChanging}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Flex>\r\n\t\t) : (\r\n\t\t\t<></>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default memo(YearSlider);\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useDebounce = (value: any, delay: number = 250) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const timerId = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce\r\n","import React, { memo, useMemo } from 'react';\r\nimport ListItem from './ListItem';\r\nimport { ListOptions } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Empty, List, Space } from 'antd';\r\nimport { getListToShowOnCurrentPageIds } from 'utils/transformData';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport LargeSpin from './LargeSpin';\r\nimport { listStore } from 'utils/listStore';\r\n\r\ninterface Props {\r\n\tfilteredListIds: string[];\r\n}\r\n\r\nconst ItemList: React.FC<Props> = observer(({ filteredListIds }) => {\r\n\tconst { loading, isSmallScreen } = userStore;\r\n\tconst { listOptions } = optionsStore;\r\n\tconst { lastDeletedItemIds } = listStore;\r\n\r\n\tconst debouncedOptions: ListOptions = useDebounce(listOptions);\r\n\r\n\tconst listToShowOnCurrentPageIds = useMemo(\r\n\t\t() =>\r\n\t\t\tgetListToShowOnCurrentPageIds(debouncedOptions, filteredListIds).filter(\r\n\t\t\t\t(key: string) => !lastDeletedItemIds.includes(key)\r\n\t\t\t),\r\n\t\t[filteredListIds, debouncedOptions, lastDeletedItemIds]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<LargeSpin />\r\n\t\t\t) : !filteredListIds.length ? (\r\n\t\t\t\t<Empty\r\n\t\t\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\t\t\tdescription={''}\r\n\t\t\t\t/>\r\n\t\t\t) : debouncedOptions.mode === 'list' ? (\r\n\t\t\t\t<List style={{ inlineSize: '100%' }}>\r\n\t\t\t\t\t{listToShowOnCurrentPageIds.map((key: string) => (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\tmode={debouncedOptions.mode}\r\n\t\t\t\t\t\t\tinitialItemId={key}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</List>\r\n\t\t\t) : (\r\n\t\t\t\t<Space\r\n\t\t\t\t\twrap\r\n\t\t\t\t\tsize={isSmallScreen ? 8 : 16}\r\n\t\t\t\t\t// align='center'\r\n\t\t\t\t\t// style={{ justifyContent: 'center' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{listToShowOnCurrentPageIds.map((key: string) => (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\tmode={debouncedOptions.mode}\r\n\t\t\t\t\t\t\tinitialItemId={key}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Space>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default memo(ItemList);\r\n","import React, { useCallback, useState } from 'react';\r\nimport { ExpenseItem } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button, Tooltip } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport ItemModal from './ItemModal';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport dayjs from 'dayjs';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst NewItemButton: React.FC = observer(() => {\r\n\tconst { addItem } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { userOptions } = optionsStore;\r\n\r\n\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\r\n\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t}, [setIsModalOpened]);\r\n\r\n\tconst addNewItem = useCallback(\r\n\t\t(item: ExpenseItem) => {\r\n\t\t\tconst date = dayjs().valueOf();\r\n\t\t\taddItem({ ...item, createdAt: date });\r\n\t\t\ttoggleIsModalOpened();\r\n\t\t},\r\n\t\t[addItem, toggleIsModalOpened]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.newItem[userOptions.language]}>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={toggleIsModalOpened}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<PlusOutlined />\r\n\t\t\t</Button>\r\n\t\t\t<ItemModal\r\n\t\t\t\topened={isModalOpened}\r\n\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\tsubmitItem={addNewItem}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default NewItemButton;\r\n","import React from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select, Tag, Tooltip } from 'antd';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst tagRender = (props: any, categories: { [key: number]: category }) => {\r\n\tconst { label, value, onClose } = props;\r\n\tconst onPreventMouseDown = (event: any) => {\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\t};\r\n\tconst color =\r\n\t\tObject.keys(categories).length > 1 ? categories[value].color : '';\r\n\r\n\treturn (\r\n\t\t<Tag\r\n\t\t\tcolor={color}\r\n\t\t\tonMouseDown={onPreventMouseDown}\r\n\t\t\tclosable={true}\r\n\t\t\tonClose={onClose}\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginInlineEnd: 4,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<span\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcolor: color,\r\n\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{label}\r\n\t\t\t</span>\r\n\t\t</Tag>\r\n\t);\r\n};\r\n\r\nconst CategoriesSelect: React.FC = observer(() => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleCategoriesToFilterChange, userOptions } =\r\n\t\toptionsStore;\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.categoriesSelect[userOptions.language]}>\r\n\t\t\t<Select\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tmode='multiple'\r\n\t\t\t\tshowSearch={false}\r\n\t\t\t\ttagRender={(props) => tagRender(props, categories)}\r\n\t\t\t\tstyle={{ minInlineSize: '10em' }}\r\n\t\t\t\tvalue={listOptions.categoriesToFilterIds}\r\n\t\t\t\tonChange={handleCategoriesToFilterChange}\r\n\t\t\t\toptions={Object.keys(categories).map((key: string) => ({\r\n\t\t\t\t\tlabel: categories[key].name,\r\n\t\t\t\t\tvalue: key,\r\n\t\t\t\t}))}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default CategoriesSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Tooltip } from 'antd';\r\nimport {\r\n\tCalendarOutlined,\r\n\tDollarOutlined,\r\n\tFontColorsOutlined,\r\n\tSortAscendingOutlined,\r\n\tSortDescendingOutlined,\r\n} from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst SortSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst {\r\n\t\tsetIsSortingReversed,\r\n\t\tlistOptions,\r\n\t\tuserOptions,\r\n\t\thandleSortAlgorithmChanging,\r\n\t} = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t<Tooltip title={languages.sort.reverse[userOptions.language]}>\r\n\t\t\t\t{listOptions.isSortingReversed ? (\r\n\t\t\t\t\t<SortDescendingOutlined\r\n\t\t\t\t\t\tonClick={() => setIsSortingReversed(!listOptions.isSortingReversed)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<SortAscendingOutlined\r\n\t\t\t\t\t\tonClick={() => setIsSortingReversed(!listOptions.isSortingReversed)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Tooltip>\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.sortingAlgorithm}\r\n\t\t\t\tonChange={handleSortAlgorithmChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byDate[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'date',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byTitle[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<FontColorsOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'title',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byPrice[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<DollarOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'price',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default SortSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Tooltip } from 'antd';\r\nimport { MenuOutlined, TableOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst ModeSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleModeChanging, userOptions } = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.mode}\r\n\t\t\t\tonChange={handleModeChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.layout.list[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<MenuOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'list',\r\n\t\t\t\t\t\tdisabled: isSmallScreen,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.layout.grid[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<TableOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'grid',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default ModeSelect;\r\n","import { Divider, Flex, Pagination } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { memo, useMemo } from 'react';\r\nimport NewItemButton from './NewItemButton';\r\nimport YearSlider from './YearSlider';\r\nimport CategoriesSelect from './CategoriesSelect';\r\nimport SortSelect from './SortSelect';\r\nimport ModeSelect from './ModeSelect';\r\nimport constants from 'settings/constants';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport ResetButton from './ResetButton';\r\n\r\ninterface Props {\r\n\ttotal: number;\r\n}\r\n\r\nconst Selectors: React.FC<Props> = observer(({ total }) => {\r\n\tconst { isSmallScreen, loading } = userStore;\r\n\tconst {\r\n\t\tlistOptions,\r\n\t\tdefaultRange,\r\n\t\tresetListOptions: resetSettings,\r\n\t\thandlePageChanging,\r\n\t\tsetRange,\r\n\t\tsetIsAccurate,\r\n\t} = optionsStore;\r\n\r\n\tconst {\r\n\t\tisSortingReversed,\r\n\t\trange,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t\tcurrentPage,\r\n\t\tsortingAlgorithm,\r\n\t\tisAccurate,\r\n\t} = listOptions;\r\n\r\n\tconst isSettingsChanged = useMemo(\r\n\t\t() =>\r\n\t\t\tisSortingReversed ||\r\n\t\t\tcategoriesToFilterIds.length > 0 ||\r\n\t\t\tpageSize !== constants.defaultPageSize ||\r\n\t\t\tcurrentPage !== 1 ||\r\n\t\t\t(range[0] &&\r\n\t\t\t\trange[1] &&\r\n\t\t\t\t(range[0] !== defaultRange[0] || range[1]) !== defaultRange[1]) ||\r\n\t\t\tsortingAlgorithm !== 'date',\r\n\t\t[\r\n\t\t\trange,\r\n\t\t\tdefaultRange,\r\n\t\t\tisSortingReversed,\r\n\t\t\tcategoriesToFilterIds,\r\n\t\t\tpageSize,\r\n\t\t\tcurrentPage,\r\n\t\t\tsortingAlgorithm,\r\n\t\t]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t>\r\n\t\t\t<Flex\r\n\t\t\t\tvertical\r\n\t\t\t\tgap={32}\r\n\t\t\t>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tgap={16}\r\n\t\t\t\t\tvertical={isSmallScreen}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t\t<NewItemButton />\r\n\t\t\t\t\t\t<CategoriesSelect />\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t\t<SortSelect />\r\n\t\t\t\t\t\t<ModeSelect />\r\n\t\t\t\t\t\t<ResetButton\r\n\t\t\t\t\t\t\tdisabled={!isSettingsChanged}\r\n\t\t\t\t\t\t\treset={resetSettings}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<YearSlider\r\n\t\t\t\t\tsetIsAccurate={setIsAccurate}\r\n\t\t\t\t\tisAccurate={isAccurate}\r\n\t\t\t\t\trange={range}\r\n\t\t\t\t\tsetRange={setRange}\r\n\t\t\t\t/>\r\n\t\t\t</Flex>\r\n\t\t\t<Divider />\r\n\t\t\t{!loading && (\r\n\t\t\t\t<Pagination\r\n\t\t\t\t\tstyle={{ alignSelf: 'center' }}\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\tshowSizeChanger\r\n\t\t\t\t\tpageSizeOptions={constants.pageSizeOptions}\r\n\t\t\t\t\tcurrent={listOptions.currentPage}\r\n\t\t\t\t\tpageSize={listOptions.pageSize}\r\n\t\t\t\t\ttotal={total}\r\n\t\t\t\t\tonChange={handlePageChanging}\r\n\t\t\t\t\tonShowSizeChange={handlePageChanging}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default memo(Selectors);\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport ItemList from '../components/ItemList';\r\nimport { Flex } from 'antd';\r\nimport Selectors from 'components/Selectors';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { getFilteredListIds } from 'utils/transformData';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst Expenses: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { listOptions, userOptions, handleModeChanging, handlePageChanging } =\r\n\t\toptionsStore;\r\n\r\n\tconst { language } = userOptions;\r\n\r\n\tconst {\r\n\t\trange,\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t} = listOptions;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isSmallScreen) {\r\n\t\t\thandleModeChanging('grid');\r\n\t\t}\r\n\t}, [isSmallScreen, handleModeChanging]);\r\n\r\n\tuseEffect(() => {\r\n\t\thandlePageChanging(1, pageSize);\r\n\t}, [\r\n\t\trange,\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t\thandlePageChanging,\r\n\t]);\r\n\t\r\n\tconst filteredListIds = useMemo(\r\n\t\t() => getFilteredListIds(listOptions, list, language),\r\n\t\t[list, language, listOptions]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t\talign='center'\r\n\t\t>\r\n\t\t\t<Selectors total={filteredListIds.length} />\r\n\t\t\t<ItemList filteredListIds={filteredListIds} />\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default Expenses;\r\n","import {\r\n\tExpenseItem,\r\n\tInterval,\r\n\tListOptions,\r\n\tValue,\r\n\tlanguage,\r\n} from 'settings/interfaces';\r\nimport { sortBy } from './utils';\r\nimport dayjs from 'dayjs';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\n\r\ndayjs.extend(isBetween);\r\n\r\nexport const getFilteredListIds = (\r\n\toptions: ListOptions,\r\n\tlist: { [key: string]: ExpenseItem },\r\n\tlanguage: language\r\n) => {\r\n\tconst { range, categoriesToFilterIds, sortingAlgorithm, isSortingReversed } =\r\n\t\toptions;\r\n\treturn sortBy(\r\n\t\tlist,\r\n\t\tObject.keys(list).filter(\r\n\t\t\t(key: string) =>\r\n\t\t\t\t!list[key].deleted &&\r\n\t\t\t\tlist[key].date >= range[0] &&\r\n\t\t\t\tlist[key].date <= range[1] &&\r\n\t\t\t\t(categoriesToFilterIds.length\r\n\t\t\t\t\t? categoriesToFilterIds.some(\r\n\t\t\t\t\t\t\t(id: string) => list[key].categoryId === id\r\n\t\t\t\t\t  )\r\n\t\t\t\t\t: true)\r\n\t\t),\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tlanguage\r\n\t);\r\n};\r\n\r\nexport const getListToShowOnCurrentPageIds = (\r\n\toptions: ListOptions,\r\n\tfilteredListIds: string[]\r\n) => {\r\n\tconst { currentPage, pageSize } = options;\r\n\tconst startIndex = (currentPage - 1) * pageSize;\r\n\tconst endIndex = startIndex + pageSize;\r\n\treturn filteredListIds.slice(startIndex, endIndex);\r\n};\r\n\r\nexport const getValuesForBarDiagram = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\tcurrency: string,\r\n\tmode: Interval,\r\n\tyear: number\r\n) => {\r\n\tif (mode === 'year') {\r\n\t\tconst result: { [key: number]: number } = {};\r\n\t\tObject.keys(list).forEach((key: string) => {\r\n\t\t\tconst resultKey: number = dayjs(list[key].date).year();\r\n\t\t\tif (result[resultKey] === undefined) {\r\n\t\t\t\tresult[resultKey] = list[key].price[currency];\r\n\t\t\t} else {\r\n\t\t\t\tresult[resultKey] += list[key].price[currency];\r\n\t\t\t}\r\n\t\t});\r\n\t\tfor (let year in result) {\r\n\t\t\tresult[year] = Math.round(result[year]);\r\n\t\t}\r\n\t\treturn result;\r\n\t} else if (mode === 'month') {\r\n\t\tconst result: number[] = new Array(12).fill(0);\r\n\t\tObject.keys(list).forEach((key: string) => {\r\n\t\t\tif (dayjs(list[key].date).year() === year) {\r\n\t\t\t\tconst index: number = dayjs(list[key].date).month();\r\n\t\t\t\tresult[index] += list[key].price[currency];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result.map((item: number) => Math.round(item));\r\n\t}\r\n\treturn [];\r\n};\r\n\r\nexport const getValuesForPieDiagram = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\trange: number[],\r\n\tcurrency: string\r\n) => {\r\n\tconst values: Value[] = [];\r\n\tObject.keys(list).forEach((key: string) => {\r\n\t\tif (list[key].date > range[0] && list[key].date < range[1]) {\r\n\t\t\tconst categoryKey: number = Object.keys(values).findIndex(\r\n\t\t\t\t(n: string) => values[Number(n)].categoryId === list[key].categoryId\r\n\t\t\t);\r\n\t\t\tif (categoryKey !== -1) {\r\n\t\t\t\tvalues[categoryKey].value += list[key].price[currency];\r\n\t\t\t} else {\r\n\t\t\t\tvalues.push({\r\n\t\t\t\t\tcategoryId: list[key].categoryId,\r\n\t\t\t\t\tvalue: list[key].price[currency],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn values.map((value: Value) => ({\r\n\t\t...value,\r\n\t\tvalue: Math.round(value.value),\r\n\t}));\r\n};\r\n\r\nexport const getTotalInCurrentRange = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\trange: number[],\r\n\tcurrency: string\r\n) =>\r\n\tMath.floor(\r\n\t\tObject.values(list).reduce((acc: number, item: ExpenseItem) => {\r\n\t\t\tif (item.date >= range[0] && item.date <= range[1]) {\r\n\t\t\t\treturn acc + item.price[currency];\r\n\t\t\t}\r\n\t\t\treturn acc;\r\n\t\t}, 0)\r\n\t);\r\n\r\nexport const getValuesByMonth = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\trange: number[]\r\n) => {\r\n\tconst values: number[] = [];\r\n\tconst end = dayjs(range[1]);\r\n\tlet startDate = dayjs(range[0]);\r\n\tlet endDate = dayjs(range[0]).add(1, 'month');\r\n\r\n\twhile (!endDate.isAfter(end, 'day')) {\r\n\t\tconst itemsInMonth = Object.values(list).filter(\r\n\t\t\t// eslint-disable-next-line\r\n\t\t\t(item: ExpenseItem) =>\r\n\t\t\t\titem.date > startDate.valueOf() && item.date < endDate.valueOf()\r\n\t\t);\r\n\t\tconst valueForMonth = itemsInMonth.reduce(\r\n\t\t\t(acc, item) => acc + item.price.USD,\r\n\t\t\t0\r\n\t\t);\r\n\t\tvalues.push(valueForMonth);\r\n\t\tstartDate = startDate.add(1, 'month');\r\n\t\tendDate = endDate.add(1, 'month');\r\n\t}\r\n\r\n\treturn values;\r\n};\r\n","import { ExpenseItem, Sort, language } from 'settings/interfaces';\r\n\r\nexport const getSymbolAndPrice = (currency: string, price?: number) => {\r\n\tlet result = '';\r\n\tif (currency === 'USD') result += '$';\r\n\tif (currency === 'EUR') result += '€';\r\n\tif (currency === 'RUB') result += '₽';\r\n\r\n\tconst formattedPrice = Math.round(price as number)\r\n\t\t?.toString()\r\n\t\t.split('')\r\n\t\t.reverse()\r\n\t\t.reduce(\r\n\t\t\t(acc: string[], symbol: string, index: number) =>\r\n\t\t\t\tindex % 3 === 0 && index !== 0\r\n\t\t\t\t\t? [...acc, symbol + ',']\r\n\t\t\t\t\t: [...acc, symbol],\r\n\t\t\t[]\r\n\t\t)\r\n\t\t.reverse()\r\n\t\t.join('');\r\n\r\n\treturn price === undefined ? result : result + formattedPrice;\r\n};\r\n\r\nexport const sortBy = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\tlistKeys: string[],\r\n\tsortingAlgorithm: Sort,\r\n\treversed: boolean,\r\n\tlanguage?: language\r\n) => {\r\n\tlet result: string[];\r\n\tswitch (sortingAlgorithm) {\r\n\t\tcase 'date':\r\n\t\t\tresult = listKeys.sort(\r\n\t\t\t\t(prev: string, next: string) =>\r\n\t\t\t\t\tlist[next].date.valueOf() - list[prev].date.valueOf()\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'title':\r\n\t\t\tresult = listKeys.sort((prev: string, next: string) =>\r\n\t\t\t\tlist[prev].title.localeCompare(list[next].title, language, {\r\n\t\t\t\t\tsensitivity: 'base',\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'price':\r\n\t\t\tresult = listKeys.sort(\r\n\t\t\t\t(prev: string, next: string) =>\r\n\t\t\t\t\tlist[next].price.USD - list[prev].price.USD\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tresult = listKeys;\r\n\t}\r\n\r\n\treturn reversed ? result.reverse() : result;\r\n};\r\n\r\nexport const convertToJpeg: (\r\n\tbase64String: string,\r\n\tquality: number\r\n) => Promise<string> = (base64String: string, quality: number) =>\r\n\tnew Promise((resolve) => {\r\n\t\tconst img = new Image();\r\n\t\timg.src = base64String;\r\n\t\timg.onload = () => {\r\n\t\t\tconst canvas = document.createElement('canvas');\r\n\t\t\tconst ctx = canvas.getContext('2d');\r\n\t\t\tcanvas.width = img.width;\r\n\t\t\tcanvas.height = img.height;\r\n\t\t\tctx?.drawImage(img, 0, 0);\r\n\t\t\tconst jpegBase64: string = canvas.toDataURL('image/jpeg', quality);\r\n\t\t\tresolve(jpegBase64);\r\n\t\t};\r\n\t});\r\n"],"names":["observer","_ref","id","onChange","categories","categoryStore","isSmallScreen","userStore","_jsx","Select","size","style","minInlineSize","value","suffixIcon","EditFilled","color","options","Object","keys","map","key","label","name","image","loading","setLoading","useState","handleChange","useCallback","info","file","status","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","originFileObj","url","ImgCrop","cropShape","rotationSlider","children","Upload","action","accept","listType","showUploadList","maxCount","Image","preview","src","width","borderRadius","LoadingOutlined","scale","PlusOutlined","opened","initialItemId","toggleOpened","submitItem","currency","setCurrency","constants","baseCurrency","currencyRates","userOptions","optionsStore","list","listStore","language","initialItem","useMemo","undefined","emptyItem","currentItem","setCurrentItem","handleTitleChange","event","target","prevItem","title","handleDateChange","date","valueOf","handleCategoryChange","categoryId","handlePriceChange","updatedItem","price","Number","calculatePrices","handleImageChange","convertToJpeg","then","useEffect","submitItemWithEnter","window","removeEventListener","TitleJSX","Input","required","type","onInput","PriceJSX","min","step","Math","round","CurrencyJSX","CurrencySelect","DateJSX","DatePicker","dayjs","minDate","startDate","maxDate","CategoryJSX","CategorySelect","ImageJSX","ImageUpload","Modal","open","okButtonProps","cancelButtonProps","onOk","onCancel","okText","CheckOutlined","cancelText","CloseOutlined","_jsxs","Form","layout","inlineSize","Item","languages","Row","Col","span","dateAndCat","MyInfoTooltip","onClick","Tooltip","InfoCircleOutlined","MyTitle","editable","Flex","justify","opacity","Typography","Text","strong","ellipsis","noTitle","Title","level","margin","MyImage","placement","blockSize","objectFit","Avatar","cursor","icon","noImage","FrownOutlined","MyDate","Statistic","format","MyCategory","category","vertical","align","Tag","filter","MyPrice","getSymbolAndPrice","MyEdit","EditOutlined","MyDelete","DeleteOutlined","mode","replaceItem","setLastDeletedItemIds","lastDeletedItemIds","isModalOpened","setIsModalOpened","toggleIsModalOpened","prevValue","updateCurrentItem","item","JSON","stringify","newItem","updatedAt","deleteItem","ActionsJSX","edit","delete","ImageAndDateJSX","tooltipTitle","_Fragment","concat","createdAt","ItemModal","Card","extra","bordered","actions","gap","disabled","reset","Button","ReloadOutlined","SliderDiagram","defaultRange","valuesByMonth","getValuesByMonth","data","labels","Array","length","fill","datasets","Line","plugins","legend","display","tooltip","enabled","scales","x","grid","y","elements","point","radius","line","cubicInterpolationMode","borderColor","aspectRatio","memo","Chart","register","LineElement","LineController","CategoryScale","LinearScale","PointElement","minMax","YearSlider","range","setRange","isAccurate","setIsAccurate","setDefaultRange","setValue","sliderRange","dates","values","max","marks","start","startOf","end","endOf","currentDate","isBefore","isSame","month","add","handleRangeChanging","diff","Segmented","defaultValue","TooltipAntd","byMonth","ZoomOutOutlined","byDay","ZoomInOutlined","Slider","dots","formatter","onChangeComplete","delay","arguments","debouncedValue","setDebouncedValue","timerId","setTimeout","clearTimeout","ItemList","filteredListIds","listOptions","debouncedOptions","useDebounce","listToShowOnCurrentPageIds","getListToShowOnCurrentPageIds","includes","LargeSpin","List","ListItem","Space","wrap","Empty","PRESENTED_IMAGE_SIMPLE","description","addItem","addNewItem","handleCategoriesToFilterChange","categoriesSelect","showSearch","tagRender","props","onClose","onMouseDown","preventDefault","stopPropagation","closable","marginInlineEnd","categoriesToFilterIds","setIsSortingReversed","handleSortAlgorithmChanging","alignSelf","sort","reverse","isSortingReversed","SortDescendingOutlined","SortAscendingOutlined","sortingAlgorithm","byDate","CalendarOutlined","byTitle","FontColorsOutlined","byPrice","DollarOutlined","handleModeChanging","MenuOutlined","TableOutlined","Selectors","total","resetListOptions","resetSettings","handlePageChanging","pageSize","currentPage","isSettingsChanged","defaultPageSize","NewItemButton","CategoriesSelect","SortSelect","ModeSelect","ResetButton","Divider","Pagination","showSizeChanger","pageSizeOptions","current","onShowSizeChange","Expenses","getFilteredListIds","isBetween","sortBy","deleted","some","startIndex","endIndex","slice","getValuesForBarDiagram","year","forEach","resultKey","index","getValuesForPieDiagram","categoryKey","findIndex","n","push","getTotalInCurrentRange","floor","reduce","acc","endDate","isAfter","valueForMonth","USD","_Math$round","formattedPrice","toString","split","symbol","join","listKeys","reversed","prev","next","localeCompare","sensitivity","base64String","quality","Promise","resolve","onload","canvas","document","createElement","ctx","getContext","height","drawImage","jpegBase64","toDataURL"],"sourceRoot":""}