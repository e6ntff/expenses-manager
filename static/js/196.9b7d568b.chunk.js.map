{"version":3,"file":"static/js/196.9b7d568b.chunk.js","mappings":"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","sources":["components/DeleteButton.tsx","utils/calculatePrices.ts","components/CategorySelect.tsx","components/ImageUpload.tsx","components/ItemModal.tsx","components/ListItem.tsx","components/ResetButton.tsx","components/SliderDiagram.tsx","components/YearSlider.tsx","hooks/useDebounce.ts","components/ItemList.tsx","components/NewItemButton.tsx","components/CategoriesSelect.tsx","components/SortSelect.tsx","components/ModeSelect.tsx","components/Selectors.tsx","pages/Expenses.tsx","utils/transformData.ts","utils/utils.ts"],"sourcesContent":["import { DeleteOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tremove: () => void;\r\n}\r\n\r\nconst DeleteButton: React.FC<Props> = observer(({ remove }) => {\r\n\tconst { userOptions } = optionsStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.delete[userOptions.language]}>\r\n\t\t\t<DeleteOutlined\r\n\t\t\t\tonClick={remove}\r\n\t\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default DeleteButton;\r\n","import constants from '../settings/constants';\r\nimport { currencies, rates } from '../settings/interfaces';\r\n\r\nconst calculatePrices = (\r\n\tprices: currencies,\r\n\trates: rates,\r\n\tcurrency: string = constants.baseCurrency\r\n) => {\r\n\tswitch (currency) {\r\n\t\tcase 'USD':\r\n\t\t\tprices['EUR'] = prices['USD'] * rates['EUR'];\r\n\t\t\tprices['RUB'] = prices['USD'] * rates['RUB'];\r\n\t\t\tbreak;\r\n\t\tcase 'EUR':\r\n\t\t\tprices['USD'] = prices['EUR'] / rates['EUR'];\r\n\t\t\tprices['RUB'] = (prices['EUR'] * rates['RUB']) / rates['EUR'];\r\n\t\t\tbreak;\r\n\t\tcase 'RUB':\r\n\t\t\tprices['EUR'] = (prices['RUB'] / rates['RUB']) * rates['EUR'];\r\n\t\t\tprices['USD'] = prices['RUB'] / rates['RUB'];\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t}\r\n\r\n\treturn prices;\r\n};\r\n\r\nexport default calculatePrices;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select } from 'antd';\r\nimport { EditFilled } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tid: string;\r\n\tonChange: (arg0: string) => void;\r\n}\r\n\r\nconst CategorySelect: React.FC<Props> = observer(({ id, onChange }) => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tstyle={{ minInlineSize: '7em' }}\r\n\t\t\tonChange={onChange}\r\n\t\t\tvalue={id}\r\n\t\t\tsuffixIcon={\r\n\t\t\t\t<EditFilled style={{ color: categories[id] && categories[id].color }} />\r\n\t\t\t}\r\n\t\t\toptions={Object.keys(categories).map((key: string) => ({\r\n\t\t\t\tlabel: categories[key].name,\r\n\t\t\t\tvalue: key,\r\n\t\t\t}))}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default CategorySelect;\r\n","import { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Image, Upload } from 'antd';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useState } from 'react';\r\n\r\ninterface Props {\r\n\timage: string | undefined;\r\n\tonChange: (arg0: string) => void;\r\n}\r\n\r\nconst ImageUpload: React.FC<Props> = observer(({ onChange, image }) => {\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\r\n\tconst getBase64 = (img: any, callback: any) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t};\r\n\r\n\tconst handleChange = useCallback(\r\n\t\t(info: any) => {\r\n\t\t\tif (info.file.status === 'uploading') {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t}\r\n\t\t\tif (info.file.status === 'done') {\r\n\t\t\t\tgetBase64(info.file.originFileObj, (url: any) => {\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tonChange(url);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t[setLoading, onChange]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<ImgCrop\r\n\t\t\tcropShape='round'\r\n\t\t\trotationSlider\r\n\t\t>\r\n\t\t\t<Upload\r\n\t\t\t\taction={'1'}\r\n\t\t\t\taccept='image/*'\r\n\t\t\t\tlistType='picture-circle'\r\n\t\t\t\tshowUploadList={false}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tmaxCount={1}\r\n\t\t\t>\r\n\t\t\t\t{image ? (\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\tborderRadius: '50px',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : loading ? (\r\n\t\t\t\t\t<LoadingOutlined style={{ scale: '1.5' }} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<PlusOutlined style={{ scale: '1.5' }} />\r\n\t\t\t\t)}\r\n\t\t\t</Upload>\r\n\t\t</ImgCrop>\r\n\t);\r\n});\r\n\r\nexport default ImageUpload;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport calculatePrices from '../utils/calculatePrices';\r\nimport { ExpenseItem } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport languages from 'settings/languages';\r\nimport { Col, DatePicker, Form, Input, Modal, Row } from 'antd';\r\nimport CurrencySelect from 'components/CurrencySelect';\r\nimport constants from 'settings/constants';\r\nimport dayjs from 'dayjs';\r\nimport CategorySelect from './CategorySelect';\r\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { listStore } from 'utils/listStore';\r\nimport ImageUpload from './ImageUpload';\r\nimport { convertToJpeg } from 'utils/utils';\r\n\r\ninterface Props {\r\n\topened: boolean;\r\n\tinitialItemId?: string;\r\n\ttoggleOpened: () => void;\r\n\tsubmitItem: (arg0: ExpenseItem) => void;\r\n}\r\n\r\nconst ItemModal: React.FC<Props> = observer(\r\n\t({ opened, initialItemId, toggleOpened, submitItem }) => {\r\n\t\tconst [currency, setCurrency] = useState(constants.baseCurrency);\r\n\t\tconst { currencyRates, isSmallScreen } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\t\tconst { list } = listStore;\r\n\r\n\t\tconst { language } = userOptions;\r\n\r\n\t\tconst initialItem = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tinitialItemId !== undefined ? list[initialItemId] : constants.emptyItem,\r\n\t\t\t[list, initialItemId]\r\n\t\t);\r\n\r\n\t\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(initialItem);\r\n\r\n\t\tconst handleTitleChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\ttitle: value,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleDateChange = useCallback(\r\n\t\t\t(value: dayjs.Dayjs) => {\r\n\t\t\t\tif (value)\r\n\t\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tdate: value.valueOf(),\r\n\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleCategoryChange = useCallback(\r\n\t\t\t(id: string) => {\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\tcategoryId: id,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handlePriceChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem) => {\r\n\t\t\t\t\tconst updatedItem = {\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tprice: {\r\n\t\t\t\t\t\t\t...prevItem.price,\r\n\t\t\t\t\t\t\t[currency]: Number(value),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...updatedItem,\r\n\t\t\t\t\t\tprice: calculatePrices(updatedItem.price, currencyRates, currency),\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentItem, currency, currencyRates]\r\n\t\t);\r\n\r\n\t\tconst handleImageChange = useCallback(\r\n\t\t\t(image: string) => {\r\n\t\t\t\tconvertToJpeg(image as string, 0.5).then((image: string) => {\r\n\t\t\t\t\tsetCurrentItem((prevItem) => ({\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\timage: image,\r\n\t\t\t\t\t}));\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tconst submitItemWithEnter = (event: KeyboardEvent) => {\r\n\t\t\t\tif (event.key === 'Enter' && opened) {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\twindow.addEventListener('keyup', submitItemWithEnter);\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t};\r\n\t\t}, [currentItem, submitItem, opened]);\r\n\r\n\t\tconst TitleJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={currentItem.title}\r\n\t\t\t\tonInput={handleTitleChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst PriceJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='number'\r\n\t\t\t\tmin='1'\r\n\t\t\t\tstep='1'\r\n\t\t\t\tvalue={Math.round(currentItem.price[currency])}\r\n\t\t\t\tonInput={handlePriceChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CurrencyJSX = (\r\n\t\t\t<CurrencySelect\r\n\t\t\t\tvalue={currency}\r\n\t\t\t\tsetCurrency={setCurrency}\r\n\t\t\t\tonChange={setCurrency}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst DateJSX = (\r\n\t\t\t<DatePicker\r\n\t\t\t\trequired\r\n\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\tvalue={dayjs(currentItem.date)}\r\n\t\t\t\tminDate={constants.startDate}\r\n\t\t\t\tmaxDate={dayjs()}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CategoryJSX = (\r\n\t\t\t<CategorySelect\r\n\t\t\t\tid={currentItem.categoryId}\r\n\t\t\t\tonChange={handleCategoryChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst ImageJSX = (\r\n\t\t\t<ImageUpload\r\n\t\t\t\timage={currentItem.image}\r\n\t\t\t\tonChange={handleImageChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\topen={opened}\r\n\t\t\t\tokButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tcancelButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tonOk={() => {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t}}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetCurrentItem(initialItem);\r\n\t\t\t\t\ttoggleOpened();\r\n\t\t\t\t}}\r\n\t\t\t\tokText={<CheckOutlined />}\r\n\t\t\t\tcancelText={<CloseOutlined />}\r\n\t\t\t>\r\n\t\t\t\t<Form\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tlayout='vertical'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Form.Item label={languages.title[language]}>{TitleJSX}</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.price[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={16}>{PriceJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={7}>{CurrencyJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.dateAndCat[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={10}>{DateJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={13}>{CategoryJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.image[language]}>{ImageJSX}</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default ItemModal;\r\n","import React, { useState, useCallback, useMemo } from 'react';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport { ExpenseItem, Mode } from '../settings/interfaces';\r\nimport Item from 'antd/es/list/Item';\r\nimport {\r\n\tAvatar,\r\n\tCard,\r\n\tCol,\r\n\tFlex,\r\n\tStatistic,\r\n\tTag,\r\n\tImage,\r\n\tTooltip,\r\n\tTypography,\r\n} from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport Title from 'antd/es/typography/Title';\r\nimport {\r\n\tEditOutlined,\r\n\tFrownOutlined,\r\n\tInfoCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ItemModal from './ItemModal';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport dayjs from 'dayjs';\r\nimport DeleteButton from './DeleteButton';\r\n\r\ninterface Props {\r\n\tmode: Mode;\r\n\tinitialItemId: string;\r\n}\r\n\r\nconst ListItem: React.FC<Props> = observer(({ mode, initialItemId }) => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { replaceItem, list, setLastDeletedItemIds, lastDeletedItemIds } =\r\n\t\tlistStore;\r\n\tconst { userOptions } = optionsStore;\r\n\tconst { categories } = categoryStore;\r\n\r\n\tconst { currency, language } = userOptions;\r\n\r\n\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(\r\n\t\tlist[initialItemId]\r\n\t);\r\n\r\n\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t}, [setIsModalOpened]);\r\n\r\n\tconst updateCurrentItem = useCallback(\r\n\t\t(item: ExpenseItem) => {\r\n\t\t\tsetCurrentItem((prevItem: ExpenseItem) => {\r\n\t\t\t\tif (JSON.stringify(prevItem) !== JSON.stringify(item)) {\r\n\t\t\t\t\tconst newItem: ExpenseItem = {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tupdatedAt: dayjs().valueOf(),\r\n\t\t\t\t\t};\r\n\t\t\t\t\treplaceItem(initialItemId, newItem);\r\n\t\t\t\t\treturn newItem;\r\n\t\t\t\t}\r\n\t\t\t\treturn prevItem;\r\n\t\t\t});\r\n\t\t\ttoggleIsModalOpened();\r\n\t\t},\r\n\t\t[setCurrentItem, replaceItem, toggleIsModalOpened, initialItemId]\r\n\t);\r\n\r\n\tconst deleteItem = useCallback(() => {\r\n\t\tsetLastDeletedItemIds([...lastDeletedItemIds, initialItemId]);\r\n\t}, [setLastDeletedItemIds, initialItemId, lastDeletedItemIds]);\r\n\r\n\tconst TitleJSX = (\r\n\t\t<Flex\r\n\t\t\tjustify='center'\r\n\t\t\tstyle={{\r\n\t\t\t\topacity: !currentItem.title ? '.5' : '1',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{isSmallScreen ? (\r\n\t\t\t\t<Typography.Text\r\n\t\t\t\t\tstrong\r\n\t\t\t\t\tellipsis\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentItem.title || languages.noTitle[language]}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t) : (\r\n\t\t\t\t<Title\r\n\t\t\t\t\tellipsis\r\n\t\t\t\t\tlevel={3}\r\n\t\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentItem.title || languages.noTitle[language]}\r\n\t\t\t\t</Title>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst ImageAndDateJSX = (\r\n\t\t<Flex align='center'>\r\n\t\t\t{currentItem.image ? (\r\n\t\t\t\t<Tooltip\r\n\t\t\t\t\tcolor='#0005'\r\n\t\t\t\t\tplacement='right'\r\n\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\t\tsrc={currentItem.image}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborderRadius: '50%',\r\n\t\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\ticon={\r\n\t\t\t\t\t\t\t<Flex\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\t\t\t\tsrc={currentItem.image}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t) : (\r\n\t\t\t\t<Tooltip title={languages.noImage[language]}>\r\n\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\tonClick={toggleIsModalOpened}\r\n\t\t\t\t\t\ticon={<FrownOutlined />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t)}\r\n\t\t\t<Statistic\r\n\t\t\t\tvalue={dayjs(currentItem.date).format('DD.MM.YY')}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tscale: isSmallScreen ? '.75' : '.75',\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst CategoryJSX = (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\talign='stretch'\r\n\t\t>\r\n\t\t\t{categories[currentItem.categoryId] && (\r\n\t\t\t\t<Tag color={categories[currentItem.categoryId].color}>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmargin: 'auto',\r\n\t\t\t\t\t\t\tcolor: categories[currentItem.categoryId].color,\r\n\t\t\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{categories[currentItem.categoryId].name}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Tag>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst PriceJSX = (\r\n\t\t<Flex justify='center'>\r\n\t\t\t{isSmallScreen ? (\r\n\t\t\t\t<Typography.Text strong>\r\n\t\t\t\t\t{getSymbolAndPrice(currency)}\r\n\t\t\t\t\t{Math.round(currentItem.price[currency])}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t) : (\r\n\t\t\t\t<Title\r\n\t\t\t\t\tlevel={3}\r\n\t\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{getSymbolAndPrice(currency, currentItem.price[currency])}\r\n\t\t\t\t</Title>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst DeleteJSX = <DeleteButton remove={deleteItem} />;\r\n\r\n\tconst EditJSX = (\r\n\t\t<Tooltip title={languages.edit[language]}>\r\n\t\t\t<EditOutlined\r\n\t\t\t\tonClick={toggleIsModalOpened}\r\n\t\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n\r\n\tconst ActionsJSX = (\r\n\t\t<Flex justify='space-evenly'>\r\n\t\t\t{EditJSX}\r\n\t\t\t{PriceJSX}\r\n\t\t\t{DeleteJSX}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst tooltipTitle = useMemo(() => {\r\n\t\tif (!currentItem.updatedAt) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{`${languages.createdAt[language]} ${dayjs(\r\n\t\t\t\t\t\tcurrentItem.createdAt\r\n\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{`${languages.createdAt[language]} ${dayjs(\r\n\t\t\t\t\t\tcurrentItem.createdAt\r\n\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t{`${languages.updatedAt[language]} ${dayjs(\r\n\t\t\t\t\t\tcurrentItem.updatedAt\r\n\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t}, [currentItem, language]);\r\n\r\n\tconst TooltipJSX = (\r\n\t\t<Tooltip title={tooltipTitle}>\r\n\t\t\t<InfoCircleOutlined\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tscale: isSmallScreen ? '1' : '1.5',\r\n\t\t\t\t\topacity: mode === 'grid' ? '.45' : '1',\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ItemModal\r\n\t\t\t\topened={isModalOpened}\r\n\t\t\t\tinitialItemId={initialItemId}\r\n\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\tsubmitItem={updateCurrentItem}\r\n\t\t\t/>\r\n\t\t\t{mode === 'list' ? (\r\n\t\t\t\t<Item>\r\n\t\t\t\t\t<Col>{ImageAndDateJSX}</Col>\r\n\t\t\t\t\t<Col span={9}>{TitleJSX}</Col>\r\n\t\t\t\t\t<Col span={3}>{CategoryJSX}</Col>\r\n\t\t\t\t\t<Col span={5}>{PriceJSX}</Col>\r\n\t\t\t\t\t<Col>{EditJSX}</Col>\r\n\t\t\t\t\t<Col>{DeleteJSX}</Col>\r\n\t\t\t\t\t<Col>{TooltipJSX}</Col>\r\n\t\t\t\t</Item>\r\n\t\t\t) : (\r\n\t\t\t\t<Card\r\n\t\t\t\t\textra={[TooltipJSX]}\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\tbordered\r\n\t\t\t\t\ttitle={TitleJSX}\r\n\t\t\t\t\tactions={[ActionsJSX]}\r\n\t\t\t\t\tstyle={{ inlineSize: isSmallScreen ? '8em' : '12em' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Flex justify='center'>\r\n\t\t\t\t\t\t<Flex\r\n\t\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\t\talign='stretch'\r\n\t\t\t\t\t\t\tgap={4}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{ImageAndDateJSX}\r\n\t\t\t\t\t\t\t{CategoryJSX}\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Card>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default ListItem;\r\n","import { ReloadOutlined } from '@ant-design/icons';\r\nimport { Button, Tooltip } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tdisabled?: boolean;\r\n\treset: () => void;\r\n}\r\n\r\nconst ResetButton: React.FC<Props> = observer(({ disabled, reset }) => {\r\n\tconst { userOptions } = optionsStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.reset[userOptions.language]}>\r\n\t\t\t<Button\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t\tonClick={reset}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<ReloadOutlined />\r\n\t\t\t</Button>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default ResetButton;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { memo, useMemo } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { getValuesByMonth } from 'utils/transformData';\r\n\r\nconst SliderDiagram: React.FC = observer(() => {\r\n\tconst { list } = listStore;\r\n\tconst { defaultRange } = optionsStore;\r\n\r\n\tconst valuesByMonth: number[] | { [key: string]: number } = useMemo(\r\n\t\t() => getValuesByMonth(list, defaultRange),\r\n\t\t[list, defaultRange]\r\n\t);\r\n\r\n\tconst data = {\r\n\t\tlabels: new Array(valuesByMonth.length).fill(''),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tdata: valuesByMonth,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tx: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\ty: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\telements: {\r\n\t\t\tpoint: {\r\n\t\t\t\tradius: 0,\r\n\t\t\t},\r\n\t\t\tline: {\r\n\t\t\t\tcubicInterpolationMode: 'monotone' as 'monotone',\r\n\t\t\t\tborderColor: '#7775',\r\n\t\t\t},\r\n\t\t},\r\n\t\taspectRatio: 25,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Line\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\tdata={data}\r\n\t\t\toptions={options}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default memo(SliderDiagram);\r\n","import React, { memo, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Slider, Tooltip as TooltipAntd } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport { ExpenseItem } from 'settings/interfaces';\r\nimport dayjs from 'dayjs';\r\nimport minMax from 'dayjs/plugin/minMax';\r\nimport { ZoomInOutlined, ZoomOutOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport {\r\n\tChart,\r\n\tTooltip,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tLineElement,\r\n\tLineController,\r\n\tPointElement,\r\n} from 'chart.js';\r\nimport SliderDiagram from './SliderDiagram';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\nChart.register(\r\n\tTooltip,\r\n\tLineElement,\r\n\tLineController,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tPointElement\r\n);\r\n\r\ndayjs.extend(minMax);\r\n\r\ninterface Props {\r\n\trange: number[];\r\n\tsetRange: (arg0: number[]) => void;\r\n\tisAccurate: boolean;\r\n\tsetIsAccurate: (arg0: boolean) => void;\r\n}\r\n\r\nconst YearSlider: React.FC<Props> = observer(\r\n\t({ range, setRange, isAccurate, setIsAccurate }) => {\r\n\t\tconst { list } = listStore;\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { defaultRange, setDefaultRange, userOptions } = optionsStore;\r\n\r\n\t\tconst [value, setValue] = useState(defaultRange);\r\n\r\n\t\tconst sliderRange: [number, number] = useMemo(() => {\r\n\t\t\tconst dates = Object.values(list).map((item: ExpenseItem) => item.date);\r\n\t\t\treturn [Math.min(...dates), Math.max(...dates)];\r\n\t\t}, [list]);\r\n\r\n\t\tconst marks: { [key: number]: string } = useMemo(() => {\r\n\t\t\tconst start = dayjs(sliderRange[0]).startOf('day');\r\n\t\t\tconst end = dayjs(sliderRange[1]).endOf('day');\r\n\t\t\tconst marks: { [key: number]: string } = {};\r\n\t\t\tlet currentDate = start;\r\n\t\t\tif (isAccurate) {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'day')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.date() === 1\r\n\t\t\t\t\t\t\t? currentDate.month() === 0\r\n\t\t\t\t\t\t\t\t? currentDate.format('YYYY')\r\n\t\t\t\t\t\t\t\t: currentDate.format('M')\r\n\t\t\t\t\t\t\t: ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'day').startOf('day');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'month')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.month() === 0 ? currentDate.format('YYYY') : ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'month').startOf('month');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn marks;\r\n\t\t}, [sliderRange, isAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetDefaultRange(sliderRange);\r\n\t\t}, [sliderRange, setDefaultRange]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetRange(defaultRange);\r\n\t\t}, [defaultRange, setRange]);\r\n\r\n\t\tconst handleRangeChanging = useCallback(\r\n\t\t\t(values: number[]) => {\r\n\t\t\t\tsetRange(values);\r\n\t\t\t},\r\n\t\t\t[setRange]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetValue(range);\r\n\t\t}, [range]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tisSmallScreen && setIsAccurate(false);\r\n\t\t}, [isSmallScreen, setIsAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\t!isAccurate &&\r\n\t\t\t\tsetRange([\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.max([\r\n\t\t\t\t\t\t\tdayjs(range[0]).startOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[0]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.min([\r\n\t\t\t\t\t\t\tdayjs(range[1]).endOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[1]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t]);\r\n\t\t\t// eslint-disable-next-line\r\n\t\t}, [isAccurate]);\r\n\r\n\t\treturn dayjs(defaultRange[1]).diff(dayjs(defaultRange[0]), 'hours') >=\r\n\t\t\t48 ? (\r\n\t\t\t<Flex\r\n\t\t\t\tgap={16}\r\n\t\t\t\talign='center'\r\n\t\t\t>\r\n\t\t\t\t<Segmented\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tdefaultValue={isAccurate}\r\n\t\t\t\t\tvalue={isAccurate}\r\n\t\t\t\t\tonChange={setIsAccurate}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t\t<TooltipAntd title={languages.byMonth[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t\t<ZoomOutOutlined />\r\n\t\t\t\t\t\t\t\t</TooltipAntd>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tvalue: false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t\t<TooltipAntd title={languages.byDay[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t\t<ZoomInOutlined />\r\n\t\t\t\t\t\t\t\t</TooltipAntd>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t\tdisabled: isSmallScreen,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\talign='stretch'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<SliderDiagram />\r\n\t\t\t\t\t<Slider\r\n\t\t\t\t\t\trange\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tmarks={marks}\r\n\t\t\t\t\t\tstep={null}\r\n\t\t\t\t\t\tdots={true}\r\n\t\t\t\t\t\ttooltip={{\r\n\t\t\t\t\t\t\tformatter: (value: number | undefined) => (\r\n\t\t\t\t\t\t\t\t<>{dayjs(value).format(isAccurate ? 'DD.MM.YY' : 'MM.YY')}</>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tmin={sliderRange[0]}\r\n\t\t\t\t\t\tmax={sliderRange[1]}\r\n\t\t\t\t\t\tdefaultValue={defaultRange}\r\n\t\t\t\t\t\tonChange={setValue}\r\n\t\t\t\t\t\tonChangeComplete={handleRangeChanging}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Flex>\r\n\t\t) : (\r\n\t\t\t<></>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default memo(YearSlider);\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useDebounce = (value: any, delay: number = 250) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const timerId = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce\r\n","import React, { memo, useMemo } from 'react';\r\nimport ListItem from './ListItem';\r\nimport { ListOptions } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Empty, List, Space } from 'antd';\r\nimport { getListToShowOnCurrentPageIds } from 'utils/transformData';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport LargeSpin from './LargeSpin';\r\nimport { listStore } from 'utils/listStore';\r\n\r\ninterface Props {\r\n\tfilteredListIds: string[];\r\n}\r\n\r\nconst ItemList: React.FC<Props> = observer(({ filteredListIds }) => {\r\n\tconst { loading, isSmallScreen } = userStore;\r\n\tconst { listOptions } = optionsStore;\r\n\tconst { lastDeletedItemIds } = listStore;\r\n\r\n\tconst debouncedOptions: ListOptions = useDebounce(listOptions);\r\n\r\n\tconst listToShowOnCurrentPageIds = useMemo(\r\n\t\t() =>\r\n\t\t\tgetListToShowOnCurrentPageIds(debouncedOptions, filteredListIds).filter(\r\n\t\t\t\t(key: string) => !lastDeletedItemIds.includes(key)\r\n\t\t\t),\r\n\t\t[filteredListIds, debouncedOptions, lastDeletedItemIds]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<LargeSpin />\r\n\t\t\t) : !filteredListIds.length ? (\r\n\t\t\t\t<Empty\r\n\t\t\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\t\t\tdescription={''}\r\n\t\t\t\t/>\r\n\t\t\t) : debouncedOptions.mode === 'list' ? (\r\n\t\t\t\t<List style={{ inlineSize: '100%' }}>\r\n\t\t\t\t\t{listToShowOnCurrentPageIds.map((key: string) => (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\tmode={debouncedOptions.mode}\r\n\t\t\t\t\t\t\tinitialItemId={key}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</List>\r\n\t\t\t) : (\r\n\t\t\t\t<Space\r\n\t\t\t\t\twrap\r\n\t\t\t\t\tsize={isSmallScreen ? 8 : 16}\r\n\t\t\t\t\talign='center'\r\n\t\t\t\t\tstyle={{ justifyContent: 'center' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{listToShowOnCurrentPageIds.map((key: string) => (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\tmode={debouncedOptions.mode}\r\n\t\t\t\t\t\t\tinitialItemId={key}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Space>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default memo(ItemList);\r\n","import React, { useCallback, useState } from 'react';\r\nimport { ExpenseItem } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button, Tooltip } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport ItemModal from './ItemModal';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport dayjs from 'dayjs';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst NewItemButton: React.FC = observer(() => {\r\n\tconst { addItem } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { userOptions } = optionsStore;\r\n\r\n\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\r\n\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t}, [setIsModalOpened]);\r\n\r\n\tconst addNewItem = useCallback(\r\n\t\t(item: ExpenseItem) => {\r\n\t\t\tconst date = dayjs().valueOf();\r\n\t\t\taddItem({ ...item, createdAt: date });\r\n\t\t\ttoggleIsModalOpened();\r\n\t\t},\r\n\t\t[addItem, toggleIsModalOpened]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.newItem[userOptions.language]}>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={toggleIsModalOpened}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<PlusOutlined />\r\n\t\t\t</Button>\r\n\t\t\t<ItemModal\r\n\t\t\t\topened={isModalOpened}\r\n\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\tsubmitItem={addNewItem}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default NewItemButton;\r\n","import React from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select, Tag, Tooltip } from 'antd';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst tagRender = (props: any, categories: { [key: number]: category }) => {\r\n\tconst { label, value, onClose } = props;\r\n\tconst onPreventMouseDown = (event: any) => {\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\t};\r\n\tconst color =\r\n\t\tObject.keys(categories).length > 1 ? categories[value].color : '';\r\n\r\n\treturn (\r\n\t\t<Tag\r\n\t\t\tcolor={color}\r\n\t\t\tonMouseDown={onPreventMouseDown}\r\n\t\t\tclosable={true}\r\n\t\t\tonClose={onClose}\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginInlineEnd: 4,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<span\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcolor: color,\r\n\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{label}\r\n\t\t\t</span>\r\n\t\t</Tag>\r\n\t);\r\n};\r\n\r\nconst CategoriesSelect: React.FC = observer(() => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleCategoriesToFilterChange, userOptions } =\r\n\t\toptionsStore;\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.categoriesSelect[userOptions.language]}>\r\n\t\t\t<Select\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tmode='multiple'\r\n\t\t\t\tshowSearch={false}\r\n\t\t\t\ttagRender={(props) => tagRender(props, categories)}\r\n\t\t\t\tstyle={{ minInlineSize: '10em' }}\r\n\t\t\t\tvalue={listOptions.categoriesToFilterIds}\r\n\t\t\t\tonChange={handleCategoriesToFilterChange}\r\n\t\t\t\toptions={Object.keys(categories).map((key: string) => ({\r\n\t\t\t\t\tlabel: categories[key].name,\r\n\t\t\t\t\tvalue: key,\r\n\t\t\t\t}))}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default CategoriesSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Tooltip } from 'antd';\r\nimport {\r\n\tCalendarOutlined,\r\n\tDollarOutlined,\r\n\tFontColorsOutlined,\r\n\tSortAscendingOutlined,\r\n\tSortDescendingOutlined,\r\n} from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst SortSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst {\r\n\t\tsetIsSortingReversed,\r\n\t\tlistOptions,\r\n\t\tuserOptions,\r\n\t\thandleSortAlgorithmChanging,\r\n\t} = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t<Tooltip title={languages.sort.reverse[userOptions.language]}>\r\n\t\t\t\t{listOptions.isSortingReversed ? (\r\n\t\t\t\t\t<SortDescendingOutlined\r\n\t\t\t\t\t\tonClick={() => setIsSortingReversed(!listOptions.isSortingReversed)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<SortAscendingOutlined\r\n\t\t\t\t\t\tonClick={() => setIsSortingReversed(!listOptions.isSortingReversed)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Tooltip>\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.sortingAlgorithm}\r\n\t\t\t\tonChange={handleSortAlgorithmChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byDate[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'date',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byTitle[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<FontColorsOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'title',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byPrice[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<DollarOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'price',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default SortSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Tooltip } from 'antd';\r\nimport { MenuOutlined, TableOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst ModeSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleModeChanging, userOptions } = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.mode}\r\n\t\t\t\tonChange={handleModeChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.layout.list[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<MenuOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'list',\r\n\t\t\t\t\t\tdisabled: isSmallScreen,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.layout.grid[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<TableOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'grid',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default ModeSelect;\r\n","import { Divider, Flex, Pagination } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { memo, useMemo } from 'react';\r\nimport NewItemButton from './NewItemButton';\r\nimport YearSlider from './YearSlider';\r\nimport CategoriesSelect from './CategoriesSelect';\r\nimport SortSelect from './SortSelect';\r\nimport ModeSelect from './ModeSelect';\r\nimport constants from 'settings/constants';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport ResetButton from './ResetButton';\r\n\r\ninterface Props {\r\n\ttotal: number;\r\n}\r\n\r\nconst Selectors: React.FC<Props> = observer(({ total }) => {\r\n\tconst { isSmallScreen, loading } = userStore;\r\n\tconst {\r\n\t\tlistOptions,\r\n\t\tdefaultRange,\r\n\t\tresetListOptions: resetSettings,\r\n\t\thandlePageChanging,\r\n\t\tsetRange,\r\n\t\tsetIsAccurate,\r\n\t} = optionsStore;\r\n\r\n\tconst {\r\n\t\tisSortingReversed,\r\n\t\trange,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t\tcurrentPage,\r\n\t\tsortingAlgorithm,\r\n\t\tisAccurate,\r\n\t} = listOptions;\r\n\r\n\tconst isSettingsChanged = useMemo(\r\n\t\t() =>\r\n\t\t\tisSortingReversed ||\r\n\t\t\tcategoriesToFilterIds.length > 0 ||\r\n\t\t\tpageSize !== constants.defaultPageSize ||\r\n\t\t\tcurrentPage !== 1 ||\r\n\t\t\t(range[0] &&\r\n\t\t\t\trange[1] &&\r\n\t\t\t\t(range[0] !== defaultRange[0] || range[1]) !== defaultRange[1]) ||\r\n\t\t\tsortingAlgorithm !== 'date',\r\n\t\t[\r\n\t\t\trange,\r\n\t\t\tdefaultRange,\r\n\t\t\tisSortingReversed,\r\n\t\t\tcategoriesToFilterIds,\r\n\t\t\tpageSize,\r\n\t\t\tcurrentPage,\r\n\t\t\tsortingAlgorithm,\r\n\t\t]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t>\r\n\t\t\t<Flex\r\n\t\t\t\tvertical\r\n\t\t\t\tgap={32}\r\n\t\t\t>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tgap={16}\r\n\t\t\t\t\tvertical={isSmallScreen}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t\t<NewItemButton />\r\n\t\t\t\t\t\t<CategoriesSelect />\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t\t<SortSelect />\r\n\t\t\t\t\t\t<ModeSelect />\r\n\t\t\t\t\t\t<ResetButton\r\n\t\t\t\t\t\t\tdisabled={!isSettingsChanged}\r\n\t\t\t\t\t\t\treset={resetSettings}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<YearSlider\r\n\t\t\t\t\tsetIsAccurate={setIsAccurate}\r\n\t\t\t\t\tisAccurate={isAccurate}\r\n\t\t\t\t\trange={range}\r\n\t\t\t\t\tsetRange={setRange}\r\n\t\t\t\t/>\r\n\t\t\t</Flex>\r\n\t\t\t<Divider />\r\n\t\t\t{!loading && (\r\n\t\t\t\t<Pagination\r\n\t\t\t\t\tstyle={{ alignSelf: 'center' }}\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\tshowSizeChanger\r\n\t\t\t\t\tpageSizeOptions={constants.pageSizeOptions}\r\n\t\t\t\t\tcurrent={listOptions.currentPage}\r\n\t\t\t\t\tpageSize={listOptions.pageSize}\r\n\t\t\t\t\ttotal={total}\r\n\t\t\t\t\tonChange={handlePageChanging}\r\n\t\t\t\t\tonShowSizeChange={handlePageChanging}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default memo(Selectors);\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport ItemList from '../components/ItemList';\r\nimport { Flex } from 'antd';\r\nimport Selectors from 'components/Selectors';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { getFilteredListIds } from 'utils/transformData';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst Expenses: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { listOptions, userOptions, handleModeChanging, handlePageChanging } =\r\n\t\toptionsStore;\r\n\r\n\tconst { language } = userOptions;\r\n\r\n\tconst {\r\n\t\trange,\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t} = listOptions;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isSmallScreen) {\r\n\t\t\thandleModeChanging('grid');\r\n\t\t}\r\n\t}, [isSmallScreen, handleModeChanging]);\r\n\r\n\tuseEffect(() => {\r\n\t\thandlePageChanging(1, pageSize);\r\n\t}, [\r\n\t\trange,\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t\thandlePageChanging,\r\n\t]);\r\n\t\r\n\tconst filteredListIds = useMemo(\r\n\t\t() => getFilteredListIds(listOptions, list, language),\r\n\t\t[list, language, listOptions]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t\talign='center'\r\n\t\t>\r\n\t\t\t<Selectors total={filteredListIds.length} />\r\n\t\t\t<ItemList filteredListIds={filteredListIds} />\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default Expenses;\r\n","import {\r\n\tExpenseItem,\r\n\tInterval,\r\n\tListOptions,\r\n\tValue,\r\n\tlanguage,\r\n} from 'settings/interfaces';\r\nimport { sortBy } from './utils';\r\nimport dayjs from 'dayjs';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\n\r\ndayjs.extend(isBetween);\r\n\r\nexport const getFilteredListIds = (\r\n\toptions: ListOptions,\r\n\tlist: { [key: string]: ExpenseItem },\r\n\tlanguage: language\r\n) => {\r\n\tconst { range, categoriesToFilterIds, sortingAlgorithm, isSortingReversed } =\r\n\t\toptions;\r\n\treturn sortBy(\r\n\t\tlist,\r\n\t\tObject.keys(list).filter(\r\n\t\t\t(key: string) =>\r\n\t\t\t\t!list[key].deleted &&\r\n\t\t\t\tlist[key].date >= range[0] &&\r\n\t\t\t\tlist[key].date <= range[1] &&\r\n\t\t\t\t(categoriesToFilterIds.length\r\n\t\t\t\t\t? categoriesToFilterIds.some(\r\n\t\t\t\t\t\t\t(id: string) => list[key].categoryId === id\r\n\t\t\t\t\t  )\r\n\t\t\t\t\t: true)\r\n\t\t),\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tlanguage\r\n\t);\r\n};\r\n\r\nexport const getListToShowOnCurrentPageIds = (\r\n\toptions: ListOptions,\r\n\tfilteredListIds: string[]\r\n) => {\r\n\tconst { currentPage, pageSize } = options;\r\n\tconst startIndex = (currentPage - 1) * pageSize;\r\n\tconst endIndex = startIndex + pageSize;\r\n\treturn filteredListIds.slice(startIndex, endIndex);\r\n};\r\n\r\nexport const getValuesForBarDiagram = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\tcurrency: string,\r\n\tmode: Interval,\r\n\tyear: number\r\n) => {\r\n\tif (mode === 'year') {\r\n\t\tconst result: { [key: number]: number } = {};\r\n\t\tObject.keys(list).forEach((key: string) => {\r\n\t\t\tconst resultKey: number = dayjs(list[key].date).year();\r\n\t\t\tif (result[resultKey] === undefined) {\r\n\t\t\t\tresult[resultKey] = list[key].price[currency];\r\n\t\t\t} else {\r\n\t\t\t\tresult[resultKey] += list[key].price[currency];\r\n\t\t\t}\r\n\t\t});\r\n\t\tfor (let year in result) {\r\n\t\t\tresult[year] = Math.round(result[year]);\r\n\t\t}\r\n\t\treturn result;\r\n\t} else if (mode === 'month') {\r\n\t\tconst result: number[] = new Array(12).fill(0);\r\n\t\tObject.keys(list).forEach((key: string) => {\r\n\t\t\tif (dayjs(list[key].date).year() === year) {\r\n\t\t\t\tconst index: number = dayjs(list[key].date).month();\r\n\t\t\t\tresult[index] += list[key].price[currency];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result.map((item: number) => Math.round(item));\r\n\t}\r\n\treturn [];\r\n};\r\n\r\nexport const getValuesForPieDiagram = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\trange: number[],\r\n\tcurrency: string\r\n) => {\r\n\tconst values: Value[] = [];\r\n\tObject.keys(list).forEach((key: string) => {\r\n\t\tif (list[key].date > range[0] && list[key].date < range[1]) {\r\n\t\t\tconst categoryKey: number = Object.keys(values).findIndex(\r\n\t\t\t\t(n: string) => values[Number(n)].categoryId === list[key].categoryId\r\n\t\t\t);\r\n\t\t\tif (categoryKey !== -1) {\r\n\t\t\t\tvalues[categoryKey].value += list[key].price[currency];\r\n\t\t\t} else {\r\n\t\t\t\tvalues.push({\r\n\t\t\t\t\tcategoryId: list[key].categoryId,\r\n\t\t\t\t\tvalue: list[key].price[currency],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn values.map((value: Value) => ({\r\n\t\t...value,\r\n\t\tvalue: Math.round(value.value),\r\n\t}));\r\n};\r\n\r\nexport const getTotalInCurrentRange = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\trange: number[],\r\n\tcurrency: string\r\n) =>\r\n\tMath.floor(\r\n\t\tObject.values(list).reduce((acc: number, item: ExpenseItem) => {\r\n\t\t\tif (item.date >= range[0] && item.date <= range[1]) {\r\n\t\t\t\treturn acc + item.price[currency];\r\n\t\t\t}\r\n\t\t\treturn acc;\r\n\t\t}, 0)\r\n\t);\r\n\r\nexport const getValuesByMonth = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\trange: number[]\r\n) => {\r\n\tconst values: number[] = [];\r\n\tconst end = dayjs(range[1]);\r\n\tlet startDate = dayjs(range[0]);\r\n\tlet endDate = dayjs(range[0]).add(1, 'month');\r\n\r\n\twhile (!endDate.isAfter(end, 'day')) {\r\n\t\tconst itemsInMonth = Object.values(list).filter(\r\n\t\t\t// eslint-disable-next-line\r\n\t\t\t(item: ExpenseItem) =>\r\n\t\t\t\titem.date > startDate.valueOf() && item.date < endDate.valueOf()\r\n\t\t);\r\n\t\tconst valueForMonth = itemsInMonth.reduce(\r\n\t\t\t(acc, item) => acc + item.price.USD,\r\n\t\t\t0\r\n\t\t);\r\n\t\tvalues.push(valueForMonth);\r\n\t\tstartDate = startDate.add(1, 'month');\r\n\t\tendDate = endDate.add(1, 'month');\r\n\t}\r\n\r\n\treturn values;\r\n};\r\n","import { ExpenseItem, Sort, language } from 'settings/interfaces';\r\n\r\nexport const getSymbolAndPrice = (currency: string, price?: number) => {\r\n\tlet result = '';\r\n\tif (currency === 'USD') result += '$';\r\n\tif (currency === 'EUR') result += '€';\r\n\tif (currency === 'RUB') result += '₽';\r\n\r\n\tconst formattedPrice = Math.round(price as number)\r\n\t\t?.toString()\r\n\t\t.split('')\r\n\t\t.reverse()\r\n\t\t.reduce(\r\n\t\t\t(acc: string[], symbol: string, index: number) =>\r\n\t\t\t\tindex % 3 === 0 && index !== 0\r\n\t\t\t\t\t? [...acc, symbol + ',']\r\n\t\t\t\t\t: [...acc, symbol],\r\n\t\t\t[]\r\n\t\t)\r\n\t\t.reverse()\r\n\t\t.join('');\r\n\r\n\treturn price === undefined ? result : result + formattedPrice;\r\n};\r\n\r\nexport const sortBy = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\tlistKeys: string[],\r\n\tsortingAlgorithm: Sort,\r\n\treversed: boolean,\r\n\tlanguage?: language\r\n) => {\r\n\tlet result: string[];\r\n\tswitch (sortingAlgorithm) {\r\n\t\tcase 'date':\r\n\t\t\tresult = listKeys.sort(\r\n\t\t\t\t(prev: string, next: string) =>\r\n\t\t\t\t\tlist[next].date.valueOf() - list[prev].date.valueOf()\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'title':\r\n\t\t\tresult = listKeys.sort((prev: string, next: string) =>\r\n\t\t\t\tlist[prev].title.localeCompare(list[next].title, language, {\r\n\t\t\t\t\tsensitivity: 'base',\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'price':\r\n\t\t\tresult = listKeys.sort(\r\n\t\t\t\t(prev: string, next: string) =>\r\n\t\t\t\t\tlist[next].price.USD - list[prev].price.USD\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tresult = listKeys;\r\n\t}\r\n\r\n\treturn reversed ? result.reverse() : result;\r\n};\r\n\r\nexport const convertToJpeg: (\r\n\tbase64String: string,\r\n\tquality: number\r\n) => Promise<string> = (base64String: string, quality: number) =>\r\n\tnew Promise((resolve) => {\r\n\t\tconst img = new Image();\r\n\t\timg.src = base64String;\r\n\t\timg.onload = () => {\r\n\t\t\tconst canvas = document.createElement('canvas');\r\n\t\t\tconst ctx = canvas.getContext('2d');\r\n\t\t\tcanvas.width = img.width;\r\n\t\t\tcanvas.height = img.height;\r\n\t\t\tctx?.drawImage(img, 0, 0);\r\n\t\t\tconst jpegBase64: string = canvas.toDataURL('image/jpeg', quality);\r\n\t\t\tresolve(jpegBase64);\r\n\t\t};\r\n\t});\r\n"],"names":["observer","_ref","remove","userOptions","optionsStore","isSmallScreen","userStore","_jsx","Tooltip","title","languages","delete","language","children","DeleteOutlined","onClick","style","scale","prices","rates","arguments","length","undefined","constants","baseCurrency","id","onChange","categories","categoryStore","Select","size","minInlineSize","value","suffixIcon","EditFilled","color","options","Object","keys","map","key","label","name","image","loading","setLoading","useState","handleChange","useCallback","info","file","status","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","originFileObj","url","ImgCrop","cropShape","rotationSlider","Upload","action","accept","listType","showUploadList","maxCount","Image","preview","src","width","borderRadius","LoadingOutlined","PlusOutlined","opened","initialItemId","toggleOpened","submitItem","currency","setCurrency","currencyRates","list","listStore","initialItem","useMemo","emptyItem","currentItem","setCurrentItem","handleTitleChange","event","target","prevItem","handleDateChange","date","valueOf","handleCategoryChange","categoryId","handlePriceChange","updatedItem","price","Number","calculatePrices","handleImageChange","convertToJpeg","then","useEffect","submitItemWithEnter","window","removeEventListener","TitleJSX","Input","required","type","onInput","PriceJSX","min","step","Math","round","CurrencyJSX","CurrencySelect","DateJSX","DatePicker","dayjs","minDate","startDate","maxDate","CategoryJSX","CategorySelect","ImageJSX","ImageUpload","Modal","open","okButtonProps","cancelButtonProps","onOk","onCancel","okText","CheckOutlined","cancelText","CloseOutlined","_jsxs","Form","layout","inlineSize","Item","Row","Col","span","dateAndCat","mode","replaceItem","setLastDeletedItemIds","lastDeletedItemIds","isModalOpened","setIsModalOpened","toggleIsModalOpened","prevValue","updateCurrentItem","item","JSON","stringify","newItem","updatedAt","deleteItem","Flex","justify","opacity","Typography","Text","strong","ellipsis","noTitle","Title","level","margin","ImageAndDateJSX","align","placement","blockSize","objectFit","Avatar","icon","noImage","FrownOutlined","Statistic","format","vertical","Tag","filter","getSymbolAndPrice","DeleteJSX","DeleteButton","EditJSX","edit","EditOutlined","ActionsJSX","tooltipTitle","_Fragment","concat","createdAt","TooltipJSX","InfoCircleOutlined","ItemModal","Card","extra","bordered","actions","gap","disabled","reset","Button","ReloadOutlined","SliderDiagram","defaultRange","valuesByMonth","getValuesByMonth","data","labels","Array","fill","datasets","Line","plugins","legend","display","tooltip","enabled","scales","x","grid","y","elements","point","radius","line","cubicInterpolationMode","borderColor","aspectRatio","memo","Chart","register","LineElement","LineController","CategoryScale","LinearScale","PointElement","minMax","YearSlider","range","setRange","isAccurate","setIsAccurate","setDefaultRange","setValue","sliderRange","dates","values","max","marks","start","startOf","end","endOf","currentDate","isBefore","isSame","month","add","handleRangeChanging","diff","Segmented","defaultValue","TooltipAntd","byMonth","ZoomOutOutlined","byDay","ZoomInOutlined","Slider","dots","formatter","onChangeComplete","delay","debouncedValue","setDebouncedValue","timerId","setTimeout","clearTimeout","ItemList","filteredListIds","listOptions","debouncedOptions","useDebounce","listToShowOnCurrentPageIds","getListToShowOnCurrentPageIds","includes","LargeSpin","List","ListItem","Space","wrap","justifyContent","Empty","PRESENTED_IMAGE_SIMPLE","description","addItem","addNewItem","handleCategoriesToFilterChange","categoriesSelect","showSearch","tagRender","props","onClose","onMouseDown","preventDefault","stopPropagation","closable","marginInlineEnd","categoriesToFilterIds","setIsSortingReversed","handleSortAlgorithmChanging","alignSelf","sort","reverse","isSortingReversed","SortDescendingOutlined","SortAscendingOutlined","sortingAlgorithm","byDate","CalendarOutlined","byTitle","FontColorsOutlined","byPrice","DollarOutlined","handleModeChanging","MenuOutlined","TableOutlined","Selectors","total","resetListOptions","resetSettings","handlePageChanging","pageSize","currentPage","isSettingsChanged","defaultPageSize","NewItemButton","CategoriesSelect","SortSelect","ModeSelect","ResetButton","Divider","Pagination","showSizeChanger","pageSizeOptions","current","onShowSizeChange","Expenses","getFilteredListIds","isBetween","sortBy","deleted","some","startIndex","endIndex","slice","getValuesForBarDiagram","year","forEach","resultKey","index","getValuesForPieDiagram","categoryKey","findIndex","n","push","getTotalInCurrentRange","floor","reduce","acc","endDate","isAfter","valueForMonth","USD","_Math$round","formattedPrice","toString","split","symbol","join","listKeys","reversed","prev","next","localeCompare","sensitivity","base64String","quality","Promise","resolve","onload","canvas","document","createElement","ctx","getContext","height","drawImage","jpegBase64","toDataURL"],"sourceRoot":""}