{"version":3,"file":"static/js/12.1304a5a7.chunk.js","mappings":"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","sources":["hooks/useDebounce.ts","components/CategoryItem.tsx","components/CategoryList.tsx","components/AddCategory.tsx","pages/Categories.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useDebounce = (value: any, delay: number = 250) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const timerId = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport useDebounce from '../hooks/useDebounce';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Button, Card, ColorPicker, Flex, Progress, Typography } from 'antd';\r\nimport { Color } from 'antd/es/color-picker';\r\nimport Title from 'antd/es/typography/Title';\r\nimport { CloseOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport constants from 'settings/constants';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tinitialCategory: category;\r\n}\r\n\r\nconst CategoryItem: React.FC<Props> = observer(({ initialCategory }) => {\r\n\tconst { id, color, name } = initialCategory;\r\n\tconst { replaceCategory, removeCategory } = categoryStore;\r\n\tconst { refreshItemByCategory, clearListFromCategory } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst [isCategoryItemDeleting, setIsCategoryItemDeleting] =\r\n\t\tuseState<boolean>(false);\r\n\tconst [deleteValue, setDeleteValue] = useState<number>(0);\r\n\r\n\tconst [currentCategory, setCurrentCategory] = useState<category>({\r\n\t\tid: id,\r\n\t\tcolor: color,\r\n\t\tname: name,\r\n\t});\r\n\r\n\tconst deleteCategory = useCallback(() => {\r\n\t\tremoveCategory(currentCategory);\r\n\t\tclearListFromCategory(currentCategory);\r\n\t}, [currentCategory, removeCategory, clearListFromCategory]);\r\n\r\n\tconst startCategoryItemDeleting = useCallback(() => {\r\n\t\tsetIsCategoryItemDeleting(true);\r\n\t}, [setIsCategoryItemDeleting]);\r\n\r\n\tconst cancelCategoryItemDeleting = useCallback(() => {\r\n\t\tsetIsCategoryItemDeleting(false);\r\n\t}, [setIsCategoryItemDeleting]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst deleteId = setInterval(() => {\r\n\t\t\tsetDeleteValue((prevValue: number) => {\r\n\t\t\t\tconst newValue = prevValue + 10;\r\n\t\t\t\tif (newValue >= constants.deleteDelay && isCategoryItemDeleting) {\r\n\t\t\t\t\tdeleteCategory();\r\n\t\t\t\t}\r\n\t\t\t\treturn newValue;\r\n\t\t\t});\r\n\t\t}, 10);\r\n\t\tif (!isCategoryItemDeleting) {\r\n\t\t\tclearInterval(deleteId);\r\n\t\t\tsetDeleteValue(0);\r\n\t\t}\r\n\t\treturn () => clearInterval(deleteId);\r\n\t}, [isCategoryItemDeleting, deleteCategory]);\r\n\r\n\tconst handleNameChange = useCallback((value: string) => {\r\n\t\tsetCurrentCategory((prevCategory) => ({\r\n\t\t\t...prevCategory,\r\n\t\t\tname: value,\r\n\t\t}));\r\n\t}, []);\r\n\r\n\tconst handleColorChange = useCallback((value: Color) => {\r\n\t\tsetCurrentCategory((prevCategory) => ({\r\n\t\t\t...prevCategory,\r\n\t\t\tcolor: `#${value.toHex()}`,\r\n\t\t}));\r\n\t}, []);\r\n\r\n\tconst debouncedCategory = useDebounce(currentCategory);\r\n\r\n\tuseEffect(() => {\r\n\t\treplaceCategory(debouncedCategory);\r\n\t\trefreshItemByCategory(debouncedCategory);\r\n\t}, [debouncedCategory, replaceCategory, refreshItemByCategory]);\r\n\r\n\tconst ColorPickerJSX = (\r\n\t\t<ColorPicker\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tvalue={currentCategory.color}\r\n\t\t\tformat='hex'\r\n\t\t\tonChange={handleColorChange}\r\n\t\t/>\r\n\t);\r\n\r\n\tconst TitleJSX = (\r\n\t\t<Flex justify='center'>\r\n\t\t\t{isSmallScreen ? (\r\n\t\t\t\t<Typography.Text\r\n\t\t\t\t\tstrong\r\n\t\t\t\t\teditable={{ onChange: handleNameChange }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentCategory.name}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t) : (\r\n\t\t\t\t<Title\r\n\t\t\t\t\tlevel={isSmallScreen ? 5 : 3}\r\n\t\t\t\t\teditable={{ onChange: handleNameChange }}\r\n\t\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentCategory.name}\r\n\t\t\t\t</Title>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst DeleteButtonJSX = (\r\n\t\t<Button\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tonClick={\r\n\t\t\t\tisCategoryItemDeleting\r\n\t\t\t\t\t? cancelCategoryItemDeleting\r\n\t\t\t\t\t: startCategoryItemDeleting\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{isCategoryItemDeleting ? <CloseOutlined /> : <DeleteOutlined />}\r\n\t\t</Button>\r\n\t);\r\n\r\n\tconst ProgressJSX = (\r\n\t\t<Progress\r\n\t\t\tshowInfo={false}\r\n\t\t\tpercent={(deleteValue / constants.deleteDelay) * 100}\r\n\t\t\tstatus='exception'\r\n\t\t/>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Card\r\n\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\ttitle={isCategoryItemDeleting ? ProgressJSX : TitleJSX}\r\n\t\t\tactions={[ColorPickerJSX, DeleteButtonJSX]}\r\n\t\t\tstyles={{\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\tpadding: 10,\r\n\t\t\t\t},\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tpadding: 0,\r\n\t\t\t\t},\r\n\t\t\t}}\r\n\t\t></Card>\r\n\t);\r\n});\r\n\r\nexport default CategoryItem;\r\n","import React, { memo, useEffect, useMemo, useState } from 'react';\r\nimport CategoryItem from './CategoryItem';\r\nimport { category } from '../settings/interfaces';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Col, Flex, Row, Spin } from 'antd';\r\nimport { userStore } from 'utils/userStore';\r\n\r\nconst CategoryList: React.FC = observer(() => {\r\n\tconst { categories, loading } = categoryStore;\r\n\tconst { width } = userStore;\r\n\r\n\tconst [colNumber, setColNumber] = useState<number>(4);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (width < 300) {\r\n\t\t\tsetColNumber(1);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (width < 400) {\r\n\t\t\tsetColNumber(2);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (width < 600) {\r\n\t\t\tsetColNumber(3);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetColNumber(4);\r\n\t}, [setColNumber, width]);\r\n\r\n\tconst splittedCategories = useMemo(() => {\r\n\t\tconst result: category[][] = [];\r\n\t\tlet row = -1;\r\n\r\n\t\tcategories\r\n\t\t\t.slice(1)\r\n\t\t\t.reverse()\r\n\t\t\t.forEach((item: category, col: number) => {\r\n\t\t\t\tif (col % colNumber === 0) {\r\n\t\t\t\t\trow++;\r\n\t\t\t\t\tresult.push([]);\r\n\t\t\t\t}\r\n\t\t\t\tresult[row].push(item);\r\n\t\t\t});\r\n\r\n\t\treturn result;\r\n\t}, [colNumber, categories]);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<Spin />\r\n\t\t\t) : (\r\n\t\t\t\tsplittedCategories.map((categories: category[]) => (\r\n\t\t\t\t\t<Row\r\n\t\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t\t\tkey={categories[0].id}\r\n\t\t\t\t\t\tgutter={16}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{categories.map((category: category) => (\r\n\t\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\t\tkey={category.id}\r\n\t\t\t\t\t\t\t\tspan={24 / colNumber}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<CategoryItem initialCategory={category} />\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t))\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default memo(CategoryList);\r\n","import React, { useCallback, useState } from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport constants from 'settings/constants';\r\nimport ColorPicker, { Color } from 'antd/es/color-picker';\r\nimport { Button, Flex, Input } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\n\r\nconst AddCategory: React.FC = observer(() => {\r\n\tconst { addCategory } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\tconst [currentCategory, setCurrentCategory] = useState<category>({\r\n\t\t...constants.defaultCategory,\r\n\t\tid: Math.random(),\r\n\t});\r\n\r\n\tconst handleNameChange = useCallback(\r\n\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\tconst { value } = event.target;\r\n\t\t\tsetCurrentCategory((prevCategory) => ({\r\n\t\t\t\t...prevCategory,\r\n\t\t\t\tname: value,\r\n\t\t\t}));\r\n\t\t},\r\n\t\t[setCurrentCategory]\r\n\t);\r\n\r\n\tconst handleColorChange = useCallback(\r\n\t\t(value: Color) => {\r\n\t\t\tsetCurrentCategory((prevCategory) => ({\r\n\t\t\t\t...prevCategory,\r\n\t\t\t\tcolor: `#${value.toHex()}`,\r\n\t\t\t}));\r\n\t\t},\r\n\t\t[setCurrentCategory]\r\n\t);\r\n\r\n\tconst clearCurrentCategory = useCallback(() => {\r\n\t\tsetCurrentCategory({ ...constants.defaultCategory, id: Math.random() });\r\n\t}, [setCurrentCategory]);\r\n\r\n\tconst addCurrentCategory = useCallback(() => {\r\n\t\taddCategory(currentCategory);\r\n\t\tclearCurrentCategory();\r\n\t}, [currentCategory, addCategory, clearCurrentCategory]);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={32}\r\n\t\t\tstyle={{ inlineSize: 'min(100%, 560px)', margin: 'auto' }}\r\n\t\t>\r\n\t\t\t<ColorPicker\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={currentCategory.color}\r\n\t\t\t\tformat='hex'\r\n\t\t\t\tonChange={handleColorChange}\r\n\t\t\t/>\r\n\t\t\t<Input\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={currentCategory.name}\r\n\t\t\t\tonChange={handleNameChange}\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={addCurrentCategory}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<CheckOutlined />\r\n\t\t\t</Button>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\nimport CategoryList from '../components/CategoryList';\r\nimport AddCategory from '../components/AddCategory';\r\nimport { Divider, Flex } from 'antd';\r\n\r\nconst Categories: React.FC = () => (\r\n\t<Flex\r\n\t\tvertical\r\n\t\talign='center'\r\n\t\tgap={16}\r\n\t>\r\n\t\t<AddCategory />\r\n\t\t<Divider />\r\n\t\t<CategoryList />\r\n\t</Flex>\r\n);\r\n\r\nexport default Categories;\r\n"],"names":["value","delay","arguments","length","undefined","debouncedValue","setDebouncedValue","useState","useEffect","timerId","setTimeout","clearTimeout","observer","_ref","initialCategory","id","color","name","replaceCategory","removeCategory","categoryStore","refreshItemByCategory","clearListFromCategory","listStore","isSmallScreen","userStore","isCategoryItemDeleting","setIsCategoryItemDeleting","deleteValue","setDeleteValue","currentCategory","setCurrentCategory","deleteCategory","useCallback","startCategoryItemDeleting","cancelCategoryItemDeleting","deleteId","setInterval","prevValue","newValue","constants","deleteDelay","clearInterval","handleNameChange","prevCategory","handleColorChange","concat","toHex","debouncedCategory","useDebounce","ColorPickerJSX","_jsx","ColorPicker","size","format","onChange","TitleJSX","Flex","justify","children","Typography","Text","strong","editable","Title","level","style","margin","DeleteButtonJSX","Button","onClick","CloseOutlined","DeleteOutlined","ProgressJSX","Progress","showInfo","percent","status","Card","title","actions","styles","padding","body","CategoryList","categories","loading","width","colNumber","setColNumber","splittedCategories","useMemo","result","row","slice","reverse","forEach","item","col","push","inlineSize","vertical","gap","Spin","map","Row","gutter","category","Col","span","CategoryItem","memo","addCategory","defaultCategory","Math","random","event","target","clearCurrentCategory","addCurrentCategory","_jsxs","Input","type","CheckOutlined","Categories","align","AddCategory","Divider"],"sourceRoot":""}