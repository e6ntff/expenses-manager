{"version":3,"file":"static/js/781.8935f66a.chunk.js","mappings":"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","sources":["components/DeleteButton.tsx","components/ResetButton.tsx","components/SliderDiagram.tsx","components/YearSlider.tsx","utils/calculatePrices.ts","components/CategorySelect.tsx","components/ItemModal.tsx","components/ListItem.tsx","hooks/useDebounce.ts","components/ItemList.tsx","components/NewItemButton.tsx","components/CategoriesSelect.tsx","components/SortSelect.tsx","components/ModeSelect.tsx","components/Selectors.tsx","pages/Expenses.tsx","utils/transformData.ts","utils/utils.ts"],"sourcesContent":["import { DeleteOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tremove: () => void;\r\n}\r\n\r\nconst DeleteButton: React.FC<Props> = observer(({ remove }) => {\r\n\tconst { userOptions } = optionsStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.delete[userOptions.language]}>\r\n\t\t\t<DeleteOutlined\r\n\t\t\t\tonClick={remove}\r\n\t\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default DeleteButton;\r\n","import { ReloadOutlined } from '@ant-design/icons';\r\nimport { Button, Tooltip } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tdisabled?: boolean;\r\n\treset: () => void;\r\n}\r\n\r\nconst ResetButton: React.FC<Props> = observer(({ disabled, reset }) => {\r\n\tconst { userOptions } = optionsStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.reset[userOptions.language]}>\r\n\t\t\t<Button\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t\tonClick={reset}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<ReloadOutlined />\r\n\t\t\t</Button>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default ResetButton;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { memo, useMemo } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { getValuesByMonth } from 'utils/transformData';\r\n\r\nconst SliderDiagram: React.FC = observer(() => {\r\n\tconst { list } = listStore;\r\n\tconst { defaultRange } = optionsStore;\r\n\r\n\tconst valuesByMonth: number[] | { [key: string]: number } = useMemo(\r\n\t\t() => getValuesByMonth(list, defaultRange),\r\n\t\t[list, defaultRange]\r\n\t);\r\n\r\n\tconst data = {\r\n\t\tlabels: new Array(valuesByMonth.length).fill(''),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tdata: valuesByMonth,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tx: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\ty: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\telements: {\r\n\t\t\tpoint: {\r\n\t\t\t\tradius: 0,\r\n\t\t\t},\r\n\t\t\tline: {\r\n\t\t\t\tcubicInterpolationMode: 'monotone' as 'monotone',\r\n\t\t\t\tborderColor: '#7775',\r\n\t\t\t},\r\n\t\t},\r\n\t\taspectRatio: 25,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Line\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\tdata={data}\r\n\t\t\toptions={options}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default memo(SliderDiagram);\r\n","import React, { memo, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Slider, Tooltip as TooltipAntd } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport { ExpenseItem } from 'settings/interfaces';\r\nimport dayjs from 'dayjs';\r\nimport minMax from 'dayjs/plugin/minMax';\r\nimport { ZoomInOutlined, ZoomOutOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport {\r\n\tChart,\r\n\tTooltip,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tLineElement,\r\n\tLineController,\r\n\tPointElement,\r\n} from 'chart.js';\r\nimport SliderDiagram from './SliderDiagram';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\nChart.register(\r\n\tTooltip,\r\n\tLineElement,\r\n\tLineController,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tPointElement\r\n);\r\n\r\ndayjs.extend(minMax);\r\n\r\ninterface Props {\r\n\trange: number[];\r\n\tsetRange: (arg0: number[]) => void;\r\n\tisAccurate: boolean;\r\n\tsetIsAccurate: (arg0: boolean) => void;\r\n}\r\n\r\nconst YearSlider: React.FC<Props> = observer(\r\n\t({ range, setRange, isAccurate, setIsAccurate }) => {\r\n\t\tconst { list } = listStore;\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { defaultRange, setDefaultRange, userOptions } = optionsStore;\r\n\r\n\t\tconst [value, setValue] = useState(defaultRange);\r\n\r\n\t\tconst sliderRange: [number, number] = useMemo(() => {\r\n\t\t\tconst dates = Object.values(list).map((item: ExpenseItem) => item.date);\r\n\t\t\treturn [Math.min(...dates), Math.max(...dates)];\r\n\t\t}, [list]);\r\n\r\n\t\tconst marks: { [key: number]: string } = useMemo(() => {\r\n\t\t\tconst start = dayjs(sliderRange[0]).startOf('day');\r\n\t\t\tconst end = dayjs(sliderRange[1]).endOf('day');\r\n\t\t\tconst marks: { [key: number]: string } = {};\r\n\t\t\tlet currentDate = start;\r\n\t\t\tif (isAccurate) {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'day')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.date() === 1\r\n\t\t\t\t\t\t\t? currentDate.month() === 0\r\n\t\t\t\t\t\t\t\t? currentDate.format('YYYY')\r\n\t\t\t\t\t\t\t\t: currentDate.format('M')\r\n\t\t\t\t\t\t\t: ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'day').startOf('day');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'month')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.month() === 0 ? currentDate.format('YYYY') : ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'month').startOf('month');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn marks;\r\n\t\t}, [sliderRange, isAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetDefaultRange(sliderRange);\r\n\t\t}, [sliderRange, setDefaultRange]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetRange(defaultRange);\r\n\t\t}, [defaultRange, setRange]);\r\n\r\n\t\tconst handleRangeChanging = useCallback(\r\n\t\t\t(values: number[]) => {\r\n\t\t\t\tsetRange(values);\r\n\t\t\t},\r\n\t\t\t[setRange]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetValue(range);\r\n\t\t}, [range]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tisSmallScreen && setIsAccurate(false);\r\n\t\t}, [isSmallScreen, setIsAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\t!isAccurate &&\r\n\t\t\t\tsetRange([\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.max([\r\n\t\t\t\t\t\t\tdayjs(range[0]).startOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[0]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.min([\r\n\t\t\t\t\t\t\tdayjs(range[1]).endOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[1]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t]);\r\n\t\t\t// eslint-disable-next-line\r\n\t\t}, [isAccurate]);\r\n\r\n\t\treturn dayjs(defaultRange[1]).diff(dayjs(defaultRange[0]), 'hours') >=\r\n\t\t\t48 ? (\r\n\t\t\t<Flex\r\n\t\t\t\tgap={16}\r\n\t\t\t\talign='center'\r\n\t\t\t>\r\n\t\t\t\t<Segmented\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tdefaultValue={isAccurate}\r\n\t\t\t\t\tvalue={isAccurate}\r\n\t\t\t\t\tonChange={setIsAccurate}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t\t<TooltipAntd title={languages.byMonth[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t\t<ZoomOutOutlined />\r\n\t\t\t\t\t\t\t\t</TooltipAntd>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tvalue: false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t\t<TooltipAntd title={languages.byDay[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t\t<ZoomInOutlined />\r\n\t\t\t\t\t\t\t\t</TooltipAntd>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t\tdisabled: isSmallScreen,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\talign='stretch'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<SliderDiagram />\r\n\t\t\t\t\t<Slider\r\n\t\t\t\t\t\trange\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tmarks={marks}\r\n\t\t\t\t\t\tstep={null}\r\n\t\t\t\t\t\tdots={true}\r\n\t\t\t\t\t\ttooltip={{\r\n\t\t\t\t\t\t\tformatter: (value: number | undefined) => (\r\n\t\t\t\t\t\t\t\t<>{dayjs(value).format(isAccurate ? 'DD.MM.YY' : 'MM.YY')}</>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tmin={sliderRange[0]}\r\n\t\t\t\t\t\tmax={sliderRange[1]}\r\n\t\t\t\t\t\tdefaultValue={defaultRange}\r\n\t\t\t\t\t\tonChange={setValue}\r\n\t\t\t\t\t\tonChangeComplete={handleRangeChanging}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Flex>\r\n\t\t) : (\r\n\t\t\t<></>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default memo(YearSlider);\r\n","import constants from '../settings/constants';\r\nimport { currencies, rates } from '../settings/interfaces';\r\n\r\nconst calculatePrices = (\r\n\tprices: currencies,\r\n\trates: rates,\r\n\tcurrency: string = constants.baseCurrency\r\n) => {\r\n\tswitch (currency) {\r\n\t\tcase 'USD':\r\n\t\t\tprices['EUR'] = prices['USD'] * rates['EUR'];\r\n\t\t\tprices['RUB'] = prices['USD'] * rates['RUB'];\r\n\t\t\tbreak;\r\n\t\tcase 'EUR':\r\n\t\t\tprices['USD'] = prices['EUR'] / rates['EUR'];\r\n\t\t\tprices['RUB'] = (prices['EUR'] * rates['RUB']) / rates['EUR'];\r\n\t\t\tbreak;\r\n\t\tcase 'RUB':\r\n\t\t\tprices['EUR'] = (prices['RUB'] / rates['RUB']) * rates['EUR'];\r\n\t\t\tprices['USD'] = prices['RUB'] / rates['RUB'];\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t}\r\n\r\n\treturn prices;\r\n};\r\n\r\nexport default calculatePrices;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select } from 'antd';\r\nimport { EditFilled } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tid: string;\r\n\tonChange: (arg0: string) => void;\r\n}\r\n\r\nconst CategorySelect: React.FC<Props> = observer(({ id, onChange }) => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tstyle={{ minInlineSize: '7em' }}\r\n\t\t\tonChange={onChange}\r\n\t\t\tvalue={id}\r\n\t\t\tsuffixIcon={<EditFilled style={{ color: categories[id].color }} />}\r\n\t\t\toptions={Object.keys(categories).map((key: string) => ({\r\n\t\t\t\tlabel: categories[key].name,\r\n\t\t\t\tvalue: key,\r\n\t\t\t}))}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default CategorySelect;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport calculatePrices from '../utils/calculatePrices';\r\nimport { ExpenseItem } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport languages from 'settings/languages';\r\nimport { Col, DatePicker, Form, Input, Modal, Row } from 'antd';\r\nimport CurrencySelect from 'components/CurrencySelect';\r\nimport constants from 'settings/constants';\r\nimport dayjs from 'dayjs';\r\nimport CategorySelect from './CategorySelect';\r\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { listStore } from 'utils/listStore';\r\n\r\ninterface Props {\r\n\topened: boolean;\r\n\tinitialItemId?: string;\r\n\ttoggleOpened: () => void;\r\n\tsubmitItem: (arg0: ExpenseItem) => void;\r\n}\r\n\r\nconst ItemModal: React.FC<Props> = observer(\r\n\t({ opened, initialItemId, toggleOpened, submitItem }) => {\r\n\t\tconst [currency, setCurrency] = useState(constants.baseCurrency);\r\n\t\tconst { currencyRates, isSmallScreen } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\t\tconst { list } = listStore;\r\n\r\n\t\tconst { language } = userOptions;\r\n\r\n\t\tconst initialItem = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tinitialItemId !== undefined ? list[initialItemId] : constants.emptyItem,\r\n\t\t\t[list, initialItemId]\r\n\t\t);\r\n\r\n\t\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(initialItem);\r\n\r\n\t\tconst handleTitleChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\ttitle: value,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleDateChange = useCallback(\r\n\t\t\t(value: dayjs.Dayjs) => {\r\n\t\t\t\tif (value)\r\n\t\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tdate: value.valueOf(),\r\n\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleCategoryChange = useCallback(\r\n\t\t\t(id: string) => {\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\tcategoryId: id,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handlePriceChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem) => {\r\n\t\t\t\t\tconst updatedItem = {\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tprice: {\r\n\t\t\t\t\t\t\t...prevItem.price,\r\n\t\t\t\t\t\t\t[currency]: Number(value),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...updatedItem,\r\n\t\t\t\t\t\tprice: calculatePrices(updatedItem.price, currencyRates, currency),\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentItem, currency, currencyRates]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tconst submitItemWithEnter = (event: KeyboardEvent) => {\r\n\t\t\t\tif (event.key === 'Enter' && opened) {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\twindow.addEventListener('keyup', submitItemWithEnter);\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t};\r\n\t\t}, [currentItem, submitItem, opened]);\r\n\r\n\t\tconst TitleJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={currentItem.title}\r\n\t\t\t\tonInput={handleTitleChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst PriceJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='number'\r\n\t\t\t\tmin='1'\r\n\t\t\t\tstep='1'\r\n\t\t\t\tvalue={Math.round(currentItem.price[currency])}\r\n\t\t\t\tonInput={handlePriceChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CurrencyJSX = (\r\n\t\t\t<CurrencySelect\r\n\t\t\t\tvalue={currency}\r\n\t\t\t\tsetCurrency={setCurrency}\r\n\t\t\t\tonChange={setCurrency}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst DateJSX = (\r\n\t\t\t<DatePicker\r\n\t\t\t\trequired\r\n\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\tvalue={dayjs(currentItem.date)}\r\n\t\t\t\tminDate={constants.startDate}\r\n\t\t\t\tmaxDate={dayjs()}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CategoryJSX = (\r\n\t\t\t<CategorySelect\r\n\t\t\t\tid={currentItem.categoryId}\r\n\t\t\t\tonChange={handleCategoryChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\topen={opened}\r\n\t\t\t\tokButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tcancelButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tonOk={() => {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t}}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetCurrentItem(initialItem);\r\n\t\t\t\t\ttoggleOpened();\r\n\t\t\t\t}}\r\n\t\t\t\tokText={<CheckOutlined />}\r\n\t\t\t\tcancelText={<CloseOutlined />}\r\n\t\t\t>\r\n\t\t\t\t<Form\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tlayout='vertical'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Form.Item label={languages.title[language]}>{TitleJSX}</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.price[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={16}>{PriceJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={7}>{CurrencyJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.dateAndCat[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={10}>{DateJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={13}>{CategoryJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default ItemModal;\r\n","import React, { useState, useCallback, useMemo } from 'react';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport { ExpenseItem, Mode } from '../settings/interfaces';\r\nimport Item from 'antd/es/list/Item';\r\nimport { Card, Col, Flex, Statistic, Tag, Tooltip, Typography } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport Title from 'antd/es/typography/Title';\r\nimport { EditOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\nimport ItemModal from './ItemModal';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport dayjs from 'dayjs';\r\nimport DeleteButton from './DeleteButton';\r\n\r\ninterface Props {\r\n\tmode: Mode;\r\n\tinitialItemId: string;\r\n}\r\n\r\nconst ListItem: React.FC<Props> = observer(({ mode, initialItemId }) => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { replaceItem, list, setLastDeletedItemId } = listStore;\r\n\tconst { userOptions } = optionsStore;\r\n\tconst { categories } = categoryStore;\r\n\r\n\tconst { currency, language } = userOptions;\r\n\r\n\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(\r\n\t\tlist[initialItemId]\r\n\t);\r\n\r\n\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t}, [setIsModalOpened]);\r\n\r\n\tconst updateCurrentItem = useCallback(\r\n\t\t(item: ExpenseItem) => {\r\n\t\t\tsetCurrentItem((prevItem: ExpenseItem) => {\r\n\t\t\t\tif (JSON.stringify(prevItem) !== JSON.stringify(item)) {\r\n\t\t\t\t\tconst newItem: ExpenseItem = {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tupdatedAt: dayjs().valueOf(),\r\n\t\t\t\t\t};\r\n\t\t\t\t\treplaceItem(initialItemId, newItem);\r\n\t\t\t\t\treturn newItem;\r\n\t\t\t\t}\r\n\t\t\t\treturn prevItem;\r\n\t\t\t});\r\n\t\t\ttoggleIsModalOpened();\r\n\t\t},\r\n\t\t[setCurrentItem, replaceItem, toggleIsModalOpened, initialItemId]\r\n\t);\r\n\r\n\tconst deleteItem = useCallback(() => {\r\n\t\tsetLastDeletedItemId(initialItemId);\r\n\t}, [setLastDeletedItemId, initialItemId]);\r\n\r\n\tconst TitleJSX = (\r\n\t\t<Flex\r\n\t\t\tjustify='center'\r\n\t\t\tstyle={{\r\n\t\t\t\topacity: !currentItem.title ? '.5' : '1',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{isSmallScreen ? (\r\n\t\t\t\t<Typography.Text\r\n\t\t\t\t\tstrong\r\n\t\t\t\t\tellipsis\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentItem.title || languages.noTitle[language]}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t) : (\r\n\t\t\t\t<Title\r\n\t\t\t\t\tellipsis\r\n\t\t\t\t\tlevel={3}\r\n\t\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentItem.title || languages.noTitle[language]}\r\n\t\t\t\t</Title>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst DateJSX = (\r\n\t\t<Statistic\r\n\t\t\tvalue={dayjs(currentItem.date).format('DD.MM.YY')}\r\n\t\t\tstyle={{\r\n\t\t\t\tscale: isSmallScreen ? '.75' : '1',\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n\r\n\tconst CategoryJSX = (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\talign='stretch'\r\n\t\t>\r\n\t\t\t<Tag color={categories[currentItem.categoryId].color}>\r\n\t\t\t\t<span\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmargin: 'auto',\r\n\t\t\t\t\t\tcolor: categories[currentItem.categoryId].color,\r\n\t\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{categories[currentItem.categoryId].name}\r\n\t\t\t\t</span>\r\n\t\t\t</Tag>\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst PriceJSX = (\r\n\t\t<Flex justify='center'>\r\n\t\t\t{isSmallScreen ? (\r\n\t\t\t\t<Typography.Text strong>\r\n\t\t\t\t\t{getSymbolAndPrice(currency)}\r\n\t\t\t\t\t{Math.round(currentItem.price[currency])}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t) : (\r\n\t\t\t\t<Title\r\n\t\t\t\t\tlevel={3}\r\n\t\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{getSymbolAndPrice(currency, currentItem.price[currency])}\r\n\t\t\t\t</Title>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst DeleteJSX = <DeleteButton remove={deleteItem} />;\r\n\r\n\tconst EditJSX = (\r\n\t\t<Tooltip title={languages.edit[language]}>\r\n\t\t\t<EditOutlined\r\n\t\t\t\tonClick={toggleIsModalOpened}\r\n\t\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n\r\n\tconst ActionsJSX = (\r\n\t\t<Flex justify='space-evenly'>\r\n\t\t\t{EditJSX}\r\n\t\t\t{PriceJSX}\r\n\t\t\t{DeleteJSX}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst tooltipTitle = useMemo(() => {\r\n\t\tif (!currentItem.updatedAt) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{`${languages.createdAt[language]} ${dayjs(\r\n\t\t\t\t\t\tcurrentItem.createdAt\r\n\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{`${languages.createdAt[language]} ${dayjs(\r\n\t\t\t\t\t\tcurrentItem.createdAt\r\n\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t{`${languages.updatedAt[language]} ${dayjs(\r\n\t\t\t\t\t\tcurrentItem.updatedAt\r\n\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t}, [currentItem, language]);\r\n\r\n\tconst TooltipJSX = (\r\n\t\t<Tooltip title={tooltipTitle}>\r\n\t\t\t<InfoCircleOutlined\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tscale: isSmallScreen ? '1' : '1.5',\r\n\t\t\t\t\topacity: mode === 'grid' ? '.45' : '1',\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ItemModal\r\n\t\t\t\topened={isModalOpened}\r\n\t\t\t\tinitialItemId={initialItemId}\r\n\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\tsubmitItem={updateCurrentItem}\r\n\t\t\t/>\r\n\t\t\t{mode === 'list' ? (\r\n\t\t\t\t<Item>\r\n\t\t\t\t\t<Col>{DateJSX}</Col>\r\n\t\t\t\t\t<Col span={9}>{TitleJSX}</Col>\r\n\t\t\t\t\t<Col span={3}>{CategoryJSX}</Col>\r\n\t\t\t\t\t<Col span={5}>{PriceJSX}</Col>\r\n\t\t\t\t\t<Col>{EditJSX}</Col>\r\n\t\t\t\t\t<Col>{DeleteJSX}</Col>\r\n\t\t\t\t\t<Col>{TooltipJSX}</Col>\r\n\t\t\t\t</Item>\r\n\t\t\t) : (\r\n\t\t\t\t<Card\r\n\t\t\t\t\textra={[TooltipJSX]}\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\tbordered\r\n\t\t\t\t\ttitle={TitleJSX}\r\n\t\t\t\t\tactions={[ActionsJSX]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Flex justify='center'>\r\n\t\t\t\t\t\t<Flex\r\n\t\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\t\talign='stretch'\r\n\t\t\t\t\t\t\tgap={4}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{DateJSX}\r\n\t\t\t\t\t\t\t{CategoryJSX}\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Card>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default ListItem;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useDebounce = (value: any, delay: number = 250) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const timerId = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce\r\n","import React, { memo, useEffect, useMemo, useState } from 'react';\r\nimport ListItem from './ListItem';\r\nimport { ListOptions } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Col, Empty, List, Row } from 'antd';\r\nimport { getListToShowOnCurrentPageIds } from 'utils/transformData';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport LargeSpin from './LargeSpin';\r\nimport { listStore } from 'utils/listStore';\r\n\r\ninterface Props {\r\n\tfilteredListIds: string[];\r\n}\r\n\r\nconst ItemList: React.FC<Props> = observer(({ filteredListIds }) => {\r\n\tconst { width, loading } = userStore;\r\n\tconst { listOptions } = optionsStore;\r\n\tconst { lastDeletedItemId } = listStore;\r\n\r\n\tconst debouncedOptions: ListOptions = useDebounce(listOptions);\r\n\r\n\tconst [colNumber, setColNumber] = useState<number>(4);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (width < 350) {\r\n\t\t\tsetColNumber(1);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (width < 450) {\r\n\t\t\tsetColNumber(2);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (width < 850) {\r\n\t\t\tsetColNumber(3);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetColNumber(4);\r\n\t}, [setColNumber, width]);\r\n\r\n\tconst listToShowOnCurrentPageIds = useMemo(\r\n\t\t() =>\r\n\t\t\tgetListToShowOnCurrentPageIds(debouncedOptions, filteredListIds).filter(\r\n\t\t\t\t(key: string) => key !== lastDeletedItemId\r\n\t\t\t) || [],\r\n\t\t[filteredListIds, debouncedOptions, lastDeletedItemId]\r\n\t);\r\n\r\n\tconst splittedListIds = useMemo(() => {\r\n\t\tconst result: string[][] = [];\r\n\t\tlet row = -1;\r\n\r\n\t\tlistToShowOnCurrentPageIds.forEach((key: string, col: number) => {\r\n\t\t\tif (col % colNumber === 0) {\r\n\t\t\t\trow++;\r\n\t\t\t\tresult.push([]);\r\n\t\t\t}\r\n\t\t\tresult[row].push(key);\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}, [colNumber, listToShowOnCurrentPageIds]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<LargeSpin />\r\n\t\t\t) : (\r\n\t\t\t\t!filteredListIds.length && (\r\n\t\t\t\t\t<Empty\r\n\t\t\t\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\t\t\t\tdescription={''}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t)}\r\n\t\t\t{debouncedOptions.mode === 'list' ? (\r\n\t\t\t\t<List style={{ inlineSize: '100%' }}>\r\n\t\t\t\t\t{listToShowOnCurrentPageIds.map((key: string) => (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\tmode={debouncedOptions.mode}\r\n\t\t\t\t\t\t\tinitialItemId={key}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</List>\r\n\t\t\t) : (\r\n\t\t\t\tsplittedListIds.map((keys: string[]) => (\r\n\t\t\t\t\t<Row\r\n\t\t\t\t\t\tkey={keys[0]}\r\n\t\t\t\t\t\tgutter={16}\r\n\t\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{keys.map((key: string) => (\r\n\t\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\t\tspan={24 / colNumber}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\tmode={debouncedOptions.mode}\r\n\t\t\t\t\t\t\t\t\tinitialItemId={key}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t))\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default memo(ItemList);\r\n","import React, { useCallback, useState } from 'react';\r\nimport { ExpenseItem } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button, Tooltip } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport ItemModal from './ItemModal';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport dayjs from 'dayjs';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst NewItemButton: React.FC = observer(() => {\r\n\tconst { addItem } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { userOptions } = optionsStore;\r\n\r\n\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\r\n\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t}, [setIsModalOpened]);\r\n\r\n\tconst addNewItem = useCallback(\r\n\t\t(item: ExpenseItem) => {\r\n\t\t\tconst date = dayjs().valueOf();\r\n\t\t\taddItem({ ...item, createdAt: date });\r\n\t\t\ttoggleIsModalOpened();\r\n\t\t},\r\n\t\t[addItem, toggleIsModalOpened]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.newItem[userOptions.language]}>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={toggleIsModalOpened}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<PlusOutlined />\r\n\t\t\t</Button>\r\n\t\t\t<ItemModal\r\n\t\t\t\topened={isModalOpened}\r\n\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\tsubmitItem={addNewItem}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default NewItemButton;\r\n","import React from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select, Tag, Tooltip } from 'antd';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst tagRender = (props: any, categories: { [key: number]: category }) => {\r\n\tconst { label, value, onClose } = props;\r\n\tconst onPreventMouseDown = (event: any) => {\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\t};\r\n\tconst color =\r\n\t\tObject.keys(categories).length > 1 ? categories[value].color : '';\r\n\r\n\treturn (\r\n\t\t<Tag\r\n\t\t\tcolor={color}\r\n\t\t\tonMouseDown={onPreventMouseDown}\r\n\t\t\tclosable={true}\r\n\t\t\tonClose={onClose}\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginInlineEnd: 4,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<span\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcolor: color,\r\n\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{label}\r\n\t\t\t</span>\r\n\t\t</Tag>\r\n\t);\r\n};\r\n\r\nconst CategoriesSelect: React.FC = observer(() => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleCategoriesToFilterChange, userOptions } =\r\n\t\toptionsStore;\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.categoriesSelect[userOptions.language]}>\r\n\t\t\t<Select\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tmode='multiple'\r\n\t\t\t\tshowSearch={false}\r\n\t\t\t\ttagRender={(props) => tagRender(props, categories)}\r\n\t\t\t\tstyle={{ minInlineSize: '10em' }}\r\n\t\t\t\tvalue={listOptions.categoriesToFilterIds}\r\n\t\t\t\tonChange={handleCategoriesToFilterChange}\r\n\t\t\t\toptions={Object.keys(categories).map((key: string) => ({\r\n\t\t\t\t\tlabel: categories[key].name,\r\n\t\t\t\t\tvalue: key,\r\n\t\t\t\t}))}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default CategoriesSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Tooltip } from 'antd';\r\nimport {\r\n\tCalendarOutlined,\r\n\tDollarOutlined,\r\n\tFontColorsOutlined,\r\n\tSortAscendingOutlined,\r\n\tSortDescendingOutlined,\r\n} from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst SortSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst {\r\n\t\tsetIsSortingReversed,\r\n\t\tlistOptions,\r\n\t\tuserOptions,\r\n\t\thandleSortAlgorithmChanging,\r\n\t} = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t<Tooltip title={languages.sort.reverse[userOptions.language]}>\r\n\t\t\t\t{listOptions.isSortingReversed ? (\r\n\t\t\t\t\t<SortDescendingOutlined\r\n\t\t\t\t\t\tonClick={() => setIsSortingReversed(!listOptions.isSortingReversed)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<SortAscendingOutlined\r\n\t\t\t\t\t\tonClick={() => setIsSortingReversed(!listOptions.isSortingReversed)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Tooltip>\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.sortingAlgorithm}\r\n\t\t\t\tonChange={handleSortAlgorithmChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byDate[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'date',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byTitle[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<FontColorsOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'title',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byPrice[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<DollarOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'price',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default SortSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Tooltip } from 'antd';\r\nimport { MenuOutlined, TableOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst ModeSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleModeChanging, userOptions } = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.mode}\r\n\t\t\t\tonChange={handleModeChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.layout.list[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<MenuOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'list',\r\n\t\t\t\t\t\tdisabled: isSmallScreen,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.layout.grid[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<TableOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'grid',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default ModeSelect;\r\n","import { Divider, Flex, Pagination } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { memo, useMemo } from 'react';\r\nimport NewItemButton from './NewItemButton';\r\nimport YearSlider from './YearSlider';\r\nimport CategoriesSelect from './CategoriesSelect';\r\nimport SortSelect from './SortSelect';\r\nimport ModeSelect from './ModeSelect';\r\nimport constants from 'settings/constants';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport ResetButton from './ResetButton';\r\n\r\ninterface Props {\r\n\ttotal: number;\r\n}\r\n\r\nconst Selectors: React.FC<Props> = observer(({ total }) => {\r\n\tconst { isSmallScreen, loading } = userStore;\r\n\tconst {\r\n\t\tlistOptions,\r\n\t\tdefaultRange,\r\n\t\tresetListOptions: resetSettings,\r\n\t\thandlePageChanging,\r\n\t\tsetRange,\r\n\t\tsetIsAccurate,\r\n\t} = optionsStore;\r\n\r\n\tconst {\r\n\t\tisSortingReversed,\r\n\t\trange,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t\tcurrentPage,\r\n\t\tsortingAlgorithm,\r\n\t\tisAccurate,\r\n\t} = listOptions;\r\n\r\n\tconst isSettingsChanged = useMemo(\r\n\t\t() =>\r\n\t\t\tisSortingReversed ||\r\n\t\t\tcategoriesToFilterIds.length > 0 ||\r\n\t\t\tpageSize !== constants.defaultPageSize ||\r\n\t\t\tcurrentPage !== 1 ||\r\n\t\t\t(range[0] &&\r\n\t\t\t\trange[1] &&\r\n\t\t\t\t(range[0] !== defaultRange[0] || range[1]) !== defaultRange[1]) ||\r\n\t\t\tsortingAlgorithm !== 'date',\r\n\t\t[\r\n\t\t\trange,\r\n\t\t\tdefaultRange,\r\n\t\t\tisSortingReversed,\r\n\t\t\tcategoriesToFilterIds,\r\n\t\t\tpageSize,\r\n\t\t\tcurrentPage,\r\n\t\t\tsortingAlgorithm,\r\n\t\t]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t>\r\n\t\t\t<Flex\r\n\t\t\t\tvertical\r\n\t\t\t\tgap={32}\r\n\t\t\t>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tgap={16}\r\n\t\t\t\t\tvertical={isSmallScreen}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t\t<NewItemButton />\r\n\t\t\t\t\t\t<CategoriesSelect />\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t\t<SortSelect />\r\n\t\t\t\t\t\t<ModeSelect />\r\n\t\t\t\t\t\t<ResetButton\r\n\t\t\t\t\t\t\tdisabled={!isSettingsChanged}\r\n\t\t\t\t\t\t\treset={resetSettings}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<YearSlider\r\n\t\t\t\t\tsetIsAccurate={setIsAccurate}\r\n\t\t\t\t\tisAccurate={isAccurate}\r\n\t\t\t\t\trange={range}\r\n\t\t\t\t\tsetRange={setRange}\r\n\t\t\t\t/>\r\n\t\t\t</Flex>\r\n\t\t\t<Divider />\r\n\t\t\t{!loading && (\r\n\t\t\t\t<Pagination\r\n\t\t\t\t\tstyle={{ alignSelf: 'center' }}\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\tshowSizeChanger\r\n\t\t\t\t\tpageSizeOptions={constants.pageSizeOptions}\r\n\t\t\t\t\tcurrent={listOptions.currentPage}\r\n\t\t\t\t\tpageSize={listOptions.pageSize}\r\n\t\t\t\t\ttotal={total}\r\n\t\t\t\t\tonChange={handlePageChanging}\r\n\t\t\t\t\tonShowSizeChange={handlePageChanging}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default memo(Selectors);\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport ItemList from '../components/ItemList';\r\nimport { Flex } from 'antd';\r\nimport Selectors from 'components/Selectors';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { getFilteredListIds } from 'utils/transformData';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst Expenses: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { listOptions, userOptions, handleModeChanging, handlePageChanging } =\r\n\t\toptionsStore;\r\n\r\n\tconst { language } = userOptions;\r\n\r\n\tconst {\r\n\t\trange,\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t} = listOptions;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isSmallScreen) {\r\n\t\t\thandleModeChanging('grid');\r\n\t\t}\r\n\t}, [isSmallScreen, handleModeChanging]);\r\n\r\n\tuseEffect(() => {\r\n\t\thandlePageChanging(1, pageSize);\r\n\t}, [\r\n\t\trange,\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t\thandlePageChanging,\r\n\t]);\r\n\t\r\n\tconst filteredListIds = useMemo(\r\n\t\t() => getFilteredListIds(listOptions, list, language),\r\n\t\t[list, language, listOptions]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t\talign='center'\r\n\t\t>\r\n\t\t\t<Selectors total={filteredListIds.length} />\r\n\t\t\t<ItemList filteredListIds={filteredListIds} />\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default Expenses;\r\n","import {\r\n\tExpenseItem,\r\n\tInterval,\r\n\tListOptions,\r\n\tValue,\r\n\tlanguage,\r\n} from 'settings/interfaces';\r\nimport { sortBy } from './utils';\r\nimport dayjs from 'dayjs';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\n\r\ndayjs.extend(isBetween);\r\n\r\nexport const getFilteredListIds = (\r\n\toptions: ListOptions,\r\n\tlist: { [key: string]: ExpenseItem },\r\n\tlanguage: language\r\n) => {\r\n\tconst { range, categoriesToFilterIds, sortingAlgorithm, isSortingReversed } =\r\n\t\toptions;\r\n\treturn sortBy(\r\n\t\tlist,\r\n\t\tObject.keys(list).filter(\r\n\t\t\t(key: string) =>\r\n\t\t\t\tlist[key].date >= range[0] &&\r\n\t\t\t\tlist[key].date <= range[1] &&\r\n\t\t\t\t(categoriesToFilterIds.length\r\n\t\t\t\t\t? categoriesToFilterIds.some(\r\n\t\t\t\t\t\t\t(id: string) => list[key].categoryId === id\r\n\t\t\t\t\t  )\r\n\t\t\t\t\t: true)\r\n\t\t),\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tlanguage\r\n\t);\r\n};\r\n\r\nexport const getListToShowOnCurrentPageIds = (\r\n\toptions: ListOptions,\r\n\tfilteredListIds: string[]\r\n) => {\r\n\tconst { currentPage, pageSize } = options;\r\n\tconst startIndex = (currentPage - 1) * pageSize;\r\n\tconst endIndex = startIndex + pageSize;\r\n\treturn filteredListIds.slice(startIndex, endIndex);\r\n};\r\n\r\nexport const getValuesForBarDiagram = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\tcurrency: string,\r\n\tmode: Interval,\r\n\tyear: number\r\n) => {\r\n\tif (mode === 'year') {\r\n\t\tconst result: { [key: number]: number } = {};\r\n\t\tObject.keys(list).forEach((key: string) => {\r\n\t\t\tconst resultKey: number = dayjs(list[key].date).year();\r\n\t\t\tif (result[resultKey] === undefined) {\r\n\t\t\t\tresult[resultKey] = list[key].price[currency];\r\n\t\t\t} else {\r\n\t\t\t\tresult[resultKey] += list[key].price[currency];\r\n\t\t\t}\r\n\t\t});\r\n\t\tfor (let year in result) {\r\n\t\t\tresult[year] = Math.round(result[year]);\r\n\t\t}\r\n\t\treturn result;\r\n\t} else if (mode === 'month') {\r\n\t\tconst result: number[] = new Array(12).fill(0);\r\n\t\tObject.keys(list).forEach((key: string) => {\r\n\t\t\tif (dayjs(list[key].date).year() === year) {\r\n\t\t\t\tconst index: number = dayjs(list[key].date).month();\r\n\t\t\t\tresult[index] += list[key].price[currency];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result.map((item: number) => Math.round(item));\r\n\t}\r\n\treturn [];\r\n};\r\n\r\nexport const getValuesForPieDiagram = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\trange: number[],\r\n\tcurrency: string\r\n) => {\r\n\tconst values: Value[] = [];\r\n\tObject.keys(list).forEach((key: string) => {\r\n\t\tif (list[key].date > range[0] && list[key].date < range[1]) {\r\n\t\t\tconst categoryKey: number = Object.keys(values).findIndex(\r\n\t\t\t\t(n: string) => values[Number(n)].categoryId === list[key].categoryId\r\n\t\t\t);\r\n\t\t\tif (categoryKey !== -1) {\r\n\t\t\t\tvalues[categoryKey].value += list[key].price[currency];\r\n\t\t\t} else {\r\n\t\t\t\tvalues.push({\r\n\t\t\t\t\tcategoryId: list[key].categoryId,\r\n\t\t\t\t\tvalue: list[key].price[currency],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn values.map((value: Value) => ({\r\n\t\t...value,\r\n\t\tvalue: Math.round(value.value),\r\n\t}));\r\n};\r\n\r\nexport const getTotalInCurrentRange = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\trange: number[],\r\n\tcurrency: string\r\n) =>\r\n\tMath.floor(\r\n\t\tObject.values(list).reduce((acc: number, item: ExpenseItem) => {\r\n\t\t\tif (item.date >= range[0] && item.date <= range[1]) {\r\n\t\t\t\treturn acc + item.price[currency];\r\n\t\t\t}\r\n\t\t\treturn acc;\r\n\t\t}, 0)\r\n\t);\r\n\r\nexport const getValuesByMonth = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\trange: number[]\r\n) => {\r\n\tconst values: number[] = [];\r\n\tconst end = dayjs(range[1]);\r\n\tlet startDate = dayjs(range[0]);\r\n\tlet endDate = dayjs(range[0]).add(1, 'month');\r\n\r\n\twhile (!endDate.isAfter(end, 'day')) {\r\n\t\tconst itemsInMonth = Object.values(list).filter(\r\n\t\t\t// eslint-disable-next-line\r\n\t\t\t(item: ExpenseItem) =>\r\n\t\t\t\titem.date > startDate.valueOf() && item.date < endDate.valueOf()\r\n\t\t);\r\n\t\tconst valueForMonth = itemsInMonth.reduce(\r\n\t\t\t(acc, item) => acc + item.price.USD,\r\n\t\t\t0\r\n\t\t);\r\n\t\tvalues.push(valueForMonth);\r\n\t\tstartDate = startDate.add(1, 'month');\r\n\t\tendDate = endDate.add(1, 'month');\r\n\t}\r\n\r\n\treturn values;\r\n};\r\n","import { ExpenseItem, Sort, language } from 'settings/interfaces';\r\n\r\nexport const getSymbolAndPrice = (currency: string, price?: number) => {\r\n\tlet result = '';\r\n\tif (currency === 'USD') result += '$';\r\n\tif (currency === 'EUR') result += '€';\r\n\tif (currency === 'RUB') result += '₽';\r\n\r\n\tconst formattedPrice = Math.round(price as number)\r\n\t\t?.toString()\r\n\t\t.split('')\r\n\t\t.reverse()\r\n\t\t.reduce(\r\n\t\t\t(acc: string[], symbol: string, index: number) =>\r\n\t\t\t\tindex % 3 === 0 && index !== 0\r\n\t\t\t\t\t? [...acc, symbol + ',']\r\n\t\t\t\t\t: [...acc, symbol],\r\n\t\t\t[]\r\n\t\t)\r\n\t\t.reverse()\r\n\t\t.join('');\r\n\r\n\treturn price === undefined ? result : result + formattedPrice;\r\n};\r\n\r\nexport const sortBy = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\tlistKeys: string[],\r\n\tsortingAlgorithm: Sort,\r\n\treversed: boolean,\r\n\tlanguage?: language\r\n) => {\r\n\tlet result: string[];\r\n\tswitch (sortingAlgorithm) {\r\n\t\tcase 'date':\r\n\t\t\tresult = listKeys.sort(\r\n\t\t\t\t(prev: string, next: string) =>\r\n\t\t\t\t\tlist[next].date.valueOf() - list[prev].date.valueOf()\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'title':\r\n\t\t\tresult = listKeys.sort((prev: string, next: string) =>\r\n\t\t\t\tlist[prev].title.localeCompare(list[next].title, language, {\r\n\t\t\t\t\tsensitivity: 'base',\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'price':\r\n\t\t\tresult = listKeys.sort(\r\n\t\t\t\t(prev: string, next: string) =>\r\n\t\t\t\t\tlist[next].price.USD - list[prev].price.USD\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tresult = listKeys;\r\n\t}\r\n\r\n\treturn reversed ? result.reverse() : result;\r\n};\r\n"],"names":["observer","_ref","remove","userOptions","optionsStore","isSmallScreen","userStore","_jsx","Tooltip","title","languages","delete","language","children","DeleteOutlined","onClick","style","scale","disabled","reset","Button","size","ReloadOutlined","SliderDiagram","list","listStore","defaultRange","valuesByMonth","useMemo","getValuesByMonth","data","labels","Array","length","fill","datasets","Line","inlineSize","options","plugins","legend","display","tooltip","enabled","scales","x","grid","y","elements","point","radius","line","cubicInterpolationMode","borderColor","aspectRatio","memo","Chart","register","LineElement","LineController","CategoryScale","LinearScale","PointElement","dayjs","minMax","YearSlider","range","setRange","isAccurate","setIsAccurate","setDefaultRange","value","setValue","useState","sliderRange","dates","Object","values","map","item","date","Math","min","max","marks","start","startOf","end","endOf","currentDate","isBefore","isSame","valueOf","month","format","add","useEffect","handleRangeChanging","useCallback","diff","_jsxs","Flex","gap","align","Segmented","defaultValue","onChange","label","TooltipAntd","byMonth","ZoomOutOutlined","byDay","ZoomInOutlined","vertical","Slider","step","dots","formatter","_Fragment","onChangeComplete","prices","rates","arguments","undefined","constants","baseCurrency","id","categories","categoryStore","Select","minInlineSize","suffixIcon","EditFilled","color","keys","key","name","ItemModal","opened","initialItemId","toggleOpened","submitItem","currency","setCurrency","currencyRates","initialItem","emptyItem","currentItem","setCurrentItem","handleTitleChange","event","target","prevItem","handleDateChange","handleCategoryChange","categoryId","handlePriceChange","updatedItem","price","Number","calculatePrices","submitItemWithEnter","window","removeEventListener","addEventListener","TitleJSX","Input","required","type","onInput","PriceJSX","round","CurrencyJSX","CurrencySelect","DateJSX","DatePicker","minDate","startDate","maxDate","CategoryJSX","CategorySelect","Modal","open","okButtonProps","cancelButtonProps","onOk","onCancel","okText","CheckOutlined","cancelText","CloseOutlined","Form","layout","Item","Row","Col","span","dateAndCat","ListItem","mode","replaceItem","setLastDeletedItemId","isModalOpened","setIsModalOpened","toggleIsModalOpened","prevValue","updateCurrentItem","JSON","stringify","newItem","updatedAt","deleteItem","justify","opacity","Typography","Text","strong","ellipsis","noTitle","Title","level","margin","Statistic","Tag","filter","getSymbolAndPrice","DeleteJSX","DeleteButton","EditJSX","edit","EditOutlined","ActionsJSX","tooltipTitle","concat","createdAt","TooltipJSX","InfoCircleOutlined","Card","extra","bordered","actions","delay","debouncedValue","setDebouncedValue","timerId","setTimeout","clearTimeout","ItemList","filteredListIds","width","loading","listOptions","lastDeletedItemId","debouncedOptions","useDebounce","colNumber","setColNumber","listToShowOnCurrentPageIds","getListToShowOnCurrentPageIds","splittedListIds","result","row","forEach","col","push","LargeSpin","Empty","image","PRESENTED_IMAGE_SIMPLE","description","List","gutter","addItem","addNewItem","PlusOutlined","handleCategoriesToFilterChange","categoriesSelect","showSearch","tagRender","props","onClose","onMouseDown","preventDefault","stopPropagation","closable","marginInlineEnd","categoriesToFilterIds","setIsSortingReversed","handleSortAlgorithmChanging","alignSelf","sort","reverse","isSortingReversed","SortDescendingOutlined","SortAscendingOutlined","sortingAlgorithm","byDate","CalendarOutlined","byTitle","FontColorsOutlined","byPrice","DollarOutlined","handleModeChanging","MenuOutlined","TableOutlined","Selectors","total","resetListOptions","resetSettings","handlePageChanging","pageSize","currentPage","isSettingsChanged","defaultPageSize","NewItemButton","CategoriesSelect","SortSelect","ModeSelect","ResetButton","Divider","Pagination","showSizeChanger","pageSizeOptions","current","onShowSizeChange","Expenses","getFilteredListIds","isBetween","sortBy","some","startIndex","endIndex","slice","getValuesForBarDiagram","year","resultKey","index","getValuesForPieDiagram","categoryKey","findIndex","n","getTotalInCurrentRange","floor","reduce","acc","endDate","isAfter","valueForMonth","USD","_Math$round","formattedPrice","toString","split","symbol","join","listKeys","reversed","prev","next","localeCompare","sensitivity"],"sourceRoot":""}