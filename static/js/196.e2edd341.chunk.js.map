{"version":3,"file":"static/js/196.e2edd341.chunk.js","mappings":"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","sources":["components/CategorySelect.tsx","components/ImageUpload.tsx","components/ItemModal.tsx","components/Items.tsx","components/ListItem.tsx","components/ResetButton.tsx","components/SliderDiagram.tsx","components/YearSlider.tsx","hooks/useDebounce.ts","components/ItemList.tsx","components/NewItemButton.tsx","components/CategoriesSelect.tsx","components/SortSelect.tsx","components/ModeSelect.tsx","components/Selectors.tsx","pages/Expenses.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select } from 'antd';\r\nimport { EditFilled } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tid: string;\r\n\tonChange: (arg0: string) => void;\r\n}\r\n\r\nconst CategorySelect: React.FC<Props> = observer(({ id, onChange }) => {\r\n\tconst { userCategories, categoriesTemplate } = categoryStore;\r\n\tconst { isSmallScreen, isTourStarted } = userStore;\r\n\r\n\tconst categories = useMemo(\r\n\t\t() => (isTourStarted ? categoriesTemplate : userCategories),\r\n\t\t[isTourStarted, userCategories, categoriesTemplate]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tstyle={{ minInlineSize: '7em' }}\r\n\t\t\tonChange={onChange}\r\n\t\t\tvalue={id}\r\n\t\t\tsuffixIcon={\r\n\t\t\t\t<EditFilled style={{ color: categories[id] && categories[id].color }} />\r\n\t\t\t}\r\n\t\t\toptions={Object.keys(categories).map((key: string) => ({\r\n\t\t\t\tlabel: categories[key].name,\r\n\t\t\t\tvalue: key,\r\n\t\t\t}))}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default CategorySelect;\r\n","import { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Image, Upload } from 'antd';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useState } from 'react';\r\n\r\ninterface Props {\r\n\timage: string | undefined;\r\n\tonChange: (arg0: string) => void;\r\n}\r\n\r\nconst ImageUpload: React.FC<Props> = observer(({ onChange, image }) => {\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\r\n\tconst getBase64 = (img: any, callback: any) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t};\r\n\r\n\tconst handleChange = useCallback(\r\n\t\t(info: any) => {\r\n\t\t\tif (info.file.status === 'uploading') {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t}\r\n\t\t\tif (info.file.status === 'done') {\r\n\t\t\t\tgetBase64(info.file.originFileObj, (url: any) => {\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tonChange(url);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t[setLoading, onChange]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<ImgCrop\r\n\t\t\tcropShape='round'\r\n\t\t\trotationSlider\r\n\t\t>\r\n\t\t\t<Upload\r\n\t\t\t\taction={'1'}\r\n\t\t\t\taccept='image/*'\r\n\t\t\t\tlistType='picture-circle'\r\n\t\t\t\tshowUploadList={false}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tmaxCount={1}\r\n\t\t\t>\r\n\t\t\t\t{image ? (\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\tborderRadius: '50px',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : loading ? (\r\n\t\t\t\t\t<LoadingOutlined style={{ scale: '1.5' }} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<PlusOutlined style={{ scale: '1.5' }} />\r\n\t\t\t\t)}\r\n\t\t\t</Upload>\r\n\t\t</ImgCrop>\r\n\t);\r\n});\r\n\r\nexport default ImageUpload;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport calculatePrices from '../utils/calculatePrices';\r\nimport { ExpenseItem } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport languages from 'settings/languages';\r\nimport { Col, DatePicker, Form, Input, Modal, Row } from 'antd';\r\nimport CurrencySelect from 'components/CurrencySelect';\r\nimport constants from 'settings/constants';\r\nimport dayjs from 'dayjs';\r\nimport CategorySelect from './CategorySelect';\r\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { listStore } from 'utils/listStore';\r\nimport ImageUpload from './ImageUpload';\r\nimport { convertToJpeg } from 'utils/utils';\r\n\r\ninterface Props {\r\n\topened: boolean;\r\n\tinitialItemId?: string;\r\n\ttoggleOpened: () => void;\r\n\tsubmitItem: (arg0: ExpenseItem) => void;\r\n}\r\n\r\nconst ItemModal: React.FC<Props> = observer(\r\n\t({ opened, initialItemId, toggleOpened, submitItem }) => {\r\n\t\tconst [currency, setCurrency] = useState(constants.baseCurrency);\r\n\t\tconst { currencyRates, isSmallScreen, isTourStarted } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\t\tconst { userList, listTemplate } = listStore;\r\n\r\n\t\tconst list = useMemo(\r\n\t\t\t() => (isTourStarted ? listTemplate : userList),\r\n\t\t\t[isTourStarted, listTemplate, userList]\r\n\t\t);\r\n\r\n\t\tconst { language } = userOptions;\r\n\r\n\t\tconst initialItem = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tinitialItemId !== undefined ? list[initialItemId] : constants.emptyItem,\r\n\t\t\t[list, initialItemId]\r\n\t\t);\r\n\r\n\t\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(initialItem);\r\n\r\n\t\tconst handleTitleChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\ttitle: value,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleDateChange = useCallback(\r\n\t\t\t(value: dayjs.Dayjs) => {\r\n\t\t\t\tif (value)\r\n\t\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tdate: value.valueOf(),\r\n\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleCategoryChange = useCallback(\r\n\t\t\t(id: string) => {\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\tcategoryId: id,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handlePriceChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem) => {\r\n\t\t\t\t\tconst updatedItem = {\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tprice: {\r\n\t\t\t\t\t\t\t...prevItem.price,\r\n\t\t\t\t\t\t\t[currency]: Number(value),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...updatedItem,\r\n\t\t\t\t\t\tprice: calculatePrices(updatedItem.price, currencyRates, currency),\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentItem, currency, currencyRates]\r\n\t\t);\r\n\r\n\t\tconst handleImageChange = useCallback(\r\n\t\t\t(image: string) => {\r\n\t\t\t\tconvertToJpeg(image as string, 0.5).then((image: string) => {\r\n\t\t\t\t\tsetCurrentItem((prevItem) => ({\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\timage: image,\r\n\t\t\t\t\t}));\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tconst submitItemWithEnter = (event: KeyboardEvent) => {\r\n\t\t\t\tif (event.key === 'Enter' && opened) {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\twindow.addEventListener('keyup', submitItemWithEnter);\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t};\r\n\t\t}, [currentItem, submitItem, opened]);\r\n\r\n\t\tconst TitleJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={currentItem.title}\r\n\t\t\t\tonInput={handleTitleChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst PriceJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='number'\r\n\t\t\t\tmin='1'\r\n\t\t\t\tstep='1'\r\n\t\t\t\tvalue={Math.round(currentItem.price[currency])}\r\n\t\t\t\tonInput={handlePriceChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CurrencyJSX = (\r\n\t\t\t<CurrencySelect\r\n\t\t\t\tvalue={currency}\r\n\t\t\t\tsetCurrency={setCurrency}\r\n\t\t\t\tonChange={setCurrency}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst DateJSX = (\r\n\t\t\t<DatePicker\r\n\t\t\t\trequired\r\n\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\tvalue={dayjs(currentItem.date)}\r\n\t\t\t\tminDate={constants.startDate}\r\n\t\t\t\tmaxDate={dayjs()}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CategoryJSX = (\r\n\t\t\t<CategorySelect\r\n\t\t\t\tid={currentItem.categoryId}\r\n\t\t\t\tonChange={handleCategoryChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst ImageJSX = (\r\n\t\t\t<ImageUpload\r\n\t\t\t\timage={currentItem.image}\r\n\t\t\t\tonChange={handleImageChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\topen={opened}\r\n\t\t\t\tokButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tcancelButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tonOk={() => {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t}}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetCurrentItem(initialItem);\r\n\t\t\t\t\ttoggleOpened();\r\n\t\t\t\t}}\r\n\t\t\t\tokText={<CheckOutlined />}\r\n\t\t\t\tcancelText={<CloseOutlined />}\r\n\t\t\t>\r\n\t\t\t\t<Form\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tlayout='vertical'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Form.Item label={languages.title[language]}>{TitleJSX}</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.price[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={16}>{PriceJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={7}>{CurrencyJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.dateAndCat[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={10}>{DateJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={13}>{CategoryJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.image[language]}>{ImageJSX}</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default ItemModal;\r\n","import {\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tFrownOutlined,\r\n\tInfoCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport {\r\n\tAvatar,\r\n\tButton,\r\n\tCheckbox,\r\n\tFlex,\r\n\tImage,\r\n\tStatistic,\r\n\tTag,\r\n\tTooltip,\r\n\tTypography,\r\n} from 'antd';\r\nimport Title from 'antd/es/typography/Title';\r\nimport { category, currencies, language } from 'settings/interfaces';\r\nimport languages from 'settings/languages';\r\nimport dayjs from 'dayjs';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport React from 'react';\r\nimport { CheckboxChangeEvent } from 'antd/es/checkbox';\r\n\r\nexport const MyInfoTooltip = (\r\n\ttitle: string | React.JSX.Element,\r\n\tisSmallScreen: boolean,\r\n\tonClick?: () => void\r\n) => (\r\n\t<Tooltip title={title}>\r\n\t\t<InfoCircleOutlined\r\n\t\t\tonClick={onClick}\r\n\t\t\tstyle={{\r\n\t\t\t\tscale: isSmallScreen ? '1' : '1.5',\r\n\t\t\t}}\r\n\t\t/>\r\n\t</Tooltip>\r\n);\r\n\r\nexport const MyTitle = (\r\n\ttitle: string,\r\n\tisSmallScreen: boolean,\r\n\tlanguage: language,\r\n\teditable: any\r\n) => (\r\n\t<Flex\r\n\t\tjustify='center'\r\n\t\tstyle={{\r\n\t\t\tinlineSize: '100%',\r\n\t\t\topacity: !title ? '.5' : '1',\r\n\t\t}}\r\n\t>\r\n\t\t{isSmallScreen ? (\r\n\t\t\t<Typography.Text\r\n\t\t\t\tstrong\r\n\t\t\t\tellipsis\r\n\t\t\t\teditable={editable || false}\r\n\t\t\t>\r\n\t\t\t\t{title || languages.noTitle[language]}\r\n\t\t\t</Typography.Text>\r\n\t\t) : (\r\n\t\t\t<Title\r\n\t\t\t\teditable={editable || false}\r\n\t\t\t\tellipsis\r\n\t\t\t\tlevel={3}\r\n\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t>\r\n\t\t\t\t{title || languages.noTitle[language]}\r\n\t\t\t</Title>\r\n\t\t)}\r\n\t</Flex>\r\n);\r\n\r\nexport const MyImage = (\r\n\timage: string | undefined,\r\n\tisSmallScreen: boolean,\r\n\ttoggleOpened: () => void,\r\n\tlanguage: language\r\n) =>\r\n\timage ? (\r\n\t\t<Tooltip\r\n\t\t\tcolor='#0005'\r\n\t\t\tplacement='right'\r\n\t\t\ttitle={\r\n\t\t\t\t<Image\r\n\t\t\t\t\tpreview={false}\r\n\t\t\t\t\tsrc={image}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tborderRadius: '50%',\r\n\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Avatar\r\n\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\ticon={\r\n\t\t\t\t\t<Flex\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t) : (\r\n\t\t<Tooltip title={languages.noImage[language]}>\r\n\t\t\t<Avatar\r\n\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\tonClick={toggleOpened}\r\n\t\t\t\ticon={<FrownOutlined />}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n\r\nexport const MyDate = (date: number, isSmallScreen: boolean) => (\r\n\t<Statistic\r\n\t\tvalue={dayjs(date).format('DD.MM.YY')}\r\n\t\tstyle={{\r\n\t\t\tscale: isSmallScreen ? '.67' : '.75',\r\n\t\t}}\r\n\t/>\r\n);\r\n\r\nexport const MyCategory = (category: category) => (\r\n\t<Flex\r\n\t\tvertical\r\n\t\talign='stretch'\r\n\t>\r\n\t\t{category && (\r\n\t\t\t<Tag color={category.color}>\r\n\t\t\t\t<span\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmargin: 'auto',\r\n\t\t\t\t\t\tcolor: category.color,\r\n\t\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{category.name}\r\n\t\t\t\t</span>\r\n\t\t\t</Tag>\r\n\t\t)}\r\n\t</Flex>\r\n);\r\n\r\nexport const MyPrice = (\r\n\tprice: currencies,\r\n\tisSmallScreen: boolean,\r\n\tcurrency: string\r\n) => (\r\n\t<Flex justify='center'>\r\n\t\t{isSmallScreen ? (\r\n\t\t\t<Typography.Text strong>\r\n\t\t\t\t{getSymbolAndPrice(currency)}\r\n\t\t\t\t{Math.round(price[currency])}\r\n\t\t\t</Typography.Text>\r\n\t\t) : (\r\n\t\t\t<Title\r\n\t\t\t\tlevel={3}\r\n\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t>\r\n\t\t\t\t{getSymbolAndPrice(currency, price[currency])}\r\n\t\t\t</Title>\r\n\t\t)}\r\n\t</Flex>\r\n);\r\n\r\nexport const MyEdit = (\r\n\ttitle: string,\r\n\tisSmallScreen: boolean,\r\n\ttoggleOpened: () => void\r\n) => (\r\n\t<Tooltip title={title}>\r\n\t\t<EditOutlined\r\n\t\t\tonClick={toggleOpened}\r\n\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t/>\r\n\t</Tooltip>\r\n);\r\n\r\nexport const MyDelete = (\r\n\ttitle: string,\r\n\tisSmallScreen: boolean,\r\n\tonClick: () => void\r\n) => (\r\n\t<Tooltip title={title}>\r\n\t\t<DeleteOutlined\r\n\t\t\tonClick={onClick}\r\n\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t/>\r\n\t</Tooltip>\r\n);\r\n\r\nexport const MyCheckbox = (\r\n\tselected: boolean,\r\n\tlanguage: language,\r\n\tisSmallScreen: boolean,\r\n\thandleSelection: (event: CheckboxChangeEvent) => void,\r\n\tdeleteAll: () => void,\r\n\trestoreAll?: () => void\r\n) => (\r\n\t<Tooltip\r\n\t\tcolor='#0000'\r\n\t\ttitle={\r\n\t\t\tselected ? (\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\tgap={isSmallScreen ? 4 : 8}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={deleteAll}\r\n\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{languages.deleteSelected[language]}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{restoreAll && (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={restoreAll}\r\n\t\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{languages.restoreSelected[language]}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Flex>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)\r\n\t\t}\r\n\t>\r\n\t\t<Checkbox\r\n\t\t\tonChange={handleSelection}\r\n\t\t\tchecked={selected}\r\n\t\t/>\r\n\t</Tooltip>\r\n);\r\n","import React, { useState, useCallback, useMemo } from 'react';\r\nimport { ExpenseItem, Mode } from '../settings/interfaces';\r\nimport Item from 'antd/es/list/Item';\r\nimport { Card, Col, Flex } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport ItemModal from './ItemModal';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n\tMyCategory,\r\n\tMyCheckbox,\r\n\tMyDate,\r\n\tMyDelete,\r\n\tMyEdit,\r\n\tMyImage,\r\n\tMyInfoTooltip,\r\n\tMyPrice,\r\n\tMyTitle,\r\n} from './Items';\r\nimport { CheckboxChangeEvent } from 'antd/es/checkbox';\r\n\r\ninterface Props {\r\n\tmode: Mode;\r\n\tinitialItemId: string;\r\n\tdeleteAll: () => void;\r\n\trestoreAll?: () => void;\r\n\thandleSelection: (event: CheckboxChangeEvent) => void;\r\n\tselected: boolean;\r\n\tdisabled?: boolean;\r\n}\r\n\r\nconst ListItem: React.FC<Props> = observer(\r\n\t({ mode, initialItemId, deleteAll, handleSelection, selected, disabled }) => {\r\n\t\tconst { isSmallScreen, isTourStarted } = userStore;\r\n\t\tconst {\r\n\t\t\treplaceItem,\r\n\t\t\tuserList,\r\n\t\t\tsetLastDeletedItemIds,\r\n\t\t\tlastDeletedItemIds,\r\n\t\t\tlistTemplate,\r\n\t\t} = listStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\t\tconst { userCategories, categoriesTemplate } = categoryStore;\r\n\r\n\t\tconst list = useMemo(\r\n\t\t\t() => (isTourStarted ? listTemplate : userList),\r\n\t\t\t[isTourStarted, listTemplate, userList]\r\n\t\t);\r\n\r\n\t\tconst categories = useMemo(\r\n\t\t\t() => (isTourStarted ? categoriesTemplate : userCategories),\r\n\t\t\t[isTourStarted, userCategories, categoriesTemplate]\r\n\t\t);\r\n\r\n\t\tconst { currency, language } = userOptions;\r\n\r\n\t\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\t\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(\r\n\t\t\tlist[initialItemId]\r\n\t\t);\r\n\r\n\t\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t\t}, [setIsModalOpened]);\r\n\r\n\t\tconst updateCurrentItem = useCallback(\r\n\t\t\t(item: ExpenseItem) => {\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => {\r\n\t\t\t\t\tif (JSON.stringify(prevItem) !== JSON.stringify(item)) {\r\n\t\t\t\t\t\tconst newItem: ExpenseItem = {\r\n\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\tupdatedAt: dayjs().valueOf(),\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\treplaceItem(initialItemId, newItem);\r\n\t\t\t\t\t\treturn newItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn prevItem;\r\n\t\t\t\t});\r\n\t\t\t\ttoggleIsModalOpened();\r\n\t\t\t},\r\n\t\t\t[setCurrentItem, replaceItem, toggleIsModalOpened, initialItemId]\r\n\t\t);\r\n\r\n\t\tconst deleteItem = useCallback(() => {\r\n\t\t\tsetLastDeletedItemIds([...lastDeletedItemIds, initialItemId]);\r\n\t\t}, [setLastDeletedItemIds, initialItemId, lastDeletedItemIds]);\r\n\r\n\t\tconst ActionsJSX = (\r\n\t\t\t<Flex justify='space-evenly'>\r\n\t\t\t\t{MyEdit(languages.edit[language], isSmallScreen, toggleIsModalOpened)}\r\n\t\t\t\t{MyPrice(currentItem.price, isSmallScreen, currency)}\r\n\t\t\t\t{MyDelete(languages.delete[language], isSmallScreen, deleteItem)}\r\n\t\t\t</Flex>\r\n\t\t);\r\n\r\n\t\tconst ImageAndDateJSX = (\r\n\t\t\t<Flex align='center'>\r\n\t\t\t\t{MyImage(\r\n\t\t\t\t\tcurrentItem.image,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\ttoggleIsModalOpened,\r\n\t\t\t\t\tlanguage\r\n\t\t\t\t)}\r\n\t\t\t\t{MyDate(currentItem.date, isSmallScreen)}\r\n\t\t\t</Flex>\r\n\t\t);\r\n\r\n\t\tconst tooltipTitle = useMemo(() => {\r\n\t\t\tif (!currentItem.updatedAt) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{`${languages.createdAt[language]} ${dayjs(\r\n\t\t\t\t\t\t\tcurrentItem.createdAt\r\n\t\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{`${languages.createdAt[language]} ${dayjs(\r\n\t\t\t\t\t\t\tcurrentItem.createdAt\r\n\t\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t{`${languages.updatedAt[language]} ${dayjs(\r\n\t\t\t\t\t\t\tcurrentItem.updatedAt\r\n\t\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}, [currentItem, language]);\r\n\r\n\t\tconst CheckboxAndTitle = (\r\n\t\t\t<Flex>\r\n\t\t\t\t{MyCheckbox(\r\n\t\t\t\t\tselected,\r\n\t\t\t\t\tlanguage,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\thandleSelection,\r\n\t\t\t\t\tdeleteAll\r\n\t\t\t\t)}\r\n\t\t\t\t{MyTitle(currentItem.title, isSmallScreen, language, false)}\r\n\t\t\t</Flex>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<ItemModal\r\n\t\t\t\t\topened={isModalOpened}\r\n\t\t\t\t\tinitialItemId={initialItemId}\r\n\t\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\t\tsubmitItem={updateCurrentItem}\r\n\t\t\t\t/>\r\n\t\t\t\t{mode === 'list' ? (\r\n\t\t\t\t\t<Item style={{ pointerEvents: disabled ? 'none' : 'auto' }}>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyCheckbox(\r\n\t\t\t\t\t\t\t\tselected,\r\n\t\t\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\thandleSelection,\r\n\t\t\t\t\t\t\t\tdeleteAll\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>{ImageAndDateJSX}</Col>\r\n\t\t\t\t\t\t<Col span={8}>\r\n\t\t\t\t\t\t\t{MyTitle(currentItem.title, isSmallScreen, language, false)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={3}>{MyCategory(categories[currentItem.categoryId])}</Col>\r\n\t\t\t\t\t\t<Col span={5}>\r\n\t\t\t\t\t\t\t{MyPrice(currentItem.price, isSmallScreen, currency)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyEdit(\r\n\t\t\t\t\t\t\t\tlanguages.edit[language],\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\ttoggleIsModalOpened\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyDelete(languages.delete[language], isSmallScreen, deleteItem)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>{MyInfoTooltip(tooltipTitle, isSmallScreen)}</Col>\r\n\t\t\t\t\t</Item>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\textra={[MyInfoTooltip(tooltipTitle, isSmallScreen)]}\r\n\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\t\tbordered\r\n\t\t\t\t\t\ttitle={CheckboxAndTitle}\r\n\t\t\t\t\t\tactions={[ActionsJSX]}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tinlineSize: isSmallScreen ? '9em' : '12em',\r\n\t\t\t\t\t\t\tpointerEvents: disabled ? 'none' : 'auto',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Flex justify='center'>\r\n\t\t\t\t\t\t\t<Flex\r\n\t\t\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\t\t\talign='stretch'\r\n\t\t\t\t\t\t\t\tgap={4}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{ImageAndDateJSX}\r\n\t\t\t\t\t\t\t\t{MyCategory(categories[currentItem.categoryId])}\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default ListItem;\r\n","import { ReloadOutlined } from '@ant-design/icons';\r\nimport { Button, Tooltip } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tdisabled?: boolean;\r\n\treset: () => void;\r\n}\r\n\r\nconst ResetButton: React.FC<Props> = observer(({ disabled, reset }) => {\r\n\tconst { userOptions } = optionsStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.reset[userOptions.language]}>\r\n\t\t\t<Button\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t\tonClick={reset}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<ReloadOutlined />\r\n\t\t\t</Button>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default ResetButton;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { memo, useMemo } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { getValuesByMonth } from 'utils/transformData';\r\nimport { userStore } from 'utils/userStore';\r\n\r\nconst SliderDiagram: React.FC = observer(() => {\r\n\tconst { userList, listTemplate } = listStore;\r\n\tconst { defaultRange } = optionsStore;\r\n\tconst { isTourStarted } = userStore;\r\n\r\n\tconst list = useMemo(\r\n\t\t() => (isTourStarted ? listTemplate : userList),\r\n\t\t[isTourStarted, listTemplate, userList]\r\n\t);\r\n\r\n\tconst valuesByMonth: number[] | { [key: string]: number } = useMemo(\r\n\t\t() => getValuesByMonth(list, defaultRange),\r\n\t\t[list, defaultRange]\r\n\t);\r\n\r\n\tconst data = {\r\n\t\tlabels: new Array(valuesByMonth.length).fill(''),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tdata: valuesByMonth,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tx: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\ty: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\telements: {\r\n\t\t\tpoint: {\r\n\t\t\t\tradius: 0,\r\n\t\t\t},\r\n\t\t\tline: {\r\n\t\t\t\tcubicInterpolationMode: 'monotone' as 'monotone',\r\n\t\t\t\tborderColor: '#7775',\r\n\t\t\t},\r\n\t\t},\r\n\t\taspectRatio: 25,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Line\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\tdata={data}\r\n\t\t\toptions={options}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default memo(SliderDiagram);\r\n","import React, { memo, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Slider, Tooltip as TooltipAntd } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport { ExpenseItem } from 'settings/interfaces';\r\nimport dayjs from 'dayjs';\r\nimport minMax from 'dayjs/plugin/minMax';\r\nimport { ZoomInOutlined, ZoomOutOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport {\r\n\tChart,\r\n\tTooltip,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tLineElement,\r\n\tLineController,\r\n\tPointElement,\r\n} from 'chart.js';\r\nimport SliderDiagram from './SliderDiagram';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\nChart.register(\r\n\tTooltip,\r\n\tLineElement,\r\n\tLineController,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tPointElement\r\n);\r\n\r\ndayjs.extend(minMax);\r\n\r\ninterface Props {\r\n\trange: number[];\r\n\tsetRange: (arg0: number[]) => void;\r\n\tisAccurate: boolean;\r\n\tsetIsAccurate: (arg0: boolean) => void;\r\n}\r\n\r\nconst YearSlider: React.FC<Props> = observer(\r\n\t({ range, setRange, isAccurate, setIsAccurate }) => {\r\n\t\tconst { userList, listTemplate } = listStore;\r\n\t\tconst { isSmallScreen, isTourStarted } = userStore;\r\n\t\tconst { defaultRange, setDefaultRange, userOptions } = optionsStore;\r\n\r\n\t\tconst list = useMemo(\r\n\t\t\t() => (isTourStarted ? listTemplate : userList),\r\n\t\t\t[isTourStarted, listTemplate, userList]\r\n\t\t);\r\n\r\n\t\tconst [value, setValue] = useState(defaultRange);\r\n\r\n\t\tconst sliderRange: [number, number] = useMemo(() => {\r\n\t\t\tconst dates = Object.values(isTourStarted ? listTemplate : list).map(\r\n\t\t\t\t(item: ExpenseItem) => item.date\r\n\t\t\t);\r\n\t\t\treturn [Math.min(...dates), Math.max(...dates)];\r\n\t\t}, [list, isTourStarted, listTemplate]);\r\n\r\n\t\tconst marks: { [key: number]: string } = useMemo(() => {\r\n\t\t\tconst start = dayjs(sliderRange[0]).startOf('day');\r\n\t\t\tconst end = dayjs(sliderRange[1]).endOf('day');\r\n\t\t\tconst marks: { [key: number]: string } = {};\r\n\t\t\tlet currentDate = start;\r\n\t\t\tif (isAccurate) {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'day')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.date() === 1\r\n\t\t\t\t\t\t\t? currentDate.month() === 0\r\n\t\t\t\t\t\t\t\t? currentDate.format('YYYY')\r\n\t\t\t\t\t\t\t\t: currentDate.format('M')\r\n\t\t\t\t\t\t\t: ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'day').startOf('day');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'month')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.month() === 0 ? currentDate.format('YYYY') : ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'month').startOf('month');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn marks;\r\n\t\t}, [sliderRange, isAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetDefaultRange(sliderRange);\r\n\t\t}, [sliderRange, setDefaultRange]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetRange(defaultRange);\r\n\t\t}, [defaultRange, setRange]);\r\n\r\n\t\tconst handleRangeChanging = useCallback(\r\n\t\t\t(values: number[]) => {\r\n\t\t\t\tsetRange(values);\r\n\t\t\t},\r\n\t\t\t[setRange]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetValue(range);\r\n\t\t}, [range]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tisSmallScreen && setIsAccurate(false);\r\n\t\t}, [isSmallScreen, setIsAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\t!isAccurate &&\r\n\t\t\t\tsetRange([\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.max([\r\n\t\t\t\t\t\t\tdayjs(range[0]).startOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[0]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.min([\r\n\t\t\t\t\t\t\tdayjs(range[1]).endOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[1]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t]);\r\n\t\t\t// eslint-disable-next-line\r\n\t\t}, [isAccurate]);\r\n\r\n\t\treturn dayjs(defaultRange[1]).diff(dayjs(defaultRange[0]), 'hours') >=\r\n\t\t\t48 ? (\r\n\t\t\t<Flex\r\n\t\t\t\tgap={16}\r\n\t\t\t\talign='center'\r\n\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t>\r\n\t\t\t\t<Segmented\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tdefaultValue={isAccurate}\r\n\t\t\t\t\tvalue={isAccurate}\r\n\t\t\t\t\tonChange={setIsAccurate}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t\t<TooltipAntd title={languages.byMonth[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t\t<ZoomOutOutlined />\r\n\t\t\t\t\t\t\t\t</TooltipAntd>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tvalue: false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t\t<TooltipAntd title={languages.byDay[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t\t<ZoomInOutlined />\r\n\t\t\t\t\t\t\t\t</TooltipAntd>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t\tdisabled: isSmallScreen,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\talign='stretch'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<SliderDiagram />\r\n\t\t\t\t\t<Slider\r\n\t\t\t\t\t\trange\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tmarks={marks}\r\n\t\t\t\t\t\tstep={null}\r\n\t\t\t\t\t\tdots={true}\r\n\t\t\t\t\t\ttooltip={{\r\n\t\t\t\t\t\t\tformatter: (value: number | undefined) => (\r\n\t\t\t\t\t\t\t\t<>{dayjs(value).format(isAccurate ? 'DD.MM.YY' : 'MM.YY')}</>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tmin={sliderRange[0]}\r\n\t\t\t\t\t\tmax={sliderRange[1]}\r\n\t\t\t\t\t\tdefaultValue={defaultRange}\r\n\t\t\t\t\t\tonChange={setValue}\r\n\t\t\t\t\t\tonChangeComplete={handleRangeChanging}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Flex>\r\n\t\t) : (\r\n\t\t\t<></>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default memo(YearSlider);\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useDebounce = (value: any, delay: number = 250) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const timerId = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce\r\n","import React, { memo, useCallback, useMemo, useState } from 'react';\r\nimport ListItem from './ListItem';\r\nimport { ListOptions } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Empty, Flex, List, Space } from 'antd';\r\nimport { getListToShowOnCurrentPageIds } from 'utils/transformData';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport LargeSpin from './LargeSpin';\r\nimport { listStore } from 'utils/listStore';\r\nimport { CheckboxChangeEvent } from 'antd/es/checkbox';\r\n\r\ninterface Props {\r\n\tfilteredListIds: string[];\r\n}\r\n\r\nconst ItemList: React.FC<Props> = observer(({ filteredListIds }) => {\r\n\tconst { loading, isSmallScreen, tourRefs } = userStore;\r\n\tconst { listOptions } = optionsStore;\r\n\tconst { lastDeletedItemIds, setLastDeletedItemIds } = listStore;\r\n\r\n\tconst [selectedItemIds, setSelectedItemIds] = useState<string[]>([]);\r\n\r\n\tconst deleteSelectedItems = useCallback(() => {\r\n\t\tsetSelectedItemIds((prevSelected: string[]) => {\r\n\t\t\tsetLastDeletedItemIds([...lastDeletedItemIds, ...prevSelected]);\r\n\t\t\treturn [];\r\n\t\t});\r\n\t}, [setLastDeletedItemIds, lastDeletedItemIds]);\r\n\r\n\tconst handleSelection = useCallback(\r\n\t\t(id: string) => (event: CheckboxChangeEvent) => {\r\n\t\t\tconst value = event.target.checked;\r\n\t\t\tvalue\r\n\t\t\t\t? setSelectedItemIds((prevSelected: string[]) => [...prevSelected, id])\r\n\t\t\t\t: setSelectedItemIds((prevSelected: string[]) =>\r\n\t\t\t\t\t\tprevSelected.filter((item: string) => item !== id)\r\n\t\t\t\t  );\r\n\t\t},\r\n\t\t[setSelectedItemIds]\r\n\t);\r\n\r\n\tconst debouncedOptions: ListOptions = useDebounce(listOptions);\r\n\r\n\tconst listToShowOnCurrentPageIds = useMemo(\r\n\t\t() =>\r\n\t\t\tgetListToShowOnCurrentPageIds(debouncedOptions, filteredListIds).filter(\r\n\t\t\t\t(key: string) => !lastDeletedItemIds.includes(key)\r\n\t\t\t),\r\n\t\t[filteredListIds, debouncedOptions, lastDeletedItemIds]\r\n\t);\r\n\r\n\treturn loading ? (\r\n\t\t<LargeSpin />\r\n\t) : !filteredListIds.length ? (\r\n\t\t<Empty\r\n\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\tdescription={''}\r\n\t\t/>\r\n\t) : debouncedOptions.mode === 'list' ? (\r\n\t\t<Flex\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\tref={tourRefs[1]}\r\n\t\t>\r\n\t\t\t<List style={{ inlineSize: '100%' }}>\r\n\t\t\t\t{listToShowOnCurrentPageIds.map((key: string) => (\r\n\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\tmode={debouncedOptions.mode}\r\n\t\t\t\t\t\tdeleteAll={deleteSelectedItems}\r\n\t\t\t\t\t\thandleSelection={handleSelection(key)}\r\n\t\t\t\t\t\tinitialItemId={key}\r\n\t\t\t\t\t\tselected={selectedItemIds.includes(key)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</List>\r\n\t\t</Flex>\r\n\t) : (\r\n\t\t<Space\r\n\t\t\tref={tourRefs[1]}\r\n\t\t\twrap\r\n\t\t\tsize={isSmallScreen ? 8 : 16}\r\n\t\t>\r\n\t\t\t{listToShowOnCurrentPageIds.map((key: string) => (\r\n\t\t\t\t<ListItem\r\n\t\t\t\t\tkey={key}\r\n\t\t\t\t\tmode={debouncedOptions.mode}\r\n\t\t\t\t\tdeleteAll={deleteSelectedItems}\r\n\t\t\t\t\thandleSelection={handleSelection(key)}\r\n\t\t\t\t\tinitialItemId={key}\r\n\t\t\t\t\tselected={selectedItemIds.includes(key)}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</Space>\r\n\t);\r\n});\r\n\r\nexport default memo(ItemList);\r\n","import React, { useCallback, useState } from 'react';\r\nimport { ExpenseItem } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button, Tooltip } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport ItemModal from './ItemModal';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport dayjs from 'dayjs';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst NewItemButton: React.FC = observer(() => {\r\n\tconst { addItem } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { userOptions } = optionsStore;\r\n\r\n\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\r\n\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t}, [setIsModalOpened]);\r\n\r\n\tconst addNewItem = useCallback(\r\n\t\t(item: ExpenseItem) => {\r\n\t\t\tconst date = dayjs().valueOf();\r\n\t\t\taddItem({ ...item, createdAt: date });\r\n\t\t\ttoggleIsModalOpened();\r\n\t\t},\r\n\t\t[addItem, toggleIsModalOpened]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.newItem[userOptions.language]}>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={toggleIsModalOpened}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<PlusOutlined />\r\n\t\t\t</Button>\r\n\t\t\t<ItemModal\r\n\t\t\t\topened={isModalOpened}\r\n\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\tsubmitItem={addNewItem}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default NewItemButton;\r\n","import React, { useMemo } from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select, Tag, Tooltip } from 'antd';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst tagRender = (props: any, categories: { [key: number]: category }) => {\r\n\tconst { label, value, onClose } = props;\r\n\tconst onPreventMouseDown = (event: any) => {\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\t};\r\n\tconst color =\r\n\t\tObject.keys(categories).length > 1 ? categories[value].color : '';\r\n\r\n\treturn (\r\n\t\t<Tag\r\n\t\t\tcolor={color}\r\n\t\t\tonMouseDown={onPreventMouseDown}\r\n\t\t\tclosable={true}\r\n\t\t\tonClose={onClose}\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginInlineEnd: 4,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<span\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcolor: color,\r\n\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{label}\r\n\t\t\t</span>\r\n\t\t</Tag>\r\n\t);\r\n};\r\n\r\nconst CategoriesSelect: React.FC = observer(() => {\r\n\tconst { userCategories, categoriesTemplate } = categoryStore;\r\n\tconst { isSmallScreen, isTourStarted } = userStore;\r\n\tconst { listOptions, handleCategoriesToFilterChange, userOptions } =\r\n\t\toptionsStore;\r\n\r\n\tconst categories = useMemo(\r\n\t\t() => (isTourStarted ? categoriesTemplate : userCategories),\r\n\t\t[isTourStarted, userCategories, categoriesTemplate]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.categoriesSelect[userOptions.language]}>\r\n\t\t\t<Select\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tmode='multiple'\r\n\t\t\t\tshowSearch={false}\r\n\t\t\t\ttagRender={(props) => tagRender(props, categories)}\r\n\t\t\t\tstyle={{ minInlineSize: '10em' }}\r\n\t\t\t\tvalue={listOptions.categoriesToFilterIds}\r\n\t\t\t\tonChange={handleCategoriesToFilterChange}\r\n\t\t\t\toptions={Object.keys(categories).map((key: string) => ({\r\n\t\t\t\t\tlabel: categories[key].name,\r\n\t\t\t\t\tvalue: key,\r\n\t\t\t\t}))}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default CategoriesSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Tooltip } from 'antd';\r\nimport {\r\n\tCalendarOutlined,\r\n\tDollarOutlined,\r\n\tFontColorsOutlined,\r\n\tSortAscendingOutlined,\r\n\tSortDescendingOutlined,\r\n} from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst SortSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst {\r\n\t\tsetIsSortingReversed,\r\n\t\tlistOptions,\r\n\t\tuserOptions,\r\n\t\thandleSortAlgorithmChanging,\r\n\t} = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t<Tooltip title={languages.sort.reverse[userOptions.language]}>\r\n\t\t\t\t{listOptions.isSortingReversed ? (\r\n\t\t\t\t\t<SortDescendingOutlined\r\n\t\t\t\t\t\tonClick={() => setIsSortingReversed(!listOptions.isSortingReversed)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<SortAscendingOutlined\r\n\t\t\t\t\t\tonClick={() => setIsSortingReversed(!listOptions.isSortingReversed)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Tooltip>\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.sortingAlgorithm}\r\n\t\t\t\tonChange={handleSortAlgorithmChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byDate[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'date',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byTitle[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<FontColorsOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'title',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byPrice[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<DollarOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'price',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default SortSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Tooltip } from 'antd';\r\nimport { MenuOutlined, TableOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst ModeSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleModeChanging, userOptions } = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.mode}\r\n\t\t\t\tonChange={handleModeChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.layout.list[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<MenuOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'list',\r\n\t\t\t\t\t\tdisabled: isSmallScreen,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.layout.grid[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<TableOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'grid',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default ModeSelect;\r\n","import { Divider, Flex, Pagination } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { memo, useMemo } from 'react';\r\nimport NewItemButton from './NewItemButton';\r\nimport YearSlider from './YearSlider';\r\nimport CategoriesSelect from './CategoriesSelect';\r\nimport SortSelect from './SortSelect';\r\nimport ModeSelect from './ModeSelect';\r\nimport constants from 'settings/constants';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport ResetButton from './ResetButton';\r\n\r\ninterface Props {\r\n\ttotal: number;\r\n}\r\n\r\nconst Selectors: React.FC<Props> = observer(({ total }) => {\r\n\tconst { isSmallScreen, loading, tourRefs } = userStore;\r\n\tconst {\r\n\t\tlistOptions,\r\n\t\tdefaultRange,\r\n\t\tresetListOptions,\r\n\t\thandlePageChanging,\r\n\t\tsetRange,\r\n\t\tsetIsAccurate,\r\n\t} = optionsStore;\r\n\r\n\tconst {\r\n\t\tisSortingReversed,\r\n\t\trange,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t\tcurrentPage,\r\n\t\tsortingAlgorithm,\r\n\t\tisAccurate,\r\n\t} = listOptions;\r\n\r\n\tconst isSettingsChanged = useMemo(\r\n\t\t() =>\r\n\t\t\tisSortingReversed ||\r\n\t\t\tcategoriesToFilterIds.length > 0 ||\r\n\t\t\tpageSize !== constants.defaultPageSize ||\r\n\t\t\tcurrentPage !== 1 ||\r\n\t\t\t(range[0] &&\r\n\t\t\t\trange[1] &&\r\n\t\t\t\t(range[0] !== defaultRange[0] || range[1]) !== defaultRange[1]) ||\r\n\t\t\tsortingAlgorithm !== 'date',\r\n\t\t[\r\n\t\t\trange,\r\n\t\t\tdefaultRange,\r\n\t\t\tisSortingReversed,\r\n\t\t\tcategoriesToFilterIds,\r\n\t\t\tpageSize,\r\n\t\t\tcurrentPage,\r\n\t\t\tsortingAlgorithm,\r\n\t\t]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tref={tourRefs[2]}\r\n\t\t\tvertical\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t>\r\n\t\t\t<Flex\r\n\t\t\t\tvertical\r\n\t\t\t\tgap={32}\r\n\t\t\t>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tgap={16}\r\n\t\t\t\t\tvertical={isSmallScreen}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t\t<NewItemButton />\r\n\t\t\t\t\t\t<CategoriesSelect />\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t\t<SortSelect />\r\n\t\t\t\t\t\t<ModeSelect />\r\n\t\t\t\t\t\t<ResetButton\r\n\t\t\t\t\t\t\tdisabled={!isSettingsChanged}\r\n\t\t\t\t\t\t\treset={resetListOptions}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<YearSlider\r\n\t\t\t\t\tsetIsAccurate={setIsAccurate}\r\n\t\t\t\t\tisAccurate={isAccurate}\r\n\t\t\t\t\trange={range}\r\n\t\t\t\t\tsetRange={setRange}\r\n\t\t\t\t/>\r\n\t\t\t</Flex>\r\n\t\t\t<Divider />\r\n\t\t\t{!loading && (\r\n\t\t\t\t<Pagination\r\n\t\t\t\t\tstyle={{ alignSelf: 'center' }}\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\tshowSizeChanger\r\n\t\t\t\t\tpageSizeOptions={constants.pageSizeOptions}\r\n\t\t\t\t\tcurrent={listOptions.currentPage}\r\n\t\t\t\t\tpageSize={listOptions.pageSize}\r\n\t\t\t\t\ttotal={total}\r\n\t\t\t\t\tonChange={handlePageChanging}\r\n\t\t\t\t\tonShowSizeChange={handlePageChanging}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default memo(Selectors);\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport ItemList from '../components/ItemList';\r\nimport { Flex } from 'antd';\r\nimport Selectors from 'components/Selectors';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { getFilteredListIds } from 'utils/transformData';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst Expenses: React.FC = observer(() => {\r\n\tconst { isSmallScreen, isTourStarted } = userStore;\r\n\tconst { userList, listTemplate } = listStore;\r\n\tconst { listOptions, userOptions, handleModeChanging, handlePageChanging } =\r\n\t\toptionsStore;\r\n\r\n\tconst list = useMemo(\r\n\t\t() => (isTourStarted ? listTemplate : userList),\r\n\t\t[isTourStarted, listTemplate, userList]\r\n\t);\r\n\r\n\tconst { language } = userOptions;\r\n\r\n\tconst {\r\n\t\trange,\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t} = listOptions;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isSmallScreen) {\r\n\t\t\thandleModeChanging('grid');\r\n\t\t}\r\n\t}, [isSmallScreen, handleModeChanging]);\r\n\r\n\tuseEffect(() => {\r\n\t\thandlePageChanging(1, pageSize);\r\n\t}, [\r\n\t\trange,\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t\thandlePageChanging,\r\n\t]);\r\n\r\n\tconst filteredListIds = useMemo(\r\n\t\t() => getFilteredListIds(listOptions, list, language),\r\n\t\t[list, language, listOptions]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t\talign='center'\r\n\t\t>\r\n\t\t\t<Selectors total={filteredListIds.length} />\r\n\t\t\t<ItemList filteredListIds={filteredListIds} />\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default Expenses;\r\n"],"names":["observer","_ref","id","onChange","userCategories","categoriesTemplate","categoryStore","isSmallScreen","isTourStarted","userStore","categories","useMemo","_jsx","Select","size","style","minInlineSize","value","suffixIcon","EditFilled","color","options","Object","keys","map","key","label","name","image","loading","setLoading","useState","handleChange","useCallback","info","file","status","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","originFileObj","url","ImgCrop","cropShape","rotationSlider","children","Upload","action","accept","listType","showUploadList","maxCount","Image","preview","src","width","borderRadius","LoadingOutlined","scale","PlusOutlined","opened","initialItemId","toggleOpened","submitItem","currency","setCurrency","constants","baseCurrency","currencyRates","userOptions","optionsStore","userList","listTemplate","listStore","list","language","initialItem","undefined","emptyItem","currentItem","setCurrentItem","handleTitleChange","event","target","prevItem","title","handleDateChange","date","valueOf","handleCategoryChange","categoryId","handlePriceChange","updatedItem","price","Number","calculatePrices","handleImageChange","convertToJpeg","then","useEffect","submitItemWithEnter","window","removeEventListener","TitleJSX","Input","required","type","onInput","PriceJSX","min","step","Math","round","CurrencyJSX","CurrencySelect","DateJSX","DatePicker","dayjs","minDate","startDate","maxDate","CategoryJSX","CategorySelect","ImageJSX","ImageUpload","Modal","open","okButtonProps","cancelButtonProps","onOk","onCancel","okText","CheckOutlined","cancelText","CloseOutlined","_jsxs","Form","layout","inlineSize","Item","languages","Row","Col","span","dateAndCat","MyInfoTooltip","onClick","Tooltip","InfoCircleOutlined","MyTitle","editable","Flex","justify","opacity","Typography","Text","strong","ellipsis","noTitle","Title","level","margin","MyImage","placement","blockSize","objectFit","Avatar","cursor","icon","noImage","FrownOutlined","MyDate","Statistic","format","MyCategory","category","vertical","align","Tag","filter","MyPrice","getSymbolAndPrice","MyEdit","EditOutlined","MyDelete","DeleteOutlined","MyCheckbox","selected","handleSelection","deleteAll","restoreAll","gap","Button","deleteSelected","restoreSelected","Checkbox","checked","mode","disabled","replaceItem","setLastDeletedItemIds","lastDeletedItemIds","isModalOpened","setIsModalOpened","toggleIsModalOpened","prevValue","updateCurrentItem","item","JSON","stringify","newItem","updatedAt","deleteItem","ActionsJSX","edit","delete","ImageAndDateJSX","tooltipTitle","_Fragment","concat","createdAt","CheckboxAndTitle","ItemModal","pointerEvents","Card","extra","bordered","actions","reset","ReloadOutlined","SliderDiagram","defaultRange","valuesByMonth","getValuesByMonth","data","labels","Array","length","fill","datasets","Line","plugins","legend","display","tooltip","enabled","scales","x","grid","y","elements","point","radius","line","cubicInterpolationMode","borderColor","aspectRatio","memo","Chart","register","LineElement","LineController","CategoryScale","LinearScale","PointElement","minMax","YearSlider","range","setRange","isAccurate","setIsAccurate","setDefaultRange","setValue","sliderRange","dates","values","max","marks","start","startOf","end","endOf","currentDate","isBefore","isSame","month","add","handleRangeChanging","diff","Segmented","defaultValue","TooltipAntd","byMonth","ZoomOutOutlined","byDay","ZoomInOutlined","Slider","dots","formatter","onChangeComplete","delay","arguments","debouncedValue","setDebouncedValue","timerId","setTimeout","clearTimeout","ItemList","filteredListIds","tourRefs","listOptions","selectedItemIds","setSelectedItemIds","deleteSelectedItems","prevSelected","debouncedOptions","useDebounce","listToShowOnCurrentPageIds","getListToShowOnCurrentPageIds","includes","LargeSpin","ref","List","ListItem","Space","wrap","Empty","PRESENTED_IMAGE_SIMPLE","description","addItem","addNewItem","handleCategoriesToFilterChange","categoriesSelect","showSearch","tagRender","props","onClose","onMouseDown","preventDefault","stopPropagation","closable","marginInlineEnd","categoriesToFilterIds","setIsSortingReversed","handleSortAlgorithmChanging","alignSelf","sort","reverse","isSortingReversed","SortDescendingOutlined","SortAscendingOutlined","sortingAlgorithm","byDate","CalendarOutlined","byTitle","FontColorsOutlined","byPrice","DollarOutlined","handleModeChanging","MenuOutlined","TableOutlined","Selectors","total","resetListOptions","handlePageChanging","pageSize","currentPage","isSettingsChanged","defaultPageSize","NewItemButton","CategoriesSelect","SortSelect","ModeSelect","ResetButton","Divider","Pagination","showSizeChanger","pageSizeOptions","current","onShowSizeChange","Expenses","getFilteredListIds"],"sourceRoot":""}