{"version":3,"file":"static/js/828.db478807.chunk.js","mappings":"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","sources":["components/YearSlider.tsx","hooks/useDebounce.ts","utils/calculatePrices.ts","components/CategorySelect.tsx","components/ItemModal.tsx","components/ListItem.tsx","components/ItemList.tsx","components/NewItemButton.tsx","components/CategoriesSelect.tsx","components/SortSelect.tsx","components/ModeSelect.tsx","components/Selectors.tsx","pages/Expenses.tsx","utils/transformData.ts","utils/utils.ts"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Slider } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport { ExpenseItem } from 'settings/interfaces';\r\nimport dayjs from 'dayjs';\r\nimport minMax from 'dayjs/plugin/minMax';\r\nimport { ZoomInOutlined, ZoomOutOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ndayjs.extend(minMax);\r\n\r\ninterface Props {\r\n\trange: number[];\r\n\tdefaultRange: number[];\r\n\tsetRange: (arg0: number[]) => void;\r\n\tsetDefaultRange: (arg0: number[]) => void;\r\n\tisAccurate: boolean;\r\n\tsetIsAccurate: (arg0: boolean) => void;\r\n}\r\n\r\nconst YearSlider: React.FC<Props> = observer(\r\n\t({\r\n\t\trange,\r\n\t\tdefaultRange,\r\n\t\tsetRange,\r\n\t\tsetDefaultRange,\r\n\t\tisAccurate,\r\n\t\tsetIsAccurate,\r\n\t}) => {\r\n\t\tconst { list } = listStore;\r\n\t\tconst { isSmallScreen } = userStore;\r\n\r\n\t\tconst [value, setValue] = useState(defaultRange);\r\n\r\n\t\tconst sliderRange: [number, number] = useMemo(() => {\r\n\t\t\tconst mappedList = list.map((item: ExpenseItem) => item.date);\r\n\t\t\treturn [\r\n\t\t\t\tdayjs.min(mappedList)?.valueOf() || 0,\r\n\t\t\t\tdayjs.max(mappedList)?.valueOf() || 0,\r\n\t\t\t];\r\n\t\t}, [list]);\r\n\r\n\t\tconst marks: { [key: number]: string } = useMemo(() => {\r\n\t\t\tconst start = dayjs(sliderRange[0]).startOf('month');\r\n\t\t\tconst end = dayjs(sliderRange[1]).endOf('month');\r\n\t\t\tconst marks: { [key: number]: string } = {};\r\n\t\t\tlet currentDate = start;\r\n\t\t\tif (isAccurate) {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'day')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.date() === 1\r\n\t\t\t\t\t\t\t? currentDate.month() === 0\r\n\t\t\t\t\t\t\t\t? currentDate.format('YYYY')\r\n\t\t\t\t\t\t\t\t: currentDate.format('M')\r\n\t\t\t\t\t\t\t: ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'day').startOf('day');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'month')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.month() === 0 ? currentDate.format('YYYY') : ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'month').startOf('month');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn marks;\r\n\t\t}, [sliderRange, isAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetDefaultRange(sliderRange);\r\n\t\t\tsetRange(sliderRange);\r\n\t\t}, [sliderRange, setDefaultRange, setRange]);\r\n\r\n\t\tconst handleRangeChanging = useCallback(\r\n\t\t\t(values: number[]) => {\r\n\t\t\t\tsetRange(values);\r\n\t\t\t},\r\n\t\t\t[setRange]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetValue(range);\r\n\t\t}, [range]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tisSmallScreen && setIsAccurate(false);\r\n\t\t}, [isSmallScreen, setIsAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\t!isAccurate &&\r\n\t\t\t\tsetRange([\r\n\t\t\t\t\tdayjs(range[0]).startOf('month').valueOf(),\r\n\t\t\t\t\tdayjs(range[1]).endOf('month').valueOf(),\r\n\t\t\t\t]);\r\n\t\t\t// eslint-disable-next-line\r\n\t\t}, [isAccurate]);\r\n\r\n\t\treturn (\r\n\t\t\t<Flex gap={16}>\r\n\t\t\t\t<Segmented\r\n\t\t\t\t\tdefaultValue={isAccurate}\r\n\t\t\t\t\tvalue={isAccurate}\r\n\t\t\t\t\tonChange={setIsAccurate}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{ label: <ZoomOutOutlined />, value: false },\r\n\t\t\t\t\t\t{ label: <ZoomInOutlined />, value: true, disabled: isSmallScreen },\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Slider\r\n\t\t\t\t\trange\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tmarks={marks}\r\n\t\t\t\t\tstep={null}\r\n\t\t\t\t\tdots={true}\r\n\t\t\t\t\ttooltip={{\r\n\t\t\t\t\t\tformatter: (value: number | undefined) => (\r\n\t\t\t\t\t\t\t<>{dayjs(value).format(isAccurate ? 'DD.MM.YY' : 'MM.YY')}</>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tmin={sliderRange[0]}\r\n\t\t\t\t\tmax={sliderRange[1]}\r\n\t\t\t\t\tdefaultValue={defaultRange}\r\n\t\t\t\t\tonChange={setValue}\r\n\t\t\t\t\tonChangeComplete={handleRangeChanging}\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t/>\r\n\t\t\t</Flex>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default YearSlider;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useDebounce = (value: any, delay: number = 250) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const timerId = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce\r\n","import constants from '../settings/constants';\r\nimport { currencies, rates } from '../settings/interfaces';\r\n\r\nconst calculatePrices = (\r\n\tprices: currencies,\r\n\trates: rates,\r\n\tcurrency: string = constants.baseCurrency\r\n) => {\r\n\tswitch (currency) {\r\n\t\tcase 'USD':\r\n\t\t\tprices['EUR'] = prices['USD'] * rates['EUR'];\r\n\t\t\tprices['RUB'] = prices['USD'] * rates['RUB'];\r\n\t\t\tbreak;\r\n\t\tcase 'EUR':\r\n\t\t\tprices['USD'] = prices['EUR'] / rates['EUR'];\r\n\t\t\tprices['RUB'] = (prices['EUR'] * rates['RUB']) / rates['EUR'];\r\n\t\t\tbreak;\r\n\t\tcase 'RUB':\r\n\t\t\tprices['EUR'] = (prices['RUB'] / rates['RUB']) * rates['EUR'];\r\n\t\t\tprices['USD'] = prices['RUB'] / rates['RUB'];\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t}\r\n\r\n\treturn prices;\r\n};\r\n\r\nexport default calculatePrices;\r\n","import React from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select } from 'antd';\r\nimport { EditFilled } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tvalue: category;\r\n\tonChange: (arg0: number) => void;\r\n}\r\n\r\nconst CategorySelect: React.FC<Props> = observer(({ value, onChange }) => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tallowClear\r\n\t\t\tstyle={{ minInlineSize: '7em' }}\r\n\t\t\tonChange={onChange}\r\n\t\t\tvalue={value?.id}\r\n\t\t\tsuffixIcon={<EditFilled style={{ color: value?.color }} />}\r\n\t\t>\r\n\t\t\t{categories.map((category: category) => (\r\n\t\t\t\t<Select.Option\r\n\t\t\t\t\tkey={category.id}\r\n\t\t\t\t\tvalue={category.id}\r\n\t\t\t\t>\r\n\t\t\t\t\t{category.name}\r\n\t\t\t\t</Select.Option>\r\n\t\t\t))}\r\n\t\t</Select>\r\n\t);\r\n});\r\n\r\nexport default CategorySelect;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport calculatePrices from '../utils/calculatePrices';\r\nimport { ExpenseItem, category } from '../settings/interfaces';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport languages from 'settings/languages';\r\nimport { Col, DatePicker, Form, Input, Modal, Row } from 'antd';\r\nimport CurrencySelect from 'components/CurrencySelect';\r\nimport constants from 'settings/constants';\r\nimport dayjs from 'dayjs';\r\nimport CategorySelect from './CategorySelect';\r\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\ninterface Props {\r\n\topened: boolean;\r\n\tinitialItem: ExpenseItem;\r\n\ttoggleOpened: () => void;\r\n\tsubmitItem: (arg0: ExpenseItem) => void;\r\n}\r\n\r\nconst ItemModal: React.FC<Props> = observer(\r\n\t({ opened, initialItem, toggleOpened, submitItem }) => {\r\n\t\tconst [currency, setCurrency] = useState(constants.baseCurrency);\r\n\t\tconst { categories } = categoryStore;\r\n\t\tconst { currencyRates, isSmallScreen } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\r\n\t\tconst { language } = userOptions;\r\n\r\n\t\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(initialItem);\r\n\r\n\t\tconst handleTitleChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\ttitle: value,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleDateChange = useCallback(\r\n\t\t\t(value: dayjs.Dayjs) => {\r\n\t\t\t\tif (value)\r\n\t\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tdate: value,\r\n\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleCategoryChange = useCallback(\r\n\t\t\t(id: number) => {\r\n\t\t\t\tconst foundCategory = categories.find((cat: category) => cat.id === id);\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\tcategory: foundCategory || prevItem.category,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem, categories]\r\n\t\t);\r\n\r\n\t\tconst handlePriceChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem) => {\r\n\t\t\t\t\tconst updatedItem = {\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tprice: {\r\n\t\t\t\t\t\t\t...prevItem.price,\r\n\t\t\t\t\t\t\t[currency]: Number(value),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...updatedItem,\r\n\t\t\t\t\t\tprice: calculatePrices(updatedItem.price, currencyRates, currency),\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentItem, currency, currencyRates]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tconst submitItemWithEnter = (event: KeyboardEvent) => {\r\n\t\t\t\tif (event.key === 'Enter' && opened) {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\twindow.addEventListener('keyup', submitItemWithEnter);\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t};\r\n\t\t}, [currentItem, submitItem, opened]);\r\n\r\n\t\tconst TitleJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={currentItem.title}\r\n\t\t\t\tonInput={handleTitleChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst PriceJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='number'\r\n\t\t\t\tmin='1'\r\n\t\t\t\tstep='1'\r\n\t\t\t\tvalue={Math.round(currentItem.price[currency])}\r\n\t\t\t\tonInput={handlePriceChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CurrencyJSX = (\r\n\t\t\t<CurrencySelect\r\n\t\t\t\tvalue={currency}\r\n\t\t\t\tsetCurrency={setCurrency}\r\n\t\t\t\tonChange={setCurrency}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst DateJSX = (\r\n\t\t\t<DatePicker\r\n\t\t\t\trequired\r\n\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\tvalue={currentItem.date}\r\n\t\t\t\tminDate={constants.startDate}\r\n\t\t\t\tmaxDate={dayjs()}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CategoryJSX = (\r\n\t\t\t<CategorySelect\r\n\t\t\t\tvalue={currentItem.category}\r\n\t\t\t\tonChange={handleCategoryChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\tstyle={{ inlineSize: '' }}\r\n\t\t\t\topen={opened}\r\n\t\t\t\tokButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tcancelButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tonOk={() => {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t}}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetCurrentItem(initialItem);\r\n\t\t\t\t\ttoggleOpened();\r\n\t\t\t\t}}\r\n\t\t\t\tokText={<CheckOutlined />}\r\n\t\t\t\tcancelText={<CloseOutlined />}\r\n\t\t\t>\r\n\t\t\t\t<Form\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tlayout='vertical'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Form.Item label={languages.title[language]}>{TitleJSX}</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.price[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={16}>{PriceJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={7}>{CurrencyJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.dateAndCat[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={10}>{DateJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={13}>{CategoryJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default ItemModal;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport { ExpenseItem, Mode } from '../settings/interfaces';\r\nimport Item from 'antd/es/list/Item';\r\nimport { Card, Col, Flex, Progress, Statistic, Tag, Typography } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport Title from 'antd/es/typography/Title';\r\nimport { CloseOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\nimport ItemModal from './ItemModal';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\ninterface Props {\r\n\tmode: Mode;\r\n\tinitialItem: ExpenseItem;\r\n}\r\n\r\nconst ListItem: React.FC<Props> = observer(({ mode, initialItem }) => {\r\n\tconst { id, category, date, title, price } = initialItem;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { replaceItem, removeItem } = listStore;\r\n\tconst { userOptions } = optionsStore;\r\n\r\n\tconst { currency, language } = userOptions;\r\n\r\n\tconst [isItemDeleting, setIsItemDeleting] = useState<boolean>(false);\r\n\tconst [deleteValue, setDeleteValue] = useState<number>(0);\r\n\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\r\n\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>({\r\n\t\tid: id,\r\n\t\tdate: date,\r\n\t\ttitle: title,\r\n\t\tcategory: category,\r\n\t\tprice: price,\r\n\t});\r\n\r\n\tconst toggleIsItemDeleting = () => {\r\n\t\tsetIsItemDeleting((prevValue: boolean) => !prevValue);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst deleteId = setInterval(() => {\r\n\t\t\tsetDeleteValue((prevValue: number) => {\r\n\t\t\t\tconst newValue = prevValue + 10;\r\n\t\t\t\tif (newValue >= userOptions.deleteDelay && isItemDeleting) {\r\n\t\t\t\t\tremoveItem(currentItem);\r\n\t\t\t\t}\r\n\t\t\t\treturn newValue;\r\n\t\t\t});\r\n\t\t}, 10);\r\n\t\tif (!isItemDeleting) {\r\n\t\t\tclearInterval(deleteId);\r\n\t\t\tsetDeleteValue(0);\r\n\t\t}\r\n\t\treturn () => clearInterval(deleteId);\r\n\t}, [isItemDeleting, currentItem, removeItem, userOptions.deleteDelay]);\r\n\r\n\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t}, [setIsModalOpened]);\r\n\r\n\tconst updateCurrentItem = useCallback(\r\n\t\t(item: ExpenseItem) => {\r\n\t\t\tsetCurrentItem(item);\r\n\t\t\treplaceItem(item);\r\n\t\t\ttoggleIsModalOpened();\r\n\t\t},\r\n\t\t[setCurrentItem, replaceItem, toggleIsModalOpened]\r\n\t);\r\n\r\n\tconst TitleJSX = (\r\n\t\t<Flex\r\n\t\t\tjustify='center'\r\n\t\t\tstyle={{\r\n\t\t\t\topacity: isItemDeleting || !currentItem.title ? '.5' : '1',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{isSmallScreen ? (\r\n\t\t\t\t<Typography.Text\r\n\t\t\t\t\tstrong\r\n\t\t\t\t\tellipsis\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentItem.title || languages.noTitle[language]}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t) : (\r\n\t\t\t\t<Title\r\n\t\t\t\t\tellipsis\r\n\t\t\t\t\tlevel={3}\r\n\t\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentItem.title || languages.noTitle[language]}\r\n\t\t\t\t</Title>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst DateJSX = (\r\n\t\t<Statistic\r\n\t\t\tvalue={currentItem.date.format('DD.MM.YY')}\r\n\t\t\tstyle={{\r\n\t\t\t\tscale: isSmallScreen ? '.75' : '1',\r\n\t\t\t\topacity: isItemDeleting ? '.5' : '1',\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n\r\n\tconst CategoryJSX = (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\talign='stretch'\r\n\t\t\tstyle={{\r\n\t\t\t\topacity: isItemDeleting ? '.5' : '1',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Tag color={currentItem.category.color}>\r\n\t\t\t\t<span\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmargin: 'auto',\r\n\t\t\t\t\t\tcolor: currentItem.category.color,\r\n\t\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentItem.category.name}\r\n\t\t\t\t</span>\r\n\t\t\t</Tag>\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst PriceJSX = (\r\n\t\t<Flex\r\n\t\t\tjustify='center'\r\n\t\t\tstyle={{\r\n\t\t\t\topacity: isItemDeleting ? '.5' : '1',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{isSmallScreen ? (\r\n\t\t\t\t<Typography.Text strong>\r\n\t\t\t\t\t{getSymbolAndPrice(currency)}\r\n\t\t\t\t\t{Math.round(currentItem.price[currency])}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t) : (\r\n\t\t\t\t<Title\r\n\t\t\t\t\tlevel={3}\r\n\t\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{getSymbolAndPrice(currency, currentItem.price[currency])}\r\n\t\t\t\t</Title>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst DeleteJSX = isItemDeleting ? (\r\n\t\t<CloseOutlined\r\n\t\t\tonClick={toggleIsItemDeleting}\r\n\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t/>\r\n\t) : (\r\n\t\t<DeleteOutlined\r\n\t\t\tonClick={toggleIsItemDeleting}\r\n\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t/>\r\n\t);\r\n\r\n\tconst ProgressJSX = (\r\n\t\t<Progress\r\n\t\t\tshowInfo={false}\r\n\t\t\tpercent={(deleteValue / userOptions.deleteDelay) * 100}\r\n\t\t\tstatus='exception'\r\n\t\t/>\r\n\t);\r\n\r\n\tconst EditJSX = (\r\n\t\t<EditOutlined\r\n\t\t\tonClick={\r\n\t\t\t\t!isItemDeleting ? () => updateCurrentItem({ ...initialItem }) : () => {}\r\n\t\t\t}\r\n\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t/>\r\n\t);\r\n\r\n\tconst ActionsJSX = (\r\n\t\t<Flex justify='space-evenly'>\r\n\t\t\t{EditJSX}\r\n\t\t\t{PriceJSX}\r\n\t\t\t{DeleteJSX}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ItemModal\r\n\t\t\t\topened={isModalOpened}\r\n\t\t\t\tinitialItem={currentItem}\r\n\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\tsubmitItem={updateCurrentItem}\r\n\t\t\t/>\r\n\t\t\t{mode === 'list' ? (\r\n\t\t\t\t<Item>\r\n\t\t\t\t\t{!isItemDeleting ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Col>{DateJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={9}>{TitleJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={3}>{CategoryJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={5}>{PriceJSX}</Col>\r\n\t\t\t\t\t\t\t<Col>{EditJSX}</Col>\r\n\t\t\t\t\t\t\t<Col>{DeleteJSX}</Col>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Col span={21}>{ProgressJSX}</Col>\r\n\t\t\t\t\t\t\t<Col>{DeleteJSX}</Col>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Item>\r\n\t\t\t) : (\r\n\t\t\t\t<Card\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\tbordered\r\n\t\t\t\t\ttitle={isItemDeleting ? ProgressJSX : TitleJSX}\r\n\t\t\t\t\tactions={[ActionsJSX]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Flex justify='center'>\r\n\t\t\t\t\t\t<Flex\r\n\t\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\t\talign='stretch'\r\n\t\t\t\t\t\t\tgap={4}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{DateJSX}\r\n\t\t\t\t\t\t\t{CategoryJSX}\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Card>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default ListItem;\r\n","import React, { memo, useEffect, useMemo, useState } from 'react';\r\nimport ListItem from './ListItem';\r\nimport { ExpenseItem, ListOptions } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Col, Empty, List, Row } from 'antd';\r\nimport { getListToShowOnCurrentPage } from 'utils/transformData';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport LargeSpin from './LargeSpin';\r\n\r\ninterface Props {\r\n\tfilteredList: ExpenseItem[];\r\n}\r\n\r\nconst ItemList: React.FC<Props> = observer(({ filteredList }) => {\r\n\tconst { loading } = listStore;\r\n\tconst { width } = userStore;\r\n\tconst { listOptions } = optionsStore;\r\n\r\n\tconst debouncedOptions: ListOptions = useDebounce(listOptions);\r\n\r\n\tconst [colNumber, setColNumber] = useState<number>(4);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (width < 350) {\r\n\t\t\tsetColNumber(1);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (width < 450) {\r\n\t\t\tsetColNumber(2);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (width < 850) {\r\n\t\t\tsetColNumber(3);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetColNumber(4);\r\n\t}, [setColNumber, width]);\r\n\r\n\tconst listToShowOnCurrentPage = useMemo(\r\n\t\t() => getListToShowOnCurrentPage(debouncedOptions, filteredList),\r\n\t\t[filteredList, debouncedOptions]\r\n\t);\r\n\r\n\tconst splittedList = useMemo(() => {\r\n\t\tconst result: ExpenseItem[][] = [];\r\n\t\tlet row = -1;\r\n\r\n\t\tlistToShowOnCurrentPage.forEach((item: ExpenseItem, col: number) => {\r\n\t\t\tif (col % colNumber === 0) {\r\n\t\t\t\trow++;\r\n\t\t\t\tresult.push([]);\r\n\t\t\t}\r\n\t\t\tresult[row].push(item);\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}, [colNumber, listToShowOnCurrentPage]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<LargeSpin />\r\n\t\t\t) : (\r\n\t\t\t\t!filteredList.length && (\r\n\t\t\t\t\t<Empty\r\n\t\t\t\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\t\t\t\tdescription={''}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t)}\r\n\t\t\t{debouncedOptions.mode === 'list' ? (\r\n\t\t\t\t<List style={{ inlineSize: '100%' }}>\r\n\t\t\t\t\t{listToShowOnCurrentPage.map((item: ExpenseItem) => (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\tmode={debouncedOptions.mode}\r\n\t\t\t\t\t\t\tinitialItem={item}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</List>\r\n\t\t\t) : (\r\n\t\t\t\tsplittedList.map((row: ExpenseItem[]) => (\r\n\t\t\t\t\t<Row\r\n\t\t\t\t\t\tkey={row[0].id}\r\n\t\t\t\t\t\tgutter={16}\r\n\t\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{row.map((item: ExpenseItem) => (\r\n\t\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\tspan={24 / colNumber}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\tmode={debouncedOptions.mode}\r\n\t\t\t\t\t\t\t\t\tinitialItem={item}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t))\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default memo(ItemList);\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\nimport { ExpenseItem } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport constants from 'settings/constants';\r\nimport ItemModal from './ItemModal';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\n\r\nconst NewItemButton: React.FC = observer(() => {\r\n\tconst { addItem } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\tconst emptyItem: ExpenseItem = useMemo(() => constants.emptyItem, []);\r\n\r\n\tconst [newItem, setNewItem] = useState<ExpenseItem>(emptyItem);\r\n\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\r\n\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t}, [setIsModalOpened]);\r\n\r\n\tconst clearItem = useCallback(() => {\r\n\t\tsetNewItem(emptyItem);\r\n\t}, [setNewItem, emptyItem]);\r\n\r\n\tconst addNewItem = useCallback(\r\n\t\t(item: ExpenseItem) => {\r\n\t\t\taddItem(item);\r\n\t\t\tclearItem();\r\n\t\t\ttoggleIsModalOpened();\r\n\t\t},\r\n\t\t[addItem, toggleIsModalOpened, clearItem]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={toggleIsModalOpened}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<PlusOutlined />\r\n\t\t\t</Button>\r\n\t\t\t<ItemModal\r\n\t\t\t\topened={isModalOpened}\r\n\t\t\t\tinitialItem={newItem}\r\n\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\tsubmitItem={addNewItem}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default NewItemButton;\r\n","import React from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select, Tag } from 'antd';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst tagRender = (props: any, categories: category[]) => {\r\n\tconst { label, value, onClose } = props;\r\n\tconst onPreventMouseDown = (event: any) => {\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\t};\r\n\r\n\tconst color = categories.find(\r\n\t\t(category: category) => category.id === value\r\n\t)?.color;\r\n\r\n\treturn (\r\n\t\t<Tag\r\n\t\t\tcolor={color}\r\n\t\t\tonMouseDown={onPreventMouseDown}\r\n\t\t\tclosable={true}\r\n\t\t\tonClose={onClose}\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginInlineEnd: 4,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<span\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcolor: color,\r\n\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{label}\r\n\t\t\t</span>\r\n\t\t</Tag>\r\n\t);\r\n};\r\n\r\nconst CategoriesSelect: React.FC = observer(() => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleCategoriesToFilterChange } = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tmode='multiple'\r\n\t\t\tshowSearch={false}\r\n\t\t\ttagRender={(props) => tagRender(props, categories)}\r\n\t\t\tstyle={{ minInlineSize: '10em' }}\r\n\t\t\tvalue={listOptions.categoriesToFilter.map((value: category) => value.id)}\r\n\t\t\tonChange={handleCategoriesToFilterChange}\r\n\t\t>\r\n\t\t\t{categories.map((category: category) => (\r\n\t\t\t\t<Select.Option\r\n\t\t\t\t\tkey={category.id}\r\n\t\t\t\t\tvalue={category.id}\r\n\t\t\t\t>\r\n\t\t\t\t\t{category.name}\r\n\t\t\t\t</Select.Option>\r\n\t\t\t))}\r\n\t\t</Select>\r\n\t);\r\n});\r\n\r\nexport default CategoriesSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented } from 'antd';\r\nimport {\r\n\tCalendarOutlined,\r\n\tDollarOutlined,\r\n\tFontColorsOutlined,\r\n\tSortAscendingOutlined,\r\n\tSortDescendingOutlined,\r\n} from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst SortSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { setIsSortingReversed, listOptions, handleSortAlgorithmChanging } =\r\n\t\toptionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t{listOptions.isSortingReversed ? (\r\n\t\t\t\t<SortDescendingOutlined />\r\n\t\t\t) : (\r\n\t\t\t\t<SortAscendingOutlined />\r\n\t\t\t)}\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.sortingAlgorithm}\r\n\t\t\t\tonDoubleClick={() =>\r\n\t\t\t\t\tsetIsSortingReversed(!listOptions.isSortingReversed)\r\n\t\t\t\t}\r\n\t\t\t\tonChange={handleSortAlgorithmChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{ label: <CalendarOutlined />, value: 'date' },\r\n\t\t\t\t\t{ label: <FontColorsOutlined />, value: 'title' },\r\n\t\t\t\t\t{ label: <DollarOutlined />, value: 'price' },\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default SortSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented } from 'antd';\r\nimport { MenuOutlined, TableOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst ModeSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleModeChanging } = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.mode}\r\n\t\t\t\tonChange={handleModeChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{ label: <MenuOutlined />, value: 'list', disabled: isSmallScreen },\r\n\t\t\t\t\t{ label: <TableOutlined />, value: 'grid' },\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default ModeSelect;\r\n","import { Button, Divider, Flex, Pagination } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useMemo } from 'react';\r\nimport NewItemButton from './NewItemButton';\r\nimport YearSlider from './YearSlider';\r\nimport CategoriesSelect from './CategoriesSelect';\r\nimport SortSelect from './SortSelect';\r\nimport ModeSelect from './ModeSelect';\r\nimport { ReloadOutlined } from '@ant-design/icons';\r\nimport { listStore } from 'utils/listStore';\r\nimport constants from 'settings/constants';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\ninterface Props {\r\n\ttotal: number;\r\n}\r\n\r\nconst Selectors: React.FC<Props> = observer(({ total }) => {\r\n\tconst { loading } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst {\r\n\t\tlistOptions,\r\n\t\tresetSettings,\r\n\t\thandlePageChanging,\r\n\t\tsetRange,\r\n\t\tsetDefaultRange,\r\n\t\tsetIsAccurate,\r\n\t} = optionsStore;\r\n\r\n\tconst {\r\n\t\tisSortingReversed,\r\n\t\trange,\r\n\t\tdefaultRange,\r\n\t\tcategoriesToFilter,\r\n\t\tpageSize,\r\n\t\tcurrentPage,\r\n\t\tsortingAlgorithm,\r\n\t\tisAccurate,\r\n\t} = listOptions;\r\n\r\n\tconst isSettingsChanged = useMemo(\r\n\t\t() =>\r\n\t\t\tisSortingReversed ||\r\n\t\t\tcategoriesToFilter.length > 0 ||\r\n\t\t\tpageSize !== constants.defaultPageSize ||\r\n\t\t\tcurrentPage !== 1 ||\r\n\t\t\t(range[0] &&\r\n\t\t\t\trange[1] &&\r\n\t\t\t\t(range[0] !== defaultRange[0] || range[1]) !== defaultRange[1]) ||\r\n\t\t\tsortingAlgorithm !== 'date',\r\n\t\t[\r\n\t\t\trange,\r\n\t\t\tdefaultRange,\r\n\t\t\tisSortingReversed,\r\n\t\t\tcategoriesToFilter,\r\n\t\t\tpageSize,\r\n\t\t\tcurrentPage,\r\n\t\t\tsortingAlgorithm,\r\n\t\t]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t>\r\n\t\t\t<Flex\r\n\t\t\t\tvertical\r\n\t\t\t\tgap={32}\r\n\t\t\t>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tgap={16}\r\n\t\t\t\t\tvertical={isSmallScreen}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t\t<NewItemButton />\r\n\t\t\t\t\t\t<CategoriesSelect />\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t\t<SortSelect />\r\n\t\t\t\t\t\t<ModeSelect />\r\n\t\t\t\t\t\t{isSettingsChanged && (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={resetSettings}\r\n\t\t\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ReloadOutlined />\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t{!loading && (\r\n\t\t\t\t\t<YearSlider\r\n\t\t\t\t\t\tsetIsAccurate={setIsAccurate}\r\n\t\t\t\t\t\tisAccurate={isAccurate}\r\n\t\t\t\t\t\trange={range}\r\n\t\t\t\t\t\tdefaultRange={defaultRange}\r\n\t\t\t\t\t\tsetRange={setRange}\r\n\t\t\t\t\t\tsetDefaultRange={setDefaultRange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Flex>\r\n\t\t\t<Divider />\r\n\t\t\t{!loading && (\r\n\t\t\t\t<Pagination\r\n\t\t\t\t\tstyle={{ alignSelf: 'center' }}\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\tshowSizeChanger\r\n\t\t\t\t\tpageSizeOptions={constants.pageSizeOptions}\r\n\t\t\t\t\tcurrent={listOptions.currentPage}\r\n\t\t\t\t\tpageSize={listOptions.pageSize}\r\n\t\t\t\t\ttotal={total}\r\n\t\t\t\t\tonChange={handlePageChanging}\r\n\t\t\t\t\tonShowSizeChange={handlePageChanging}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default Selectors;\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport ItemList from '../components/ItemList';\r\nimport { Flex } from 'antd';\r\nimport Selectors from 'components/Selectors';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { getFilteredList } from 'utils/transformData';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst Expenses: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { listOptions, userOptions, handleModeChanging, handlePageChanging } =\r\n\t\toptionsStore;\r\n\r\n\tconst { language } = userOptions;\r\n\r\n\tconst {\r\n\t\trange,\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tcategoriesToFilter,\r\n\t\tpageSize,\r\n\t\tisAccurate,\r\n\t} = listOptions;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isSmallScreen) {\r\n\t\t\thandleModeChanging('grid');\r\n\t\t}\r\n\t}, [isSmallScreen, handleModeChanging]);\r\n\r\n\tuseEffect(() => {\r\n\t\thandlePageChanging(1, pageSize);\r\n\t}, [\r\n\t\trange,\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tcategoriesToFilter,\r\n\t\tpageSize,\r\n\t\thandlePageChanging,\r\n\t]);\r\n\r\n\tconst filteredList = useMemo(\r\n\t\t() => getFilteredList(listOptions, list, language, isAccurate),\r\n\t\t[list, language, listOptions, isAccurate]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t\talign='center'\r\n\t\t>\r\n\t\t\t<Selectors total={filteredList.length} />\r\n\t\t\t<ItemList filteredList={filteredList} />\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default Expenses;\r\n","import {\r\n\tExpenseItem,\r\n\tListOptions,\r\n\tValue,\r\n\tcategory,\r\n\tlanguage,\r\n} from 'settings/interfaces';\r\nimport { sortBy } from './utils';\r\nimport dayjs from 'dayjs';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\n\r\ndayjs.extend(isBetween);\r\n\r\nexport const getFilteredList = (\r\n\toptions: ListOptions,\r\n\tlist: ExpenseItem[],\r\n\tlanguage: language,\r\n\tisAccurate: boolean\r\n) => {\r\n\tconst { range, categoriesToFilter, sortingAlgorithm, isSortingReversed } =\r\n\t\toptions;\r\n\treturn sortBy(\r\n\t\tlist.filter((item: ExpenseItem) => {\r\n\t\t\tif (!categoriesToFilter.length) {\r\n\t\t\t\treturn item.date.isBetween(\r\n\t\t\t\t\tdayjs(range[0]),\r\n\t\t\t\t\tdayjs(range[1]),\r\n\t\t\t\t\tisAccurate ? 'day' : 'month',\r\n\t\t\t\t\t'[]'\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\titem.date.isBetween(dayjs(range[0]), dayjs(range[1]), 'day', '[]') &&\r\n\t\t\t\t\tcategoriesToFilter.some(\r\n\t\t\t\t\t\t(category: category) => item.category.id === category.id\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}),\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tlanguage\r\n\t);\r\n};\r\n\r\nexport const getListToShowOnCurrentPage = (\r\n\toptions: ListOptions,\r\n\tfilteredList: ExpenseItem[]\r\n) => {\r\n\tconst { currentPage, pageSize } = options;\r\n\tconst startIndex = (currentPage - 1) * pageSize;\r\n\tconst endIndex = startIndex + pageSize;\r\n\treturn filteredList.slice(startIndex, endIndex);\r\n};\r\n\r\nexport const getValuesForBarDiagram = (\r\n\tlist: ExpenseItem[],\r\n\tcurrency: string\r\n) => {\r\n\tconst result: { [key: number]: number } = {};\r\n\tlist.forEach((item: ExpenseItem) => {\r\n\t\tconst key: number = item.date.year();\r\n\t\tif (result[key] === undefined) {\r\n\t\t\tresult[key] = 0;\r\n\t\t} else {\r\n\t\t\tresult[key] += item.price[currency];\r\n\t\t}\r\n\t});\r\n\r\n\tfor (let year in result) {\r\n\t\tresult[year] = Math.round(result[year]);\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\nexport const getValuesForPieDiagram = (\r\n\tlist: ExpenseItem[],\r\n\trange: number[],\r\n\tcurrency: string,\r\n\tisAccurate: boolean\r\n) => {\r\n\tconst values: Value[] = [];\r\n\tlist.forEach((item: ExpenseItem) => {\r\n\t\tif (\r\n\t\t\titem.date.isBetween(\r\n\t\t\t\tdayjs(range[0]),\r\n\t\t\t\tdayjs(range[1]),\r\n\t\t\t\tisAccurate ? 'day' : 'month',\r\n\t\t\t\t'[]'\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tconst indexOfCategory: number = values.findIndex(\r\n\t\t\t\t(value: Value) => value.category.id === item.category.id\r\n\t\t\t);\r\n\t\t\tif (indexOfCategory !== -1) {\r\n\t\t\t\tvalues[indexOfCategory].value += item.price[currency];\r\n\t\t\t} else {\r\n\t\t\t\tvalues.push({\r\n\t\t\t\t\tcategory: item.category,\r\n\t\t\t\t\tvalue: item.price[currency],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn values.map((value: Value) => ({\r\n\t\t...value,\r\n\t\tvalue: Math.round(value.value),\r\n\t}));\r\n};\r\n\r\nexport const getTotalInCurrentRange = (\r\n\tlist: ExpenseItem[],\r\n\trange: number[],\r\n\tcurrency: string,\r\n\tisAccurate: boolean\r\n) =>\r\n\tMath.floor(\r\n\t\tlist.reduce((acc: number, item: ExpenseItem) => {\r\n\t\t\tif (\r\n\t\t\t\titem.date.isBetween(\r\n\t\t\t\t\tdayjs(range[0]),\r\n\t\t\t\t\tdayjs(range[1]),\r\n\t\t\t\t\tisAccurate ? 'day' : 'month',\r\n\t\t\t\t\t'[]'\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\treturn acc + item.price[currency];\r\n\t\t\t}\r\n\t\t\treturn acc;\r\n\t\t}, 0)\r\n\t);\r\n","import { ExpenseItem, Sort, language } from 'settings/interfaces';\r\n\r\nexport const getSymbolAndPrice = (currency: string, price?: number) => {\r\n\tlet result = '';\r\n\tif (currency === 'USD') result += '$';\r\n\tif (currency === 'EUR') result += '€';\r\n\tif (currency === 'RUB') result += '₽';\r\n\r\n\tconst formattedPrice = Math.round(price as number)\r\n\t\t?.toString()\r\n\t\t.split('')\r\n\t\t.reverse()\r\n\t\t.reduce(\r\n\t\t\t(acc: string[], symbol: string, index: number) =>\r\n\t\t\t\tindex % 3 === 0 && index !== 0\r\n\t\t\t\t\t? [...acc, symbol + ',']\r\n\t\t\t\t\t: [...acc, symbol],\r\n\t\t\t[]\r\n\t\t)\r\n\t\t.reverse()\r\n\t\t.join('');\r\n\r\n\treturn price === undefined ? result : result + formattedPrice;\r\n};\r\n\r\nexport const sortBy = (\r\n\tlist: ExpenseItem[],\r\n\tsortingAlgorithm: Sort,\r\n\treversed: boolean,\r\n\tlanguage?: language\r\n) => {\r\n\tlet result: ExpenseItem[];\r\n\tswitch (sortingAlgorithm) {\r\n\t\tcase 'date':\r\n\t\t\tresult = [...list].sort(\r\n\t\t\t\t(prev: ExpenseItem, next: ExpenseItem) =>\r\n\t\t\t\t\tnext.date.valueOf() - prev.date.valueOf()\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'title':\r\n\t\t\tresult = [...list].sort((prev: ExpenseItem, next: ExpenseItem) =>\r\n\t\t\t\tprev.title.localeCompare(next.title, language, {\r\n\t\t\t\t\tsensitivity: 'base',\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'price':\r\n\t\t\tresult = [...list].sort(\r\n\t\t\t\t(prev: ExpenseItem, next: ExpenseItem) =>\r\n\t\t\t\t\tnext.price.USD - prev.price.USD\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tresult = [...list];\r\n\t}\r\n\r\n\treturn reversed ? result.reverse() : result;\r\n};\r\n"],"names":["dayjs","minMax","observer","_ref","range","defaultRange","setRange","setDefaultRange","isAccurate","setIsAccurate","list","listStore","isSmallScreen","userStore","value","setValue","useState","sliderRange","useMemo","_dayjs$min","_dayjs$max","mappedList","map","item","date","valueOf","marks","start","startOf","end","endOf","currentDate","isBefore","isSame","month","format","add","useEffect","handleRangeChanging","useCallback","values","_jsxs","Flex","gap","children","_jsx","Segmented","defaultValue","onChange","options","label","ZoomOutOutlined","ZoomInOutlined","disabled","Slider","step","dots","tooltip","formatter","_Fragment","min","max","onChangeComplete","style","inlineSize","delay","arguments","length","undefined","debouncedValue","setDebouncedValue","timerId","setTimeout","clearTimeout","prices","rates","constants","baseCurrency","categories","categoryStore","Select","size","allowClear","minInlineSize","id","suffixIcon","EditFilled","color","category","Option","name","opened","initialItem","toggleOpened","submitItem","currency","setCurrency","currencyRates","userOptions","optionsStore","language","currentItem","setCurrentItem","handleTitleChange","event","target","prevItem","title","handleDateChange","handleCategoryChange","foundCategory","find","cat","handlePriceChange","updatedItem","price","Number","calculatePrices","submitItemWithEnter","key","window","removeEventListener","addEventListener","TitleJSX","Input","required","type","onInput","PriceJSX","Math","round","CurrencyJSX","CurrencySelect","DateJSX","DatePicker","minDate","startDate","maxDate","CategoryJSX","CategorySelect","Modal","open","okButtonProps","cancelButtonProps","onOk","onCancel","okText","CheckOutlined","cancelText","CloseOutlined","Form","layout","Item","languages","Row","Col","span","dateAndCat","mode","replaceItem","removeItem","isItemDeleting","setIsItemDeleting","deleteValue","setDeleteValue","isModalOpened","setIsModalOpened","toggleIsItemDeleting","prevValue","deleteId","setInterval","newValue","deleteDelay","clearInterval","toggleIsModalOpened","updateCurrentItem","justify","opacity","Typography","Text","strong","ellipsis","noTitle","Title","level","margin","Statistic","scale","vertical","align","Tag","filter","getSymbolAndPrice","DeleteJSX","onClick","DeleteOutlined","ProgressJSX","Progress","showInfo","percent","status","EditJSX","EditOutlined","ActionsJSX","ItemModal","Card","bordered","actions","ItemList","filteredList","loading","width","listOptions","debouncedOptions","useDebounce","colNumber","setColNumber","listToShowOnCurrentPage","getListToShowOnCurrentPage","splittedList","result","row","forEach","col","push","LargeSpin","Empty","image","PRESENTED_IMAGE_SIMPLE","description","List","ListItem","gutter","memo","addItem","emptyItem","newItem","setNewItem","clearItem","addNewItem","Button","PlusOutlined","handleCategoriesToFilterChange","showSearch","tagRender","props","_categories$find","onClose","onMouseDown","preventDefault","stopPropagation","closable","marginInlineEnd","categoriesToFilter","setIsSortingReversed","handleSortAlgorithmChanging","alignSelf","isSortingReversed","SortDescendingOutlined","SortAscendingOutlined","sortingAlgorithm","onDoubleClick","CalendarOutlined","FontColorsOutlined","DollarOutlined","handleModeChanging","MenuOutlined","TableOutlined","total","resetSettings","handlePageChanging","pageSize","currentPage","isSettingsChanged","defaultPageSize","NewItemButton","CategoriesSelect","SortSelect","ModeSelect","ReloadOutlined","YearSlider","Divider","Pagination","showSizeChanger","pageSizeOptions","current","onShowSizeChange","Expenses","getFilteredList","Selectors","isBetween","sortBy","some","startIndex","endIndex","slice","getValuesForBarDiagram","year","getValuesForPieDiagram","indexOfCategory","findIndex","getTotalInCurrentRange","floor","reduce","acc","_Math$round","formattedPrice","toString","split","reverse","symbol","index","join","reversed","sort","prev","next","localeCompare","sensitivity","USD"],"sourceRoot":""}