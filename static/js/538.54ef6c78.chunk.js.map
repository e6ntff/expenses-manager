{"version":3,"file":"static/js/538.54ef6c78.chunk.js","mappings":"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","sources":["components/YearSlider.tsx","components/DiagramBar.tsx","components/DiagramPie.tsx","pages/Stats.tsx","utils/transformData.ts","utils/utils.ts"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Slider } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport { ExpenseItem } from 'settings/interfaces';\r\nimport dayjs from 'dayjs';\r\nimport minMax from 'dayjs/plugin/minMax';\r\nimport { ZoomInOutlined, ZoomOutOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ndayjs.extend(minMax);\r\n\r\ninterface Props {\r\n\trange: number[];\r\n\tdefaultRange: number[];\r\n\tsetRange: (arg0: number[]) => void;\r\n\tsetDefaultRange: (arg0: number[]) => void;\r\n\tisAccurate: boolean;\r\n\tsetIsAccurate: (arg0: boolean) => void;\r\n}\r\n\r\nconst YearSlider: React.FC<Props> = observer(\r\n\t({\r\n\t\trange,\r\n\t\tdefaultRange,\r\n\t\tsetRange,\r\n\t\tsetDefaultRange,\r\n\t\tisAccurate,\r\n\t\tsetIsAccurate,\r\n\t}) => {\r\n\t\tconst { list } = listStore;\r\n\t\tconst { isSmallScreen } = userStore;\r\n\r\n\t\tconst [value, setValue] = useState(defaultRange);\r\n\r\n\t\tconst sliderRange: [number, number] = useMemo(() => {\r\n\t\t\tconst mappedList = list.map((item: ExpenseItem) => item.date);\r\n\t\t\treturn [\r\n\t\t\t\tdayjs.min(mappedList)?.valueOf() || 0,\r\n\t\t\t\tdayjs.max(mappedList)?.valueOf() || 0,\r\n\t\t\t];\r\n\t\t}, [list]);\r\n\r\n\t\tconst marks: { [key: number]: string } = useMemo(() => {\r\n\t\t\tconst start = dayjs(sliderRange[0]).startOf('month');\r\n\t\t\tconst end = dayjs(sliderRange[1]).endOf('month');\r\n\t\t\tconst marks: { [key: number]: string } = {};\r\n\t\t\tlet currentDate = start;\r\n\t\t\tif (isAccurate) {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'day')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.date() === 1\r\n\t\t\t\t\t\t\t? currentDate.month() === 0\r\n\t\t\t\t\t\t\t\t? currentDate.format('YYYY')\r\n\t\t\t\t\t\t\t\t: currentDate.format('M')\r\n\t\t\t\t\t\t\t: ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'day').startOf('day');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'month')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.month() === 0 ? currentDate.format('YYYY') : ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'month').startOf('month');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn marks;\r\n\t\t}, [sliderRange, isAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetDefaultRange(sliderRange);\r\n\t\t}, [sliderRange, setDefaultRange]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetRange(defaultRange);\r\n\t\t}, [defaultRange, setRange]);\r\n\r\n\t\tconst handleRangeChanging = useCallback(\r\n\t\t\t(values: number[]) => {\r\n\t\t\t\tsetRange(values);\r\n\t\t\t},\r\n\t\t\t[setRange]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetValue(range);\r\n\t\t}, [range]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tisSmallScreen && setIsAccurate(false);\r\n\t\t}, [isSmallScreen, setIsAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\t!isAccurate &&\r\n\t\t\t\tsetRange([\r\n\t\t\t\t\tdayjs(range[0]).startOf('month').valueOf(),\r\n\t\t\t\t\tdayjs(range[1]).endOf('month').valueOf(),\r\n\t\t\t\t]);\r\n\t\t\t// eslint-disable-next-line\r\n\t\t}, [isAccurate]);\r\n\r\n\t\treturn (\r\n\t\t\t<Flex gap={16}>\r\n\t\t\t\t<Segmented\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tdefaultValue={isAccurate}\r\n\t\t\t\t\tvalue={isAccurate}\r\n\t\t\t\t\tonChange={setIsAccurate}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{ label: <ZoomOutOutlined />, value: false },\r\n\t\t\t\t\t\t{ label: <ZoomInOutlined />, value: true, disabled: isSmallScreen },\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Slider\r\n\t\t\t\t\trange\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tmarks={marks}\r\n\t\t\t\t\tstep={null}\r\n\t\t\t\t\tdots={true}\r\n\t\t\t\t\ttooltip={{\r\n\t\t\t\t\t\tformatter: (value: number | undefined) => (\r\n\t\t\t\t\t\t\t<>{dayjs(value).format(isAccurate ? 'DD.MM.YY' : 'MM.YY')}</>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tmin={sliderRange[0]}\r\n\t\t\t\t\tmax={sliderRange[1]}\r\n\t\t\t\t\tdefaultValue={defaultRange}\r\n\t\t\t\t\tonChange={setValue}\r\n\t\t\t\t\tonChangeComplete={handleRangeChanging}\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t/>\r\n\t\t\t</Flex>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default YearSlider;\r\n","import React, { useMemo } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport languages from 'settings/languages';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport { Flex } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n\tChart,\r\n\tTooltip,\r\n\tBarController,\r\n\tBarElement,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n} from 'chart.js';\r\nimport { getValuesForBarDiagram } from 'utils/transformData';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Interval } from 'settings/interfaces';\r\nChart.register(Tooltip, BarController, BarElement, CategoryScale, LinearScale);\r\n\r\ninterface Props {\r\n\tmode: Interval;\r\n\tsetMode: (arg0: Interval) => void;\r\n}\r\n\r\nconst DiagramBar: React.FC<Props> = observer(({ mode, setMode }) => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { statsOptions, userOptions, setStatsRange } = optionsStore;\r\n\tconst { currency, language } = userOptions;\r\n\r\n\tconst { range } = statsOptions;\r\n\r\n\tconst values: number[] | { [key: string]: number } = useMemo(() => {\r\n\t\treturn getValuesForBarDiagram(list, currency);\r\n\t}, [currency, list]);\r\n\r\n\tconst data = {\r\n\t\tlabels: mode === 'month' ? languages.months[language] : Object.keys(values),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: getSymbolAndPrice(currency),\r\n\t\t\t\tdata: Object.values(values),\r\n\t\t\t\tbackgroundColor: '#f00',\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonClick: (_: any, chartElements: any) => {\r\n\t\t\tif (chartElements.length) {\r\n\t\t\t\tconst index = chartElements[0].index;\r\n\r\n\t\t\t\tconst newRangeItem =\r\n\t\t\t\t\tmode === 'year'\r\n\t\t\t\t\t\t? [\r\n\t\t\t\t\t\t\t\tdayjs(range[0])\r\n\t\t\t\t\t\t\t\t\t.year(Number(data.labels[index]))\r\n\t\t\t\t\t\t\t\t\t.startOf('year')\r\n\t\t\t\t\t\t\t\t\t.valueOf(),\r\n\t\t\t\t\t\t\t\tdayjs(range[0])\r\n\t\t\t\t\t\t\t\t\t.year(Number(data.labels[index]))\r\n\t\t\t\t\t\t\t\t\t.endOf('year')\r\n\t\t\t\t\t\t\t\t\t.valueOf(),\r\n\t\t\t\t\t\t  ]\r\n\t\t\t\t\t\t: [\r\n\t\t\t\t\t\t\t\tdayjs(range[0]).month(index).startOf('month').valueOf(),\r\n\t\t\t\t\t\t\t\tdayjs(range[0]).month(index).endOf('month').valueOf(),\r\n\t\t\t\t\t\t  ];\r\n\r\n\t\t\t\tmode === 'year' && setMode('month');\r\n\t\t\t\tsetStatsRange(newRangeItem);\r\n\t\t\t}\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Flex style={{ inlineSize: isSmallScreen ? 'unset' : '50%' }}>\r\n\t\t\t<Bar\r\n\t\t\t\tdata={data}\r\n\t\t\t\toptions={options}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default DiagramBar;\r\n","import React, { useMemo } from 'react';\r\nimport { Value } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { Flex } from 'antd';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport {\r\n\tChart,\r\n\tArcElement,\r\n\tPieController,\r\n\tTooltip,\r\n\tLegend,\r\n\tTitle,\r\n} from 'chart.js';\r\nimport { getValuesForPieDiagram } from 'utils/transformData';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { listStore } from 'utils/listStore';\r\nChart.register(ArcElement, PieController, Tooltip, Legend, Title);\r\n\r\nconst DiagramPie: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { userOptions, statsOptions } = optionsStore;\r\n\tconst { currency } = userOptions;\r\n\r\n\tconst { range, isAccurate } = statsOptions;\r\n\r\n\tconst valuesByCategory: Value[] = useMemo(\r\n\t\t() => getValuesForPieDiagram(list, range, currency, isAccurate),\r\n\t\t[list, currency, range, isAccurate]\r\n\t);\r\n\r\n\tconst [names, colors, values] = [\r\n\t\tvaluesByCategory.map((value: Value) => value.category.name),\r\n\t\tvaluesByCategory.map((value: Value) => value.category.color),\r\n\t\tvaluesByCategory.map((value: Value) => Math.round(value.value)),\r\n\t];\r\n\r\n\tconst data = {\r\n\t\tlabels: names,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: getSymbolAndPrice(currency),\r\n\t\t\t\tdata: values,\r\n\t\t\t\tbackgroundColor: colors,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tposition: 'right' as const,\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tstyle={{\r\n\t\t\t\tinlineSize: isSmallScreen ? 'unset' : '40%',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Pie\r\n\t\t\t\tdata={data}\r\n\t\t\t\toptions={options}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default DiagramPie;\r\n","import React, { useState, useCallback, memo, useEffect, useMemo } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Button, Card, Empty, Flex, Statistic, Typography } from 'antd';\r\nimport DiagramBar from '../components/DiagramBar';\r\nimport DiagramPie from 'components/DiagramPie';\r\nimport { userStore } from 'utils/userStore';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport { ReloadOutlined } from '@ant-design/icons';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport dayjs from 'dayjs';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\nimport YearSlider from 'components/YearSlider';\r\nimport { Interval } from 'settings/interfaces';\r\nimport LargeSpin from 'components/LargeSpin';\r\nimport { getTotalInCurrentRange } from 'utils/transformData';\r\n\r\ndayjs.extend(isBetween);\r\n\r\nconst Stats: React.FC = observer(() => {\r\n\tconst { list } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst {\r\n\t\tstatsOptions,\r\n\t\tuserOptions,\r\n\t\tsetStatsRange,\r\n\t\tsetDefaultStatsRange,\r\n\t\tsetIsStatsAccurate,\r\n\t} = optionsStore;\r\n\tconst { currency } = userOptions;\r\n\tconst { range, defaultRange, isAccurate } = statsOptions;\r\n\r\n\tconst [mode, setMode] = useState<Interval>('year');\r\n\r\n\tconst resetRange = useCallback(() => {\r\n\t\tsetMode('year');\r\n\t\tsetStatsRange(defaultRange);\r\n\t}, [setMode, defaultRange, setStatsRange]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst resetRangeWithEsc = (event: KeyboardEvent) => {\r\n\t\t\tif (event.key === 'Escape') {\r\n\t\t\t\tresetRange();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\twindow.addEventListener('keydown', resetRangeWithEsc);\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('keydown', resetRangeWithEsc);\r\n\t\t};\r\n\t}, [resetRange]);\r\n\r\n\tconst isRangeChanged = useMemo(\r\n\t\t() => range[0] !== defaultRange[0] || range[1] !== defaultRange[1],\r\n\t\t[range, defaultRange]\r\n\t);\r\n\r\n\tconst cardTitle = useMemo(() => {\r\n\t\tconst format = isAccurate ? 'DD.MM.YY' : 'MM.YY';\r\n\t\treturn (\r\n\t\t\t<Typography.Text\r\n\t\t\t\ttype='secondary'\r\n\t\t\t\tstyle={{ fontSize: isSmallScreen ? '.8em' : '1em' }}\r\n\t\t\t>\r\n\t\t\t\t{dayjs(range[0]).format(format)}\r\n\t\t\t\t{range[0] !== range[1] ? `-${dayjs(range[1]).format(format)}` : ''}\r\n\t\t\t</Typography.Text>\r\n\t\t);\r\n\t}, [isAccurate, range, isSmallScreen]);\r\n\r\n\tconst PanelJSX = (\r\n\t\t<Flex gap={16}>\r\n\t\t\t<Card bordered>\r\n\t\t\t\t<Statistic\r\n\t\t\t\t\ttitle={cardTitle}\r\n\t\t\t\t\tvalue={getTotalInCurrentRange(list, range, currency, isAccurate)}\r\n\t\t\t\t\tprefix={getSymbolAndPrice(currency)}\r\n\t\t\t\t\tvalueStyle={{\r\n\t\t\t\t\t\tcolor: '#f00',\r\n\t\t\t\t\t\tfontSize: isSmallScreen ? '1em' : '1.5em',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</Card>\r\n\t\t\t<Button\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tonClick={resetRange}\r\n\t\t\t\tdisabled={!isRangeChanged}\r\n\t\t\t>\r\n\t\t\t\t<ReloadOutlined />\r\n\t\t\t</Button>\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst DiagramsJSX = (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t\talign='stretch'\r\n\t\t>\r\n\t\t\t<YearSlider\r\n\t\t\t\tsetIsAccurate={setIsStatsAccurate}\r\n\t\t\t\tisAccurate={isAccurate}\r\n\t\t\t\trange={range}\r\n\t\t\t\tdefaultRange={defaultRange}\r\n\t\t\t\tsetRange={setStatsRange}\r\n\t\t\t\tsetDefaultRange={setDefaultStatsRange}\r\n\t\t\t/>\r\n\t\t\t<Flex\r\n\t\t\t\talign='center'\r\n\t\t\t\tjustify='space-between'\r\n\t\t\t\tvertical={isSmallScreen}\r\n\t\t\t>\r\n\t\t\t\t<DiagramBar\r\n\t\t\t\t\tmode={mode}\r\n\t\t\t\t\tsetMode={setMode}\r\n\t\t\t\t/>\r\n\t\t\t\t<DiagramPie />\r\n\t\t\t</Flex>\r\n\t\t</Flex>\r\n\t);\r\n\r\n\treturn listStore.loading || categoryStore.loading ? (\r\n\t\t<LargeSpin />\r\n\t) : list.length ? (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={32}\r\n\t\t>\r\n\t\t\t{PanelJSX}\r\n\t\t\t{DiagramsJSX}\r\n\t\t</Flex>\r\n\t) : (\r\n\t\t<Empty\r\n\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\tdescription={''}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default memo(Stats);\r\n","import {\r\n\tExpenseItem,\r\n\tListOptions,\r\n\tValue,\r\n\tcategory,\r\n\tlanguage,\r\n} from 'settings/interfaces';\r\nimport { sortBy } from './utils';\r\nimport dayjs from 'dayjs';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\n\r\ndayjs.extend(isBetween);\r\n\r\nexport const getFilteredList = (\r\n\toptions: ListOptions,\r\n\tlist: ExpenseItem[],\r\n\tlanguage: language,\r\n\tisAccurate: boolean\r\n) => {\r\n\tconst { range, categoriesToFilter, sortingAlgorithm, isSortingReversed } =\r\n\t\toptions;\r\n\treturn sortBy(\r\n\t\tlist.filter((item: ExpenseItem) => {\r\n\t\t\tif (!categoriesToFilter.length) {\r\n\t\t\t\treturn item.date.isBetween(\r\n\t\t\t\t\tdayjs(range[0]),\r\n\t\t\t\t\tdayjs(range[1]),\r\n\t\t\t\t\tisAccurate ? 'day' : 'month',\r\n\t\t\t\t\t'[]'\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\titem.date.isBetween(dayjs(range[0]), dayjs(range[1]), 'day', '[]') &&\r\n\t\t\t\t\tcategoriesToFilter.some(\r\n\t\t\t\t\t\t(category: category) => item.category.id === category.id\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}),\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tlanguage\r\n\t);\r\n};\r\n\r\nexport const getListToShowOnCurrentPage = (\r\n\toptions: ListOptions,\r\n\tfilteredList: ExpenseItem[]\r\n) => {\r\n\tconst { currentPage, pageSize } = options;\r\n\tconst startIndex = (currentPage - 1) * pageSize;\r\n\tconst endIndex = startIndex + pageSize;\r\n\treturn filteredList.slice(startIndex, endIndex);\r\n};\r\n\r\nexport const getValuesForBarDiagram = (\r\n\tlist: ExpenseItem[],\r\n\tcurrency: string\r\n) => {\r\n\tconst result: { [key: number]: number } = {};\r\n\tlist.forEach((item: ExpenseItem) => {\r\n\t\tconst key: number = item.date.year();\r\n\t\tif (result[key] === undefined) {\r\n\t\t\tresult[key] = 0;\r\n\t\t} else {\r\n\t\t\tresult[key] += item.price[currency];\r\n\t\t}\r\n\t});\r\n\r\n\tfor (let year in result) {\r\n\t\tresult[year] = Math.round(result[year]);\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\nexport const getValuesForPieDiagram = (\r\n\tlist: ExpenseItem[],\r\n\trange: number[],\r\n\tcurrency: string,\r\n\tisAccurate: boolean\r\n) => {\r\n\tconst values: Value[] = [];\r\n\tlist.forEach((item: ExpenseItem) => {\r\n\t\tif (\r\n\t\t\titem.date.isBetween(\r\n\t\t\t\tdayjs(range[0]),\r\n\t\t\t\tdayjs(range[1]),\r\n\t\t\t\tisAccurate ? 'day' : 'month',\r\n\t\t\t\t'[]'\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tconst indexOfCategory: number = values.findIndex(\r\n\t\t\t\t(value: Value) => value.category.id === item.category.id\r\n\t\t\t);\r\n\t\t\tif (indexOfCategory !== -1) {\r\n\t\t\t\tvalues[indexOfCategory].value += item.price[currency];\r\n\t\t\t} else {\r\n\t\t\t\tvalues.push({\r\n\t\t\t\t\tcategory: item.category,\r\n\t\t\t\t\tvalue: item.price[currency],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn values.map((value: Value) => ({\r\n\t\t...value,\r\n\t\tvalue: Math.round(value.value),\r\n\t}));\r\n};\r\n\r\nexport const getTotalInCurrentRange = (\r\n\tlist: ExpenseItem[],\r\n\trange: number[],\r\n\tcurrency: string,\r\n\tisAccurate: boolean\r\n) =>\r\n\tMath.floor(\r\n\t\tlist.reduce((acc: number, item: ExpenseItem) => {\r\n\t\t\tif (\r\n\t\t\t\titem.date.isBetween(\r\n\t\t\t\t\tdayjs(range[0]),\r\n\t\t\t\t\tdayjs(range[1]),\r\n\t\t\t\t\tisAccurate ? 'day' : 'month',\r\n\t\t\t\t\t'[]'\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\treturn acc + item.price[currency];\r\n\t\t\t}\r\n\t\t\treturn acc;\r\n\t\t}, 0)\r\n\t);\r\n","import { ExpenseItem, Sort, language } from 'settings/interfaces';\r\n\r\nexport const getSymbolAndPrice = (currency: string, price?: number) => {\r\n\tlet result = '';\r\n\tif (currency === 'USD') result += '$';\r\n\tif (currency === 'EUR') result += '€';\r\n\tif (currency === 'RUB') result += '₽';\r\n\r\n\tconst formattedPrice = Math.round(price as number)\r\n\t\t?.toString()\r\n\t\t.split('')\r\n\t\t.reverse()\r\n\t\t.reduce(\r\n\t\t\t(acc: string[], symbol: string, index: number) =>\r\n\t\t\t\tindex % 3 === 0 && index !== 0\r\n\t\t\t\t\t? [...acc, symbol + ',']\r\n\t\t\t\t\t: [...acc, symbol],\r\n\t\t\t[]\r\n\t\t)\r\n\t\t.reverse()\r\n\t\t.join('');\r\n\r\n\treturn price === undefined ? result : result + formattedPrice;\r\n};\r\n\r\nexport const sortBy = (\r\n\tlist: ExpenseItem[],\r\n\tsortingAlgorithm: Sort,\r\n\treversed: boolean,\r\n\tlanguage?: language\r\n) => {\r\n\tlet result: ExpenseItem[];\r\n\tswitch (sortingAlgorithm) {\r\n\t\tcase 'date':\r\n\t\t\tresult = [...list].sort(\r\n\t\t\t\t(prev: ExpenseItem, next: ExpenseItem) =>\r\n\t\t\t\t\tnext.date.valueOf() - prev.date.valueOf()\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'title':\r\n\t\t\tresult = [...list].sort((prev: ExpenseItem, next: ExpenseItem) =>\r\n\t\t\t\tprev.title.localeCompare(next.title, language, {\r\n\t\t\t\t\tsensitivity: 'base',\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'price':\r\n\t\t\tresult = [...list].sort(\r\n\t\t\t\t(prev: ExpenseItem, next: ExpenseItem) =>\r\n\t\t\t\t\tnext.price.USD - prev.price.USD\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tresult = [...list];\r\n\t}\r\n\r\n\treturn reversed ? result.reverse() : result;\r\n};\r\n"],"names":["dayjs","minMax","observer","_ref","range","defaultRange","setRange","setDefaultRange","isAccurate","setIsAccurate","list","listStore","isSmallScreen","userStore","value","setValue","useState","sliderRange","useMemo","_dayjs$min","_dayjs$max","mappedList","map","item","date","valueOf","marks","start","startOf","end","endOf","currentDate","isBefore","isSame","month","format","add","useEffect","handleRangeChanging","useCallback","values","_jsxs","Flex","gap","children","_jsx","Segmented","size","defaultValue","onChange","options","label","ZoomOutOutlined","ZoomInOutlined","disabled","Slider","step","dots","tooltip","formatter","_Fragment","min","max","onChangeComplete","style","inlineSize","Chart","register","Tooltip","BarController","BarElement","CategoryScale","LinearScale","mode","setMode","statsOptions","userOptions","setStatsRange","optionsStore","currency","language","getValuesForBarDiagram","data","labels","languages","months","Object","keys","datasets","getSymbolAndPrice","backgroundColor","plugins","legend","display","onClick","_","chartElements","length","index","newRangeItem","year","Number","Bar","ArcElement","PieController","Legend","Title","valuesByCategory","getValuesForPieDiagram","names","colors","category","name","color","Math","round","Pie","position","isBetween","Stats","setDefaultStatsRange","setIsStatsAccurate","resetRange","resetRangeWithEsc","event","key","window","addEventListener","removeEventListener","isRangeChanged","cardTitle","Typography","Text","type","fontSize","concat","PanelJSX","Card","bordered","Statistic","title","getTotalInCurrentRange","prefix","valueStyle","Button","ReloadOutlined","DiagramsJSX","vertical","align","YearSlider","justify","DiagramBar","DiagramPie","loading","categoryStore","LargeSpin","Empty","image","PRESENTED_IMAGE_SIMPLE","description","memo","getFilteredList","categoriesToFilter","sortingAlgorithm","isSortingReversed","sortBy","filter","some","id","getListToShowOnCurrentPage","filteredList","currentPage","pageSize","startIndex","endIndex","slice","result","forEach","undefined","price","indexOfCategory","findIndex","push","floor","reduce","acc","_Math$round","formattedPrice","toString","split","reverse","symbol","join","reversed","sort","prev","next","localeCompare","sensitivity","USD"],"sourceRoot":""}