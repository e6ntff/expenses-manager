{"version":3,"file":"static/js/766.deeb82ec.chunk.js","mappings":"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","sources":["components/TypeSelect.tsx","components/SliderDiagram.tsx","components/YearSlider.tsx","components/DiagramBar.tsx","components/DiagramPie.tsx","components/StatsCard.tsx","pages/Stats.tsx"],"sourcesContent":["import { FallOutlined, MinusOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport { Segmented } from 'antd';\r\nimport { SegmentedOptions } from 'antd/es/segmented';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useMemo } from 'react';\r\nimport { ListType } from 'settings/interfaces';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\ttype: ListType;\r\n\tonChange: (arg0: ListType) => void;\r\n\textra?: boolean;\r\n}\r\n\r\nconst TypeSelect: React.FC<Props> = observer(({ type, onChange, extra }) => {\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\tconst options: SegmentedOptions<ListType> = useMemo(() => {\r\n\t\tconst options = [\r\n\t\t\t{\r\n\t\t\t\tlabel: <FallOutlined />,\r\n\t\t\t\tvalue: 'expense' as ListType,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: <RiseOutlined />,\r\n\t\t\t\tvalue: 'income' as ListType,\r\n\t\t\t},\r\n\t\t];\r\n\r\n\t\textra &&\r\n\t\t\toptions.splice(1, 0, {\r\n\t\t\t\tlabel: <MinusOutlined />,\r\n\t\t\t\tvalue: 'all' as ListType,\r\n\t\t\t});\r\n\r\n\t\treturn options;\r\n\t}, [extra]);\r\n\r\n\treturn (\r\n\t\t<Segmented\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tvalue={type}\r\n\t\t\tonChange={onChange}\r\n\t\t\toptions={options}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default TypeSelect;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { memo, useMemo } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { getValuesByMonth } from 'utils/transformData';\r\n\r\nconst SliderDiagram: React.FC = observer(() => {\r\n\tconst { list } = listStore;\r\n\tconst { defaultRange } = optionsStore;\r\n\r\n\tconst valuesByMonth: number[] | { [key: string]: number } = useMemo(\r\n\t\t() => getValuesByMonth(list, defaultRange),\r\n\t\t[list, defaultRange]\r\n\t);\r\n\r\n\tconst data = {\r\n\t\tlabels: new Array(valuesByMonth.length).fill(''),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tdata: valuesByMonth,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tx: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\ty: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\telements: {\r\n\t\t\tpoint: {\r\n\t\t\t\tradius: 0,\r\n\t\t\t},\r\n\t\t\tline: {\r\n\t\t\t\tcubicInterpolationMode: 'monotone' as 'monotone',\r\n\t\t\t\tborderColor: '#7775',\r\n\t\t\t},\r\n\t\t},\r\n\t\taspectRatio: 25,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Line\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\tdata={data}\r\n\t\t\toptions={options}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default memo(SliderDiagram);\r\n","import React, { memo, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Slider } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport { ExpenseItem, ListType } from 'settings/interfaces';\r\nimport dayjs from 'dayjs';\r\nimport minMax from 'dayjs/plugin/minMax';\r\n\r\nimport {\r\n\tChart,\r\n\tTooltip,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tLineElement,\r\n\tLineController,\r\n\tPointElement,\r\n} from 'chart.js';\r\nimport SliderDiagram from './SliderDiagram';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nChart.register(\r\n\tTooltip,\r\n\tLineElement,\r\n\tLineController,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tPointElement\r\n);\r\n\r\ndayjs.extend(minMax);\r\n\r\ninterface Props {\r\n\trange: number[];\r\n\ttype: ListType;\r\n\tsetRange: (arg0: number[]) => void;\r\n}\r\n\r\nconst YearSlider: React.FC<Props> = observer(({ range, type, setRange }) => {\r\n\tconst { list } = listStore;\r\n\tconst { defaultRange, setDefaultRange } = optionsStore;\r\n\r\n\tconst [value, setValue] = useState(defaultRange);\r\n\r\n\tconst sliderRange: [number, number] = useMemo(() => {\r\n\t\tconst dates = Object.values(list)\r\n\t\t\t.filter((item: ExpenseItem) => item.type === type || type === 'all')\r\n\t\t\t.map((item: ExpenseItem) => item.date);\r\n\t\treturn [Math.min(...dates), Math.max(...dates)];\r\n\t}, [list, type]);\r\n\r\n\tconst marks: { [key: number]: string } = useMemo(() => {\r\n\t\tconst start = dayjs(sliderRange[0]).startOf('day');\r\n\t\tconst end = dayjs(sliderRange[1]).endOf('day');\r\n\t\tconst marks: { [key: number]: string } = {};\r\n\t\tlet currentDate = start;\r\n\r\n\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'month')) {\r\n\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\tcurrentDate.month() === 0 ? currentDate.format('YYYY') : ' ';\r\n\t\t\tcurrentDate = currentDate.add(1, 'month').startOf('month');\r\n\t\t}\r\n\t\treturn marks;\r\n\t}, [sliderRange]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetDefaultRange(sliderRange);\r\n\t}, [sliderRange, setDefaultRange]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRange(defaultRange);\r\n\t}, [defaultRange, setRange]);\r\n\r\n\tconst handleRangeChanging = useCallback(\r\n\t\t(values: number[]) => {\r\n\t\t\tsetRange(values);\r\n\t\t},\r\n\t\t[setRange]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetValue(range);\r\n\t}, [range]);\r\n\r\n\treturn dayjs(defaultRange[1]).diff(dayjs(defaultRange[0]), 'hours') >= 48 ? (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\talign='stretch'\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t>\r\n\t\t\t<SliderDiagram />\r\n\t\t\t<Slider\r\n\t\t\t\trange\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tmarks={marks}\r\n\t\t\t\tstep={null}\r\n\t\t\t\tdots={true}\r\n\t\t\t\ttooltip={{\r\n\t\t\t\t\tformatter: (value: number | undefined) =>\r\n\t\t\t\t\t\tdayjs(value).format('MM.YY'),\r\n\t\t\t\t}}\r\n\t\t\t\tmin={sliderRange[0]}\r\n\t\t\t\tmax={sliderRange[1]}\r\n\t\t\t\tdefaultValue={defaultRange}\r\n\t\t\t\tonChange={setValue}\r\n\t\t\t\tonChangeComplete={handleRangeChanging}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t) : (\r\n\t\t<></>\r\n\t);\r\n});\r\n\r\nexport default memo(YearSlider);\r\n","import React, { useMemo } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport languages from 'settings/languages';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport { Flex } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n\tChart,\r\n\tTooltip,\r\n\tBarController,\r\n\tBarElement,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n} from 'chart.js';\r\nimport { getValuesForBarDiagram } from 'utils/transformData';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Interval } from 'settings/interfaces';\r\nimport constants from 'settings/constants';\r\nChart.register(Tooltip, BarController, BarElement, CategoryScale, LinearScale);\r\n\r\ninterface Props {\r\n\tmode: Interval;\r\n\tsetMode: (arg0: Interval) => void;\r\n}\r\n\r\nconst DiagramBar: React.FC<Props> = observer(({ mode, setMode }) => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { statsOptions, userOptions, setStatsRange } = optionsStore;\r\n\tconst { currency, language } = userOptions;\r\n\r\n\tconst { range, type } = statsOptions;\r\n\r\n\tconst values: number[] | { [key: string]: number } = useMemo(() => {\r\n\t\treturn getValuesForBarDiagram(\r\n\t\t\tlist,\r\n\t\t\ttype,\r\n\t\t\tcurrency,\r\n\t\t\tmode,\r\n\t\t\tdayjs(range[0]).year()\r\n\t\t);\r\n\t}, [currency, type, mode, range, list]);\r\n\r\n\tconst colors = useMemo(\r\n\t\t() =>\r\n\t\t\tObject.keys(values).map((key: string) => {\r\n\t\t\t\tlet period: number | dayjs.Dayjs = 0;\r\n\t\t\t\tlet isInRange: boolean = false;\r\n\t\t\t\tif (mode === 'month') {\r\n\t\t\t\t\tperiod = Number(key);\r\n\t\t\t\t\tisInRange =\r\n\t\t\t\t\t\tperiod >= dayjs(range[0]).startOf('month').month() &&\r\n\t\t\t\t\t\tperiod <= dayjs(range[1]).endOf('month').month();\r\n\t\t\t\t} else if (mode === 'year') {\r\n\t\t\t\t\tperiod = dayjs(key);\r\n\t\t\t\t\tisInRange =\r\n\t\t\t\t\t\tperiod >= dayjs(range[0]).startOf('year') &&\r\n\t\t\t\t\t\tperiod <= dayjs(range[1]).endOf('year');\r\n\t\t\t\t}\r\n\t\t\t\tif (type === 'expense') {\r\n\t\t\t\t\treturn isInRange\r\n\t\t\t\t\t\t? constants.colors.expense\r\n\t\t\t\t\t\t: constants.colors.expenseLight;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn isInRange\r\n\t\t\t\t\t\t? constants.colors.income\r\n\t\t\t\t\t\t: constants.colors.incomeLight;\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t[range, values, mode, type]\r\n\t);\r\n\r\n\tconst data = {\r\n\t\tlabels: mode === 'month' ? languages.months[language] : Object.keys(values),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: getSymbolAndPrice(currency),\r\n\t\t\t\tdata: Object.values(values),\r\n\t\t\t\tbackgroundColor: colors,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonClick: (_: any, chartElements: any) => {\r\n\t\t\tif (chartElements.length) {\r\n\t\t\t\tconst index = chartElements[0].index;\r\n\r\n\t\t\t\tconst newRangeItem =\r\n\t\t\t\t\tmode === 'year'\r\n\t\t\t\t\t\t? [\r\n\t\t\t\t\t\t\t\tdayjs(range[0])\r\n\t\t\t\t\t\t\t\t\t.year(Number(data.labels[index]))\r\n\t\t\t\t\t\t\t\t\t.startOf('year')\r\n\t\t\t\t\t\t\t\t\t.valueOf(),\r\n\t\t\t\t\t\t\t\tdayjs(range[0])\r\n\t\t\t\t\t\t\t\t\t.year(Number(data.labels[index]))\r\n\t\t\t\t\t\t\t\t\t.endOf('year')\r\n\t\t\t\t\t\t\t\t\t.valueOf(),\r\n\t\t\t\t\t\t  ]\r\n\t\t\t\t\t\t: [\r\n\t\t\t\t\t\t\t\tdayjs(range[0]).month(index).startOf('month').valueOf(),\r\n\t\t\t\t\t\t\t\tdayjs(range[0]).month(index).endOf('month').valueOf(),\r\n\t\t\t\t\t\t  ];\r\n\r\n\t\t\t\tmode === 'year' && setMode('month');\r\n\t\t\t\tsetStatsRange(newRangeItem);\r\n\t\t\t}\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Flex style={{ inlineSize: isSmallScreen ? 'unset' : '50%' }}>\r\n\t\t\t<Bar\r\n\t\t\t\tdata={data}\r\n\t\t\t\toptions={options}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default DiagramBar;\r\n","import React, { useMemo } from 'react';\r\nimport { Value } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { Flex } from 'antd';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport {\r\n\tChart,\r\n\tArcElement,\r\n\tPieController,\r\n\tTooltip,\r\n\tLegend,\r\n\tTitle,\r\n} from 'chart.js';\r\nimport { getValuesForPieDiagram } from 'utils/transformData';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { listStore } from 'utils/listStore';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nChart.register(ArcElement, PieController, Tooltip, Legend, Title);\r\n\r\nconst DiagramPie: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { userOptions, statsOptions } = optionsStore;\r\n\tconst { currency } = userOptions;\r\n\tconst { categories } = categoryStore;\r\n\r\n\tconst { range, type } = statsOptions;\r\n\r\n\tconst valuesByCategory: Value[] = useMemo(\r\n\t\t() => getValuesForPieDiagram(list, type, range, currency),\r\n\t\t[list, type, currency, range]\r\n\t);\r\n\r\n\tconst [names, colors, values] = useMemo(() => {\r\n\t\treturn [\r\n\t\t\tvaluesByCategory.map((value: Value) => categories[value.categoryId].name),\r\n\t\t\tvaluesByCategory.map(\r\n\t\t\t\t(value: Value) => categories[value.categoryId].color\r\n\t\t\t),\r\n\t\t\tvaluesByCategory.map((value: Value) => Math.round(value.value)),\r\n\t\t];\r\n\t}, [categories, valuesByCategory]);\r\n\r\n\tconst data = {\r\n\t\tlabels: names,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: getSymbolAndPrice(currency),\r\n\t\t\t\tdata: values,\r\n\t\t\t\tbackgroundColor: colors,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tposition: 'right' as const,\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tstyle={{\r\n\t\t\t\tinlineSize: isSmallScreen ? 'unset' : '40%',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Pie\r\n\t\t\t\tdata={data}\r\n\t\t\t\toptions={options}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default DiagramPie;\r\n","import { Card, DatePicker, Flex, Statistic, Tooltip, Typography } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { memo, useMemo } from 'react';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { getTotalInCurrentRange } from 'utils/transformData';\r\nimport { userStore } from 'utils/userStore';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport dayjs from 'dayjs';\r\nimport constants from 'settings/constants';\r\nimport { ReloadOutlined } from '@ant-design/icons';\r\nimport TypeSelect from './TypeSelect';\r\n\r\ninterface Props {\r\n\topen: boolean;\r\n\tresetRange: () => void;\r\n}\r\n\r\nconst StatsCard: React.FC<Props> = observer(({ resetRange, open }) => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { statsOptions, userOptions, setStatsRange, setStatsType } =\r\n\t\toptionsStore;\r\n\r\n\tconst { range, type } = statsOptions;\r\n\tconst { currency } = userOptions;\r\n\r\n\tconst value = useMemo(\r\n\t\t() => getTotalInCurrentRange(list, type, range, currency),\r\n\t\t[list, type, range, currency]\r\n\t);\r\n\r\n\tconst cardTitle = useMemo(() => {\r\n\t\tconst format = true ? 'DD.MM.YY' : 'MM.YY';\r\n\t\treturn (\r\n\t\t\t<Typography.Text\r\n\t\t\t\ttype='secondary'\r\n\t\t\t\tstyle={{ fontSize: isSmallScreen ? '.8em' : '1.2em' }}\r\n\t\t\t>\r\n\t\t\t\t{dayjs(range[0]).format(format)}\r\n\t\t\t\t{range[0] !== range[1] ? `-${dayjs(range[1]).format(format)}` : ''}\r\n\t\t\t</Typography.Text>\r\n\t\t);\r\n\t}, [range, isSmallScreen]);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\talign='end'\r\n\t\t\tgap={isSmallScreen ? 16 : 32}\r\n\t\t>\r\n\t\t\t<Tooltip\r\n\t\t\t\tplacement='rightTop'\r\n\t\t\t\tcolor='#0000'\r\n\t\t\t\topen={open}\r\n\t\t\t\ttitle={\r\n\t\t\t\t\t<ReloadOutlined\r\n\t\t\t\t\t\tonClick={resetRange}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tscale: isSmallScreen ? '1' : '1.25',\r\n\t\t\t\t\t\t\tfilter: 'invert()',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<Card bordered>\r\n\t\t\t\t\t<Statistic\r\n\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\tcolor='#0000'\r\n\t\t\t\t\t\t\t\ttrigger='click'\r\n\t\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\t<DatePicker.RangePicker\r\n\t\t\t\t\t\t\t\t\t\tonChange={(values: [any, any]) => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetStatsRange(\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.map((value: dayjs.Dayjs) => value.valueOf())\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tvalue={[dayjs(range[0]), dayjs(range[1])]}\r\n\t\t\t\t\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\t\t\t\t\t\tminDate={constants.startDate}\r\n\t\t\t\t\t\t\t\t\t\tmaxDate={dayjs()}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{cardTitle}\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tprefix={getSymbolAndPrice(currency)}\r\n\t\t\t\t\t\tvalueStyle={{\r\n\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\ttype === 'expense'\r\n\t\t\t\t\t\t\t\t\t? constants.colors.expense\r\n\t\t\t\t\t\t\t\t\t: constants.colors.income,\r\n\t\t\t\t\t\t\tfontSize: isSmallScreen ? '1.5em' : '2.25em',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Card>\r\n\t\t\t</Tooltip>\r\n\t\t\t<TypeSelect\r\n\t\t\t\ttype={type}\r\n\t\t\t\tonChange={setStatsType}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default memo(StatsCard);\r\n","import React, { useState, useCallback, memo, useEffect, useMemo } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Empty, Flex } from 'antd';\r\nimport DiagramBar from '../components/DiagramBar';\r\nimport DiagramPie from 'components/DiagramPie';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport dayjs from 'dayjs';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\nimport YearSlider from 'components/YearSlider';\r\nimport { Interval } from 'settings/interfaces';\r\nimport LargeSpin from 'components/LargeSpin';\r\nimport StatsCard from 'components/StatsCard';\r\n\r\ndayjs.extend(isBetween);\r\n\r\nconst Stats: React.FC = observer(() => {\r\n\tconst { list } = listStore;\r\n\tconst { isSmallScreen, loading, tourRefs } = userStore;\r\n\tconst { statsOptions, defaultRange, setStatsRange } = optionsStore;\r\n\r\n\tconst { range, type } = statsOptions;\r\n\r\n\tconst [mode, setMode] = useState<Interval>('year');\r\n\r\n\tconst resetRange = useCallback(() => {\r\n\t\tsetMode('year');\r\n\t\tsetStatsRange(defaultRange);\r\n\t}, [setMode, defaultRange, setStatsRange]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst resetRangeWithEsc = (event: KeyboardEvent) => {\r\n\t\t\tif (event.key === 'Escape') {\r\n\t\t\t\tresetRange();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\twindow.addEventListener('keydown', resetRangeWithEsc);\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('keydown', resetRangeWithEsc);\r\n\t\t};\r\n\t}, [resetRange]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dayjs(range[0]).year() !== dayjs(range[1]).year()) {\r\n\t\t\tsetMode('year');\r\n\t\t} else {\r\n\t\t\tsetMode('month');\r\n\t\t}\r\n\t}, [range]);\r\n\r\n\tconst isRangeChanged = useMemo(\r\n\t\t() => range[0] !== defaultRange[0] || range[1] !== defaultRange[1],\r\n\t\t[range, defaultRange]\r\n\t);\r\n\r\n\tconst DiagramsJSX = (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t\talign='stretch'\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t>\r\n\t\t\t<Flex\r\n\t\t\t\tref={tourRefs[8]}\r\n\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t>\r\n\t\t\t\t<YearSlider\r\n\t\t\t\t\trange={range}\r\n\t\t\t\t\ttype={type}\r\n\t\t\t\t\tsetRange={setStatsRange}\r\n\t\t\t\t/>\r\n\t\t\t</Flex>\r\n\t\t\t<Flex\r\n\t\t\t\tref={tourRefs[7]}\r\n\t\t\t\talign='center'\r\n\t\t\t\tjustify='space-between'\r\n\t\t\t\tvertical={isSmallScreen}\r\n\t\t\t>\r\n\t\t\t\t<DiagramBar\r\n\t\t\t\t\tmode={mode}\r\n\t\t\t\t\tsetMode={setMode}\r\n\t\t\t\t/>\r\n\t\t\t\t<DiagramPie />\r\n\t\t\t</Flex>\r\n\t\t</Flex>\r\n\t);\r\n\r\n\treturn loading ? (\r\n\t\t<LargeSpin />\r\n\t) : Object.keys(list).length ? (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={32}\r\n\t\t\talign='start'\r\n\t\t>\r\n\t\t\t<StatsCard\r\n\t\t\t\topen={isRangeChanged}\r\n\t\t\t\tresetRange={resetRange}\r\n\t\t\t/>\r\n\t\t\t{DiagramsJSX}\r\n\t\t</Flex>\r\n\t) : (\r\n\t\t<Empty\r\n\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\tdescription={''}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default memo(Stats);\r\n"],"names":["observer","_ref","type","onChange","extra","isSmallScreen","userStore","options","useMemo","label","_jsx","FallOutlined","value","RiseOutlined","splice","MinusOutlined","Segmented","size","SliderDiagram","list","listStore","defaultRange","optionsStore","valuesByMonth","getValuesByMonth","data","labels","Array","length","fill","datasets","Line","style","inlineSize","plugins","legend","display","tooltip","enabled","scales","x","grid","y","elements","point","radius","line","cubicInterpolationMode","borderColor","aspectRatio","memo","Chart","register","Tooltip","LineElement","LineController","CategoryScale","LinearScale","PointElement","dayjs","minMax","YearSlider","range","setRange","setDefaultRange","setValue","useState","sliderRange","dates","Object","values","filter","item","map","date","Math","min","max","marks","start","startOf","end","endOf","currentDate","isBefore","isSame","valueOf","month","format","add","useEffect","handleRangeChanging","useCallback","diff","_jsxs","Flex","vertical","align","children","Slider","step","dots","formatter","defaultValue","onChangeComplete","_Fragment","BarController","BarElement","mode","setMode","statsOptions","userOptions","setStatsRange","currency","language","getValuesForBarDiagram","year","colors","keys","key","period","isInRange","Number","constants","expense","expenseLight","income","incomeLight","languages","months","getSymbolAndPrice","backgroundColor","onClick","_","chartElements","index","newRangeItem","Bar","ArcElement","PieController","Legend","Title","categories","categoryStore","valuesByCategory","getValuesForPieDiagram","names","categoryId","name","color","round","Pie","position","StatsCard","resetRange","open","setStatsType","getTotalInCurrentRange","cardTitle","Typography","Text","fontSize","concat","gap","placement","title","ReloadOutlined","scale","Card","bordered","Statistic","trigger","DatePicker","RangePicker","minDate","startDate","maxDate","prefix","valueStyle","TypeSelect","isBetween","Stats","loading","tourRefs","resetRangeWithEsc","event","window","addEventListener","removeEventListener","isRangeChanged","DiagramsJSX","ref","justify","DiagramBar","DiagramPie","LargeSpin","Empty","image","PRESENTED_IMAGE_SIMPLE","description"],"sourceRoot":""}