{"version":3,"file":"static/js/887.3eb04a50.chunk.js","mappings":"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","sources":["components/CurrencySelect.tsx","hooks/useDebounce.ts","utils/calculatePrices.ts","components/CategorySelect.tsx","components/ItemModal.tsx","components/ListItem.tsx","components/ItemList.tsx","components/NewItemButton.tsx","components/YearSelect.tsx","components/CategoriesSelect.tsx","components/SortSelect.tsx","components/ModeSelect.tsx","components/Selectors.tsx","pages/Expenses.tsx","utils/transformData.ts","utils/utils.ts"],"sourcesContent":["import { Select } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { Dispatch, SetStateAction } from 'react';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tvalue: string;\r\n\tonChange: (event: any) => void;\r\n\tsetCurrency?: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nconst CurrencySelect: React.FC<Props> = observer(({ value, onChange }) => {\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tvalue={value}\r\n\t\t\tonChange={onChange}\r\n\t\t>\r\n\t\t\t<Select.Option value='USD'>USD</Select.Option>\r\n\t\t\t<Select.Option value='EUR'>EUR</Select.Option>\r\n\t\t\t<Select.Option value='RUB'>RUB</Select.Option>\r\n\t\t</Select>\r\n\t);\r\n});\r\n\r\nexport default CurrencySelect;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useDebounce = (value: any, delay: number = 250) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const timerId = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce\r\n","import constants from '../settings/constants';\r\nimport { currencies, rates } from '../settings/interfaces';\r\n\r\nconst calculatePrices = (\r\n\tprices: currencies,\r\n\trates: rates,\r\n\tcurrency: string = constants.baseCurrency\r\n) => {\r\n\tswitch (currency) {\r\n\t\tcase 'USD':\r\n\t\t\tprices['EUR'] = prices['USD'] * rates['EUR'];\r\n\t\t\tprices['RUB'] = prices['USD'] * rates['RUB'];\r\n\t\t\tbreak;\r\n\t\tcase 'EUR':\r\n\t\t\tprices['USD'] = prices['EUR'] / rates['EUR'];\r\n\t\t\tprices['RUB'] = (prices['EUR'] * rates['RUB']) / rates['EUR'];\r\n\t\t\tbreak;\r\n\t\tcase 'RUB':\r\n\t\t\tprices['EUR'] = (prices['RUB'] / rates['RUB']) * rates['EUR'];\r\n\t\t\tprices['USD'] = prices['RUB'] / rates['RUB'];\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t}\r\n\r\n\treturn prices;\r\n};\r\n\r\nexport default calculatePrices;\r\n","import React from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select } from 'antd';\r\nimport { EditFilled } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tvalue: category;\r\n\tonChange: (arg0: number) => void;\r\n}\r\n\r\nconst CategorySelect: React.FC<Props> = observer(({ value, onChange }) => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tallowClear\r\n\t\t\tstyle={{ minInlineSize: '7em' }}\r\n\t\t\tonChange={onChange}\r\n\t\t\tvalue={value?.id}\r\n\t\t\tsuffixIcon={<EditFilled style={{ color: value?.color }} />}\r\n\t\t>\r\n\t\t\t{categories.map((category: category) => (\r\n\t\t\t\t<Select.Option\r\n\t\t\t\t\tkey={category.id}\r\n\t\t\t\t\tvalue={category.id}\r\n\t\t\t\t>\r\n\t\t\t\t\t{category.name}\r\n\t\t\t\t</Select.Option>\r\n\t\t\t))}\r\n\t\t</Select>\r\n\t);\r\n});\r\n\r\nexport default CategorySelect;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport calculatePrices from '../utils/calculatePrices';\r\nimport { ExpenseItem, category } from '../settings/interfaces';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport languages from 'settings/languages';\r\nimport { Col, DatePicker, Form, Input, Modal, Row } from 'antd';\r\nimport CurrencySelect from 'components/CurrencySelect';\r\nimport constants from 'settings/constants';\r\nimport dayjs from 'dayjs';\r\nimport CategorySelect from './CategorySelect';\r\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\ninterface Props {\r\n\topened: boolean;\r\n\tinitialItem: ExpenseItem;\r\n\ttoggleOpened: () => void;\r\n\tsubmitItem: (arg0: ExpenseItem) => void;\r\n}\r\n\r\nconst ItemModal: React.FC<Props> = observer(\r\n\t({ opened, initialItem, toggleOpened, submitItem }) => {\r\n\t\tconst [currency, setCurrency] = useState(constants.baseCurrency);\r\n\t\tconst { categories } = categoryStore;\r\n\t\tconst { currencyRates, isSmallScreen } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\r\n\t\tconst { language } = userOptions;\r\n\r\n\t\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(initialItem);\r\n\r\n\t\tconst handleTitleChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\ttitle: value,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleDateChange = useCallback(\r\n\t\t\t(value: dayjs.Dayjs) => {\r\n\t\t\t\tif (value)\r\n\t\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tdate: value,\r\n\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleCategoryChange = useCallback(\r\n\t\t\t(id: number) => {\r\n\t\t\t\tconst foundCategory = categories.find((cat: category) => cat.id === id);\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\tcategory: foundCategory || prevItem.category,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem, categories]\r\n\t\t);\r\n\r\n\t\tconst handlePriceChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem) => {\r\n\t\t\t\t\tconst updatedItem = {\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tprice: {\r\n\t\t\t\t\t\t\t...prevItem.price,\r\n\t\t\t\t\t\t\t[currency]: Number(value),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...updatedItem,\r\n\t\t\t\t\t\tprice: calculatePrices(updatedItem.price, currencyRates, currency),\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentItem, currency, currencyRates]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tconst submitItemWithEnter = (event: KeyboardEvent) => {\r\n\t\t\t\tif (event.key === 'Enter' && opened) {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\twindow.addEventListener('keyup', submitItemWithEnter);\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t};\r\n\t\t}, [currentItem, submitItem, opened]);\r\n\r\n\t\tconst TitleJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={currentItem.title}\r\n\t\t\t\tonInput={handleTitleChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst PriceJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='number'\r\n\t\t\t\tmin='1'\r\n\t\t\t\tstep='1'\r\n\t\t\t\tvalue={Math.round(currentItem.price[currency])}\r\n\t\t\t\tonInput={handlePriceChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CurrencyJSX = (\r\n\t\t\t<CurrencySelect\r\n\t\t\t\tvalue={currency}\r\n\t\t\t\tsetCurrency={setCurrency}\r\n\t\t\t\tonChange={setCurrency}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst DateJSX = (\r\n\t\t\t<DatePicker\r\n\t\t\t\trequired\r\n\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\tvalue={currentItem.date}\r\n\t\t\t\tminDate={constants.startDate}\r\n\t\t\t\tmaxDate={dayjs()}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CategoryJSX = (\r\n\t\t\t<CategorySelect\r\n\t\t\t\tvalue={currentItem.category}\r\n\t\t\t\tonChange={handleCategoryChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\tstyle={{ inlineSize: '' }}\r\n\t\t\t\topen={opened}\r\n\t\t\t\tokButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tcancelButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tonOk={() => {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t}}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetCurrentItem(initialItem);\r\n\t\t\t\t\ttoggleOpened();\r\n\t\t\t\t}}\r\n\t\t\t\tokText={<CheckOutlined />}\r\n\t\t\t\tcancelText={<CloseOutlined />}\r\n\t\t\t>\r\n\t\t\t\t<Form\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tlayout='vertical'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Form.Item label={languages.title[language]}>{TitleJSX}</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.price[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={16}>{PriceJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={7}>{CurrencyJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.dateAndCat[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={10}>{DateJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={13}>{CategoryJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default ItemModal;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport { ExpenseItem, Mode } from '../settings/interfaces';\r\nimport Item from 'antd/es/list/Item';\r\nimport { Card, Col, Flex, Progress, Statistic, Tag, Typography } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport Title from 'antd/es/typography/Title';\r\nimport { CloseOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\nimport constants from 'settings/constants';\r\nimport ItemModal from './ItemModal';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\ninterface Props {\r\n\tmode: Mode;\r\n\tinitialItem: ExpenseItem;\r\n}\r\n\r\nconst ListItem: React.FC<Props> = observer(({ mode, initialItem }) => {\r\n\tconst { id, category, date, title, price } = initialItem;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { replaceItem, removeItem } = listStore;\r\n\tconst { userOptions } = optionsStore;\r\n\r\n\tconst { currency, language } = userOptions;\r\n\r\n\tconst [isItemDeleting, setIsItemDeleting] = useState<boolean>(false);\r\n\tconst [deleteValue, setDeleteValue] = useState<number>(0);\r\n\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\r\n\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>({\r\n\t\tid: id,\r\n\t\tdate: date,\r\n\t\ttitle: title,\r\n\t\tcategory: category,\r\n\t\tprice: price,\r\n\t});\r\n\r\n\tconst toggleIsItemDeleting = () => {\r\n\t\tsetIsItemDeleting((prevValue: boolean) => !prevValue);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst deleteId = setInterval(() => {\r\n\t\t\tsetDeleteValue((prevValue: number) => {\r\n\t\t\t\tconst newValue = prevValue + 10;\r\n\t\t\t\tif (newValue >= constants.deleteDelay && isItemDeleting) {\r\n\t\t\t\t\tremoveItem(currentItem);\r\n\t\t\t\t}\r\n\t\t\t\treturn newValue;\r\n\t\t\t});\r\n\t\t}, 10);\r\n\t\tif (!isItemDeleting) {\r\n\t\t\tclearInterval(deleteId);\r\n\t\t\tsetDeleteValue(0);\r\n\t\t}\r\n\t\treturn () => clearInterval(deleteId);\r\n\t}, [isItemDeleting, currentItem, removeItem]);\r\n\r\n\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t}, [setIsModalOpened]);\r\n\r\n\tconst updateCurrentItem = useCallback(\r\n\t\t(item: ExpenseItem) => {\r\n\t\t\tsetCurrentItem(item);\r\n\t\t\treplaceItem(item);\r\n\t\t\ttoggleIsModalOpened();\r\n\t\t},\r\n\t\t[setCurrentItem, replaceItem, toggleIsModalOpened]\r\n\t);\r\n\r\n\tconst TitleJSX = (\r\n\t\t<Flex\r\n\t\t\tjustify='center'\r\n\t\t\tstyle={{\r\n\t\t\t\topacity: isItemDeleting || !currentItem.title ? '.5' : '1',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{isSmallScreen ? (\r\n\t\t\t\t<Typography.Text\r\n\t\t\t\t\tstrong\r\n\t\t\t\t\tellipsis\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentItem.title || languages.noTitle[language]}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t) : (\r\n\t\t\t\t<Title\r\n\t\t\t\t\tellipsis\r\n\t\t\t\t\tlevel={3}\r\n\t\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentItem.title || languages.noTitle[language]}\r\n\t\t\t\t</Title>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst DateJSX = (\r\n\t\t<Statistic\r\n\t\t\tvalue={currentItem.date.format('DD.MM.YY')}\r\n\t\t\tstyle={{\r\n\t\t\t\tscale: isSmallScreen ? '.75' : '1',\r\n\t\t\t\topacity: isItemDeleting ? '.5' : '1',\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n\r\n\tconst CategoryJSX = (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\talign='stretch'\r\n\t\t\tstyle={{\r\n\t\t\t\topacity: isItemDeleting ? '.5' : '1',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Tag color={currentItem.category.color}>\r\n\t\t\t\t<span\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmargin: 'auto',\r\n\t\t\t\t\t\tcolor: currentItem.category.color,\r\n\t\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentItem.category.name}\r\n\t\t\t\t</span>\r\n\t\t\t</Tag>\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst PriceJSX = (\r\n\t\t<Flex\r\n\t\t\tjustify='center'\r\n\t\t\tstyle={{\r\n\t\t\t\topacity: isItemDeleting ? '.5' : '1',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{isSmallScreen ? (\r\n\t\t\t\t<Typography.Text strong>\r\n\t\t\t\t\t{getSymbolAndPrice(currency)}\r\n\t\t\t\t\t{Math.round(currentItem.price[currency])}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t) : (\r\n\t\t\t\t<Title\r\n\t\t\t\t\tlevel={3}\r\n\t\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{getSymbolAndPrice(currency, currentItem.price[currency])}\r\n\t\t\t\t</Title>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst DeleteJSX = isItemDeleting ? (\r\n\t\t<CloseOutlined\r\n\t\t\tonClick={toggleIsItemDeleting}\r\n\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t/>\r\n\t) : (\r\n\t\t<DeleteOutlined\r\n\t\t\tonClick={toggleIsItemDeleting}\r\n\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t/>\r\n\t);\r\n\r\n\tconst ProgressJSX = (\r\n\t\t<Progress\r\n\t\t\tshowInfo={false}\r\n\t\t\tpercent={(deleteValue / constants.deleteDelay) * 100}\r\n\t\t\tstatus='exception'\r\n\t\t/>\r\n\t);\r\n\r\n\tconst EditJSX = (\r\n\t\t<EditOutlined\r\n\t\t\tonClick={\r\n\t\t\t\t!isItemDeleting ? () => updateCurrentItem({ ...initialItem }) : () => {}\r\n\t\t\t}\r\n\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t/>\r\n\t);\r\n\r\n\tconst ActionsJSX = (\r\n\t\t<Flex justify='space-evenly'>\r\n\t\t\t{EditJSX}\r\n\t\t\t{PriceJSX}\r\n\t\t\t{DeleteJSX}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ItemModal\r\n\t\t\t\topened={isModalOpened}\r\n\t\t\t\tinitialItem={currentItem}\r\n\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\tsubmitItem={updateCurrentItem}\r\n\t\t\t/>\r\n\t\t\t{mode === 'list' ? (\r\n\t\t\t\t<Item>\r\n\t\t\t\t\t{!isItemDeleting ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Col>{DateJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={9}>{TitleJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={3}>{CategoryJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={5}>{PriceJSX}</Col>\r\n\t\t\t\t\t\t\t<Col>{EditJSX}</Col>\r\n\t\t\t\t\t\t\t<Col>{DeleteJSX}</Col>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Col span={21}>{ProgressJSX}</Col>\r\n\t\t\t\t\t\t\t<Col>{DeleteJSX}</Col>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Item>\r\n\t\t\t) : (\r\n\t\t\t\t<Card\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\tbordered\r\n\t\t\t\t\ttitle={isItemDeleting ? ProgressJSX : TitleJSX}\r\n\t\t\t\t\tactions={[ActionsJSX]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Flex justify='center'>\r\n\t\t\t\t\t\t<Flex\r\n\t\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\t\talign='stretch'\r\n\t\t\t\t\t\t\tgap={4}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{DateJSX}\r\n\t\t\t\t\t\t\t{CategoryJSX}\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Card>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default ListItem;\r\n","import React, { memo, useEffect, useMemo, useState } from 'react';\r\nimport ListItem from './ListItem';\r\nimport { ExpenseItem, ListOptions } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Col, Empty, List, Row, Spin } from 'antd';\r\nimport { getListToShowOnCurrentPage } from 'utils/transformData';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport useDebounce from 'hooks/useDebounce';\r\n\r\ninterface Props {\r\n\tfilteredList: ExpenseItem[];\r\n}\r\n\r\nconst ItemList: React.FC<Props> = observer(({ filteredList }) => {\r\n\tconst { loading } = listStore;\r\n\tconst { width } = userStore;\r\n\tconst { listOptions } = optionsStore;\r\n\r\n\tconst debouncedOptions: ListOptions = useDebounce(listOptions);\r\n\r\n\tconst [colNumber, setColNumber] = useState<number>(4);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (width < 350) {\r\n\t\t\tsetColNumber(1);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (width < 450) {\r\n\t\t\tsetColNumber(2);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (width < 850) {\r\n\t\t\tsetColNumber(3);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetColNumber(4);\r\n\t}, [setColNumber, width]);\r\n\r\n\tconst listToShowOnCurrentPage = useMemo(\r\n\t\t() => getListToShowOnCurrentPage(debouncedOptions, filteredList),\r\n\t\t[filteredList, debouncedOptions]\r\n\t);\r\n\r\n\tconst splittedList = useMemo(() => {\r\n\t\tconst result: ExpenseItem[][] = [];\r\n\t\tlet row = -1;\r\n\r\n\t\tlistToShowOnCurrentPage.forEach((item: ExpenseItem, col: number) => {\r\n\t\t\tif (col % colNumber === 0) {\r\n\t\t\t\trow++;\r\n\t\t\t\tresult.push([]);\r\n\t\t\t}\r\n\t\t\tresult[row].push(item);\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}, [colNumber, listToShowOnCurrentPage]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<Spin />\r\n\t\t\t) : (\r\n\t\t\t\t!filteredList.length && (\r\n\t\t\t\t\t<Empty\r\n\t\t\t\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\t\t\t\tdescription={''}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t)}\r\n\t\t\t{debouncedOptions.mode === 'list' ? (\r\n\t\t\t\t<List style={{ inlineSize: '100%' }}>\r\n\t\t\t\t\t{listToShowOnCurrentPage.map((item: ExpenseItem) => (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\tmode={debouncedOptions.mode}\r\n\t\t\t\t\t\t\tinitialItem={item}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</List>\r\n\t\t\t) : (\r\n\t\t\t\tsplittedList.map((row: ExpenseItem[]) => (\r\n\t\t\t\t\t<Row\r\n\t\t\t\t\t\tkey={row[0].id}\r\n\t\t\t\t\t\tgutter={16}\r\n\t\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{row.map((item: ExpenseItem) => (\r\n\t\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\tspan={24 / colNumber}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\tmode={debouncedOptions.mode}\r\n\t\t\t\t\t\t\t\t\tinitialItem={item}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t))\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default memo(ItemList);\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\nimport { ExpenseItem } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport constants from 'settings/constants';\r\nimport ItemModal from './ItemModal';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\n\r\nconst NewItemButton: React.FC = observer(() => {\r\n\tconst { addItem } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\tconst emptyItem: ExpenseItem = useMemo(() => constants.emptyItem, []);\r\n\r\n\tconst [newItem, setNewItem] = useState<ExpenseItem>(emptyItem);\r\n\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\r\n\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t}, [setIsModalOpened]);\r\n\r\n\tconst clearItem = useCallback(() => {\r\n\t\tsetNewItem(emptyItem);\r\n\t}, [setNewItem, emptyItem]);\r\n\r\n\tconst addNewItem = useCallback(\r\n\t\t(item: ExpenseItem) => {\r\n\t\t\taddItem(item);\r\n\t\t\tclearItem();\r\n\t\t\ttoggleIsModalOpened();\r\n\t\t},\r\n\t\t[addItem, toggleIsModalOpened, clearItem]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={toggleIsModalOpened}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<PlusOutlined />\r\n\t\t\t</Button>\r\n\t\t\t<ItemModal\r\n\t\t\t\topened={isModalOpened}\r\n\t\t\t\tinitialItem={newItem}\r\n\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\tsubmitItem={addNewItem}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default NewItemButton;\r\n","import React, { useMemo } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Select } from 'antd';\r\nimport { ClockCircleOutlined } from '@ant-design/icons';\r\nimport { listStore } from 'utils/listStore';\r\nimport { ExpenseItem } from 'settings/interfaces';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst YearSelect: React.FC = observer(() => {\r\n\tconst { list } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleYearChanging } = optionsStore;\r\n\r\n\tconst years = useMemo(\r\n\t\t() =>\r\n\t\t\tlist\r\n\t\t\t\t.reduce((acc: string[], item: ExpenseItem) => {\r\n\t\t\t\t\tconst year = item.date.year().toString();\r\n\t\t\t\t\tif (!acc.find((item: string) => item === year)) return [...acc, year];\r\n\t\t\t\t\treturn acc;\r\n\t\t\t\t}, [])\r\n\t\t\t\t.sort((prev, next) => Number(prev) - Number(next)),\r\n\t\t[list]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t<Select\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tmode='multiple'\r\n\t\t\t\tshowSearch={false}\r\n\t\t\t\tvalue={listOptions.years}\r\n\t\t\t\tonChange={handleYearChanging}\r\n\t\t\t\tstyle={{ minInlineSize: '7em' }}\r\n\t\t\t>\r\n\t\t\t\t{years.reverse().map((year: string) => (\r\n\t\t\t\t\t<Select.Option\r\n\t\t\t\t\t\tkey={year}\r\n\t\t\t\t\t\tvalue={year}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{year}\r\n\t\t\t\t\t</Select.Option>\r\n\t\t\t\t))}\r\n\t\t\t</Select>\r\n\t\t\t<ClockCircleOutlined style={{ opacity: 0.5 }} />\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default YearSelect;\r\n","import React from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select, Tag } from 'antd';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst tagRender = (props: any, categories: category[]) => {\r\n\tconst { label, value, onClose } = props;\r\n\tconst onPreventMouseDown = (event: any) => {\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\t};\r\n\r\n\tconst color = categories.find(\r\n\t\t(category: category) => category.id === value\r\n\t)?.color;\r\n\r\n\treturn (\r\n\t\t<Tag\r\n\t\t\tcolor={color}\r\n\t\t\tonMouseDown={onPreventMouseDown}\r\n\t\t\tclosable={true}\r\n\t\t\tonClose={onClose}\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginInlineEnd: 4,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<span\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcolor: color,\r\n\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{label}\r\n\t\t\t</span>\r\n\t\t</Tag>\r\n\t);\r\n};\r\n\r\nconst CategoriesSelect: React.FC = observer(() => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleCategoriesToFilterChange } = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tmode='multiple'\r\n\t\t\tshowSearch={false}\r\n\t\t\ttagRender={(props) => tagRender(props, categories)}\r\n\t\t\tstyle={{ minInlineSize: '10em' }}\r\n\t\t\tvalue={listOptions.categoriesToFilter.map((value: category) => value.id)}\r\n\t\t\tonChange={handleCategoriesToFilterChange}\r\n\t\t>\r\n\t\t\t{categories.map((category: category) => (\r\n\t\t\t\t<Select.Option\r\n\t\t\t\t\tkey={category.id}\r\n\t\t\t\t\tvalue={category.id}\r\n\t\t\t\t>\r\n\t\t\t\t\t{category.name}\r\n\t\t\t\t</Select.Option>\r\n\t\t\t))}\r\n\t\t</Select>\r\n\t);\r\n});\r\n\r\nexport default CategoriesSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented } from 'antd';\r\nimport {\r\n\tCalendarOutlined,\r\n\tDollarOutlined,\r\n\tFontColorsOutlined,\r\n\tSortAscendingOutlined,\r\n\tSortDescendingOutlined,\r\n} from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst SortSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { setIsSortingReversed, listOptions, handleSortAlgorithmChanging } =\r\n\t\toptionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t{listOptions.isSortingReversed ? (\r\n\t\t\t\t<SortDescendingOutlined />\r\n\t\t\t) : (\r\n\t\t\t\t<SortAscendingOutlined />\r\n\t\t\t)}\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.sortingAlgorithm}\r\n\t\t\t\tonDoubleClick={() =>\r\n\t\t\t\t\tsetIsSortingReversed(!listOptions.isSortingReversed)\r\n\t\t\t\t}\r\n\t\t\t\tonChange={handleSortAlgorithmChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{ label: <CalendarOutlined />, value: 'date' },\r\n\t\t\t\t\t{ label: <FontColorsOutlined />, value: 'title' },\r\n\t\t\t\t\t{ label: <DollarOutlined />, value: 'price' },\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default SortSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented } from 'antd';\r\nimport { MenuOutlined, TableOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst ModeSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleModeChanging } = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.mode}\r\n\t\t\t\tonChange={handleModeChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{ label: <MenuOutlined />, value: 'list', disabled: isSmallScreen },\r\n\t\t\t\t\t{ label: <TableOutlined />, value: 'grid' },\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default ModeSelect;\r\n","import { Button, Divider, Flex, Pagination } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useMemo } from 'react';\r\nimport NewItemButton from './NewItemButton';\r\nimport YearSelect from './YearSelect';\r\nimport CategoriesSelect from './CategoriesSelect';\r\nimport SortSelect from './SortSelect';\r\nimport ModeSelect from './ModeSelect';\r\nimport { ReloadOutlined } from '@ant-design/icons';\r\nimport { listStore } from 'utils/listStore';\r\nimport constants from 'settings/constants';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\ninterface Props {\r\n\ttotal: number;\r\n}\r\n\r\nconst Selectors: React.FC<Props> = observer(({ total }) => {\r\n\tconst { loading } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, resetSettings, handlePageChanging } = optionsStore;\r\n\r\n\tconst isSettingsChanged = useMemo(\r\n\t\t() =>\r\n\t\t\tlistOptions.isSortingReversed ||\r\n\t\t\tlistOptions.years.length > 0 ||\r\n\t\t\tlistOptions.categoriesToFilter.length > 0 ||\r\n\t\t\tlistOptions.pageSize !== constants.defaultPageSize ||\r\n\t\t\tlistOptions.currentPage !== 1 ||\r\n\t\t\tlistOptions.sortingAlgorithm !== 'date',\r\n\t\t[listOptions]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t>\r\n\t\t\t<Flex\r\n\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\tgap={16}\r\n\t\t\t\tvertical={isSmallScreen}\r\n\t\t\t>\r\n\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t<NewItemButton />\r\n\t\t\t\t\t<YearSelect />\r\n\t\t\t\t\t<CategoriesSelect />\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t<SortSelect />\r\n\t\t\t\t\t<ModeSelect />\r\n\t\t\t\t\t{isSettingsChanged && (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={resetSettings}\r\n\t\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ReloadOutlined />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Flex>\r\n\t\t\t</Flex>\r\n\t\t\t<Divider />\r\n\t\t\t{!loading && (\r\n\t\t\t\t<Pagination\r\n\t\t\t\t\tstyle={{ alignSelf: 'center' }}\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\tshowSizeChanger\r\n\t\t\t\t\tpageSizeOptions={constants.pageSizeOptions}\r\n\t\t\t\t\tcurrent={listOptions.currentPage}\r\n\t\t\t\t\tpageSize={listOptions.pageSize}\r\n\t\t\t\t\ttotal={total}\r\n\t\t\t\t\tonChange={handlePageChanging}\r\n\t\t\t\t\tonShowSizeChange={handlePageChanging}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default Selectors;\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport ItemList from '../components/ItemList';\r\nimport { Flex } from 'antd';\r\nimport Selectors from 'components/Selectors';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { getFilteredList } from 'utils/transformData';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst Expenses: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { listOptions, userOptions, handleModeChanging, handlePageChanging } =\r\n\t\toptionsStore;\r\n\r\n\tconst { language } = userOptions;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isSmallScreen) {\r\n\t\t\thandleModeChanging('grid');\r\n\t\t}\r\n\t}, [isSmallScreen, handleModeChanging]);\r\n\r\n\tuseEffect(() => {\r\n\t\thandlePageChanging(1, listOptions.pageSize);\r\n\t}, [\r\n\t\tlistOptions.years,\r\n\t\tlistOptions.sortingAlgorithm,\r\n\t\tlistOptions.isSortingReversed,\r\n\t\tlistOptions.categoriesToFilter,\r\n\t\tlistOptions.pageSize,\r\n\t\thandlePageChanging,\r\n\t]);\r\n\r\n\tconst filteredList = useMemo(\r\n\t\t() => getFilteredList(listOptions, list, language),\r\n\t\t[list, language, listOptions]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t\talign='center'\r\n\t\t>\r\n\t\t\t<Selectors total={filteredList.length} />\r\n\t\t\t<ItemList filteredList={filteredList} />\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default Expenses;\r\n","import {\r\n\tExpenseItem,\r\n\tListOptions,\r\n\tValue,\r\n\tcategory,\r\n\tlanguage,\r\n} from 'settings/interfaces';\r\nimport { sortBy } from './utils';\r\n\r\nexport const getFilteredList = (\r\n\toptions: ListOptions,\r\n\tlist: ExpenseItem[],\r\n\tlanguage: language\r\n) => {\r\n\tconst { years, categoriesToFilter, sortingAlgorithm, isSortingReversed } =\r\n\t\toptions;\r\n\tif (years || categoriesToFilter) {\r\n\t\treturn sortBy(\r\n\t\t\tlist.filter((item: ExpenseItem) => {\r\n\t\t\t\tif (!categoriesToFilter.length && years.length)\r\n\t\t\t\t\treturn years.some(\r\n\t\t\t\t\t\t(year: string) => item.date.year().toString() === year\r\n\t\t\t\t\t);\r\n\t\t\t\tif (!years.length && categoriesToFilter.length)\r\n\t\t\t\t\treturn categoriesToFilter.some(\r\n\t\t\t\t\t\t(category: category) => item.category.id === category.id\r\n\t\t\t\t\t);\r\n\t\t\t\tif (years.length && categoriesToFilter.length)\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\tyears.some(\r\n\t\t\t\t\t\t\t(year: string) => item.date.year().toString() === year\r\n\t\t\t\t\t\t) &&\r\n\t\t\t\t\t\tcategoriesToFilter.some(\r\n\t\t\t\t\t\t\t(category: category) => item.category.id === category.id\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\treturn item;\r\n\t\t\t}),\r\n\t\t\tsortingAlgorithm,\r\n\t\t\tisSortingReversed,\r\n\t\t\tlanguage\r\n\t\t);\r\n\t} else {\r\n\t\treturn sortBy(list, sortingAlgorithm, isSortingReversed, language);\r\n\t}\r\n};\r\n\r\nexport const getListToShowOnCurrentPage = (\r\n\toptions: ListOptions,\r\n\tfilteredList: ExpenseItem[]\r\n) => {\r\n\tconst { currentPage, pageSize } = options;\r\n\tconst startIndex = (currentPage - 1) * pageSize;\r\n\tconst endIndex = startIndex + pageSize;\r\n\treturn filteredList.slice(startIndex, endIndex);\r\n};\r\n\r\nexport const getValuesForCalendar = (\r\n\tlist: ExpenseItem[],\r\n\tcurrency: string,\r\n\tyear: number | null,\r\n\tmonth: number | null,\r\n\tday?: number | null\r\n) => {\r\n\tconst result: number[] = new Array(day === undefined ? 12 : 31).fill(0);\r\n\tlist.forEach((item: ExpenseItem) => {\r\n\t\tif (day === undefined) {\r\n\t\t\tif (item.date.year() === year)\r\n\t\t\t\tresult[item.date.month()] += item.price[currency];\r\n\t\t} else {\r\n\t\t\tif (item.date.year() === year && item.date.month() === month)\r\n\t\t\t\tresult[item.date.date()] += item.price[currency];\r\n\t\t}\r\n\t}, []);\r\n\treturn result.map((value: number) => Math.round(value));\r\n};\r\n\r\nexport const getValuesForBarDiagramByYear = (\r\n\tlist: ExpenseItem[],\r\n\tcurrency: string\r\n) => {\r\n\tconst result: { [key: string]: number } = {};\r\n\tlist.forEach((item: ExpenseItem) => {\r\n\t\tconst key = item.date.year().toString();\r\n\t\tif (result[key] === undefined) {\r\n\t\t\tresult[key] = 0;\r\n\t\t} else {\r\n\t\t\tresult[key] += item.price[currency];\r\n\t\t}\r\n\t});\r\n\r\n\tfor (let year in result) {\r\n\t\tresult[year] = Math.round(result[year]);\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\nexport const getValuesForBarDiagramByMonth = (\r\n\tlist: ExpenseItem[],\r\n\tyear: number | null,\r\n\tcurrency: string\r\n) => {\r\n\tconst result: number[] = new Array(12).fill(0);\r\n\tlist.forEach((item: ExpenseItem) => {\r\n\t\tif (item.date.year() === year) {\r\n\t\t\tconst key = item.date.month();\r\n\t\t\tresult[key] += item.price[currency];\r\n\t\t}\r\n\t});\r\n\treturn result.map((value: number) => Math.round(value));\r\n};\r\n\r\nexport const getValuesForPieDiagramByYear = (\r\n\tlist: ExpenseItem[],\r\n\tcurrency: string\r\n) => {\r\n\tconst values: Value[] = [];\r\n\tlist.forEach((item: ExpenseItem) => {\r\n\t\tconst indexOfCategory: number = values.findIndex(\r\n\t\t\t(value: Value) => value.category.id === item.category.id\r\n\t\t);\r\n\t\tif (indexOfCategory !== -1) {\r\n\t\t\tvalues[indexOfCategory].value += item.price[currency];\r\n\t\t} else {\r\n\t\t\tvalues.push({\r\n\t\t\t\tcategory: item.category,\r\n\t\t\t\tvalue: item.price[currency],\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\treturn values.map((value: Value) => ({\r\n\t\t...value,\r\n\t\tvalue: Math.round(value.value),\r\n\t}));\r\n};\r\n\r\nexport const getValuesForPieDiagramByMonth = (\r\n\tlist: ExpenseItem[],\r\n\tyear: number | null,\r\n\tmonth: number | null,\r\n\tcurrency: string\r\n) => {\r\n\tconst values: Value[] = [];\r\n\tlist.forEach((item: ExpenseItem) => {\r\n\t\tconst indexOfCategory: number = values.findIndex(\r\n\t\t\t(value: Value) => value.category.id === item.category.id\r\n\t\t);\r\n\t\tif (\r\n\t\t\titem.date.year() === year &&\r\n\t\t\t(month !== null ? item.date.month() === month : true)\r\n\t\t) {\r\n\t\t\tif (indexOfCategory !== -1) {\r\n\t\t\t\tvalues[indexOfCategory].value += item.price[currency];\r\n\t\t\t} else {\r\n\t\t\t\tvalues.push({\r\n\t\t\t\t\tcategory: item.category,\r\n\t\t\t\t\tvalue: item.price[currency],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn values.map((value: Value) => ({\r\n\t\t...value,\r\n\t\tvalue: Math.round(value.value),\r\n\t}));\r\n};\r\n\r\nexport const getValuesForPieDiagramInCurrentDay = (\r\n\tlist: ExpenseItem[],\r\n\tyear: number | null,\r\n\tmonth: number | null,\r\n\tday: number | null,\r\n\tcurrency: string\r\n) => {\r\n\tconst values: Value[] = [];\r\n\tlist.forEach((item: ExpenseItem) => {\r\n\t\tconst indexOfCategory: number = values.findIndex(\r\n\t\t\t(value: Value) => value.category.id === item.category.id\r\n\t\t);\r\n\t\tif (\r\n\t\t\titem.date.date() === day &&\r\n\t\t\titem.date.month() === month &&\r\n\t\t\titem.date.year() === year\r\n\t\t) {\r\n\t\t\tif (indexOfCategory !== -1) {\r\n\t\t\t\tvalues[indexOfCategory].value += item.price[currency];\r\n\t\t\t} else {\r\n\t\t\t\tvalues.push({\r\n\t\t\t\t\tcategory: item.category,\r\n\t\t\t\t\tvalue: item.price[currency],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn values.map((value: Value) => ({\r\n\t\t...value,\r\n\t\tvalue: Math.round(value.value),\r\n\t}));\r\n};\r\n","import { ExpenseItem, Sort, language } from 'settings/interfaces';\r\n\r\nexport const getSymbolAndPrice = (currency: string, price?: number) => {\r\n\tlet result = '';\r\n\tif (currency === 'USD') result += '$';\r\n\tif (currency === 'EUR') result += '€';\r\n\tif (currency === 'RUB') result += '₽';\r\n\r\n\tconst formattedPrice = Math.round(price as number)\r\n\t\t?.toString()\r\n\t\t.split('')\r\n\t\t.reverse()\r\n\t\t.reduce(\r\n\t\t\t(acc: string[], symbol: string, index: number) =>\r\n\t\t\t\tindex % 3 === 0 && index !== 0\r\n\t\t\t\t\t? [...acc, symbol + ',']\r\n\t\t\t\t\t: [...acc, symbol],\r\n\t\t\t[]\r\n\t\t)\r\n\t\t.reverse()\r\n\t\t.join('');\r\n\r\n\treturn price === undefined ? result : result + formattedPrice;\r\n};\r\n\r\nexport const sortBy = (\r\n\tlist: ExpenseItem[],\r\n\tsortingAlgorithm: Sort,\r\n\treversed: boolean,\r\n\tlanguage?: language\r\n) => {\r\n\tlet result: ExpenseItem[];\r\n\tswitch (sortingAlgorithm) {\r\n\t\tcase 'date':\r\n\t\t\tresult = [...list].sort(\r\n\t\t\t\t(prev: ExpenseItem, next: ExpenseItem) =>\r\n\t\t\t\t\tnext.date.valueOf() - prev.date.valueOf()\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'title':\r\n\t\t\tresult = [...list].sort((prev: ExpenseItem, next: ExpenseItem) =>\r\n\t\t\t\tprev.title.localeCompare(next.title, language, {\r\n\t\t\t\t\tsensitivity: 'base',\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'price':\r\n\t\t\tresult = [...list].sort(\r\n\t\t\t\t(prev: ExpenseItem, next: ExpenseItem) =>\r\n\t\t\t\t\tnext.price.USD - prev.price.USD\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tresult = [...list];\r\n\t}\r\n\r\n\treturn reversed ? result.reverse() : result;\r\n};\r\n"],"names":["observer","_ref","value","onChange","isSmallScreen","userStore","_jsxs","Select","size","children","_jsx","Option","delay","arguments","length","undefined","debouncedValue","setDebouncedValue","useState","useEffect","timerId","setTimeout","clearTimeout","prices","rates","constants","baseCurrency","categories","categoryStore","allowClear","style","minInlineSize","id","suffixIcon","EditFilled","color","map","category","name","opened","initialItem","toggleOpened","submitItem","currency","setCurrency","currencyRates","userOptions","optionsStore","language","currentItem","setCurrentItem","handleTitleChange","useCallback","event","target","prevItem","title","handleDateChange","date","handleCategoryChange","foundCategory","find","cat","handlePriceChange","updatedItem","price","Number","calculatePrices","submitItemWithEnter","key","window","removeEventListener","addEventListener","TitleJSX","Input","required","type","onInput","PriceJSX","min","step","Math","round","CurrencyJSX","CurrencySelect","DateJSX","DatePicker","minDate","startDate","maxDate","dayjs","CategoryJSX","CategorySelect","Modal","inlineSize","open","okButtonProps","cancelButtonProps","onOk","onCancel","okText","CheckOutlined","cancelText","CloseOutlined","Form","layout","Item","label","languages","Row","Col","span","dateAndCat","mode","replaceItem","removeItem","listStore","isItemDeleting","setIsItemDeleting","deleteValue","setDeleteValue","isModalOpened","setIsModalOpened","toggleIsItemDeleting","prevValue","deleteId","setInterval","newValue","deleteDelay","clearInterval","toggleIsModalOpened","updateCurrentItem","item","Flex","justify","opacity","Typography","Text","strong","ellipsis","noTitle","Title","level","margin","Statistic","format","scale","vertical","align","Tag","filter","getSymbolAndPrice","DeleteJSX","onClick","DeleteOutlined","ProgressJSX","Progress","showInfo","percent","status","EditJSX","EditOutlined","ActionsJSX","_Fragment","ItemModal","Card","bordered","actions","gap","ItemList","filteredList","loading","width","listOptions","debouncedOptions","useDebounce","colNumber","setColNumber","listToShowOnCurrentPage","useMemo","getListToShowOnCurrentPage","splittedList","result","row","forEach","col","push","Spin","Empty","image","PRESENTED_IMAGE_SIMPLE","description","List","ListItem","gutter","memo","addItem","emptyItem","newItem","setNewItem","clearItem","addNewItem","Button","PlusOutlined","YearSelect","list","handleYearChanging","years","reduce","acc","year","toString","sort","prev","next","alignSelf","showSearch","reverse","ClockCircleOutlined","handleCategoriesToFilterChange","tagRender","props","_categories$find","onClose","onMouseDown","preventDefault","stopPropagation","closable","marginInlineEnd","categoriesToFilter","setIsSortingReversed","handleSortAlgorithmChanging","isSortingReversed","SortDescendingOutlined","SortAscendingOutlined","Segmented","sortingAlgorithm","onDoubleClick","options","CalendarOutlined","FontColorsOutlined","DollarOutlined","handleModeChanging","MenuOutlined","disabled","TableOutlined","total","resetSettings","handlePageChanging","isSettingsChanged","pageSize","defaultPageSize","currentPage","NewItemButton","CategoriesSelect","SortSelect","ModeSelect","ReloadOutlined","Divider","Pagination","showSizeChanger","pageSizeOptions","current","onShowSizeChange","Expenses","getFilteredList","Selectors","sortBy","some","startIndex","endIndex","slice","getValuesForCalendar","month","day","Array","fill","getValuesForBarDiagramByYear","getValuesForBarDiagramByMonth","getValuesForPieDiagramByYear","values","indexOfCategory","findIndex","getValuesForPieDiagramByMonth","getValuesForPieDiagramInCurrentDay","_Math$round","formattedPrice","split","symbol","index","join","reversed","valueOf","localeCompare","sensitivity","USD"],"sourceRoot":""}