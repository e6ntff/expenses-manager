{"version":3,"file":"static/js/12.ba4be61a.chunk.js","mappings":"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","sources":["components/DeleteButton.tsx","components/CategoryItem.tsx","components/CategoryList.tsx","components/AddCategory.tsx","pages/Categories.tsx"],"sourcesContent":["import { DeleteOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tremove: () => void;\r\n}\r\n\r\nconst DeleteButton: React.FC<Props> = observer(({ remove }) => {\r\n\tconst { userOptions } = optionsStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.delete[userOptions.language]}>\r\n\t\t\t<DeleteOutlined\r\n\t\t\t\tonClick={remove}\r\n\t\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default DeleteButton;\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Card, ColorPicker, Flex, Tooltip, Typography } from 'antd';\r\nimport { Color } from 'antd/es/color-picker';\r\nimport Title from 'antd/es/typography/Title';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport DeleteButton from './DeleteButton';\r\n\r\ninterface Props {\r\n\tinitialCategoryId: string;\r\n}\r\n\r\nconst CategoryItem: React.FC<Props> = observer(({ initialCategoryId }) => {\r\n\tconst { replaceCategory, categories, setLastDeletedCategoryId } =\r\n\t\tcategoryStore;\r\n\tconst { list } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { userOptions } = optionsStore;\r\n\r\n\tconst { language } = userOptions;\r\n\r\n\tconst [currentCategory, setCurrentCategory] = useState<category>(\r\n\t\tcategories[initialCategoryId]\r\n\t);\r\n\r\n\tconst itemsWithCurrentCategory = useMemo(\r\n\t\t() =>\r\n\t\t\tObject.keys(list).reduce(\r\n\t\t\t\t(acc: string[], key: string) =>\r\n\t\t\t\t\tlist[key].categoryId === initialCategoryId ? [...acc, key] : [...acc],\r\n\t\t\t\t[]\r\n\t\t\t),\r\n\t\t[list, initialCategoryId]\r\n\t);\r\n\r\n\tconst deleteCategory = useCallback(() => {\r\n\t\tsetLastDeletedCategoryId(initialCategoryId);\r\n\t}, [setLastDeletedCategoryId, initialCategoryId]);\r\n\r\n\tconst updateCurrentCategory = useCallback(\r\n\t\t(category: category) => {\r\n\t\t\tsetCurrentCategory((prevCategory: category) => {\r\n\t\t\t\tif (JSON.stringify(prevCategory) !== JSON.stringify(category)) {\r\n\t\t\t\t\treplaceCategory(initialCategoryId, category);\r\n\t\t\t\t\treturn category;\r\n\t\t\t\t}\r\n\t\t\t\treturn prevCategory;\r\n\t\t\t});\r\n\t\t},\r\n\t\t[setCurrentCategory, replaceCategory, initialCategoryId]\r\n\t);\r\n\r\n\tconst handleNameChange = useCallback(\r\n\t\t(value: string) => {\r\n\t\t\tsetCurrentCategory((prevCategory) => {\r\n\t\t\t\tconst newCategory: category = {\r\n\t\t\t\t\t...prevCategory,\r\n\t\t\t\t\tname: value,\r\n\t\t\t\t};\r\n\t\t\t\tupdateCurrentCategory(newCategory);\r\n\t\t\t\treturn newCategory;\r\n\t\t\t});\r\n\t\t},\r\n\t\t[setCurrentCategory, updateCurrentCategory]\r\n\t);\r\n\r\n\tconst handleColorChange = useCallback(\r\n\t\t(value: Color) => {\r\n\t\t\tsetCurrentCategory((prevCategory) => {\r\n\t\t\t\tconst newCategory: category = {\r\n\t\t\t\t\t...prevCategory,\r\n\t\t\t\t\tcolor: `#${value.toHex()}`,\r\n\t\t\t\t};\r\n\t\t\t\tupdateCurrentCategory(newCategory);\r\n\t\t\t\treturn newCategory;\r\n\t\t\t});\r\n\t\t},\r\n\t\t[setCurrentCategory, updateCurrentCategory]\r\n\t);\r\n\r\n\tconst ColorPickerJSX = (\r\n\t\t<ColorPicker\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tvalue={currentCategory.color}\r\n\t\t\tformat='hex'\r\n\t\t\tonChangeComplete={handleColorChange}\r\n\t\t/>\r\n\t);\r\n\r\n\tconst TitleJSX = (\r\n\t\t<Flex justify='center'>\r\n\t\t\t{isSmallScreen ? (\r\n\t\t\t\t<Typography.Text\r\n\t\t\t\t\tstrong\r\n\t\t\t\t\teditable={{ onChange: handleNameChange }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentCategory.name}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t) : (\r\n\t\t\t\t<Title\r\n\t\t\t\t\tlevel={isSmallScreen ? 5 : 3}\r\n\t\t\t\t\teditable={{ onChange: handleNameChange }}\r\n\t\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentCategory.name}\r\n\t\t\t\t</Title>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst tooltipTitle = useMemo(\r\n\t\t() =>\r\n\t\t\t`${languages.itemsWithCurrentCategory[language]}: ${itemsWithCurrentCategory.length}`,\r\n\t\t[itemsWithCurrentCategory, language]\r\n\t);\r\n\r\n\tconst TooltipJSX = (\r\n\t\t<Tooltip title={tooltipTitle}>\r\n\t\t\t<InfoCircleOutlined style={{ scale: isSmallScreen ? '1' : '1.5' }} />\r\n\t\t</Tooltip>\r\n\t);\r\n\r\n\tconst DeleteButtonJSX = <DeleteButton remove={deleteCategory} />;\r\n\r\n\treturn (\r\n\t\t<Card\r\n\t\t\tstyle={{ inlineSize: isSmallScreen ? '8em' : '12em' }}\r\n\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\ttitle={TitleJSX}\r\n\t\t\tactions={[TooltipJSX, ColorPickerJSX, DeleteButtonJSX]}\r\n\t\t\tstyles={{\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\tpadding: 10,\r\n\t\t\t\t},\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tpadding: 0,\r\n\t\t\t\t},\r\n\t\t\t}}\r\n\t\t></Card>\r\n\t);\r\n});\r\n\r\nexport default CategoryItem;\r\n","import React, { memo, useMemo } from 'react';\r\nimport CategoryItem from './CategoryItem';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Empty, Flex, Space } from 'antd';\r\nimport { userStore } from 'utils/userStore';\r\nimport LargeSpin from './LargeSpin';\r\n\r\nconst CategoryList: React.FC = observer(() => {\r\n\tconst { categories, lastDeletedCategoryId } = categoryStore;\r\n\tconst { loading, isSmallScreen } = userStore;\r\n\r\n\tconst categoriesToShowIds = useMemo(\r\n\t\t() =>\r\n\t\t\tObject.keys(categories)\r\n\t\t\t\t.slice(1)\r\n\t\t\t\t.filter((key: string) => key !== lastDeletedCategoryId),\r\n\t\t[categories, lastDeletedCategoryId]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<LargeSpin />\r\n\t\t\t) : Object.values(categories).length > 1 ? (\r\n\t\t\t\t<Space\r\n\t\t\t\t\twrap\r\n\t\t\t\t\tsize={isSmallScreen ? 8 : 16}\r\n\t\t\t\t>\r\n\t\t\t\t\t{categoriesToShowIds.map((key: string) => (\r\n\t\t\t\t\t\t<CategoryItem\r\n\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\tinitialCategoryId={key}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Space>\r\n\t\t\t) : (\r\n\t\t\t\t<Empty\r\n\t\t\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\t\t\tdescription={''}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default memo(CategoryList);\r\n","import React, { useCallback, useState } from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport constants from 'settings/constants';\r\nimport ColorPicker, { Color } from 'antd/es/color-picker';\r\nimport { Button, Flex, Input } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\n\r\nconst AddCategory: React.FC = observer(() => {\r\n\tconst { addCategory } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\tconst [currentCategory, setCurrentCategory] = useState<category>(\r\n\t\tconstants.defaultCategory\r\n\t);\r\n\r\n\tconst handleNameChange = useCallback(\r\n\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\tconst { value } = event.target;\r\n\t\t\tsetCurrentCategory((prevCategory) => ({\r\n\t\t\t\t...prevCategory,\r\n\t\t\t\tname: value,\r\n\t\t\t}));\r\n\t\t},\r\n\t\t[setCurrentCategory]\r\n\t);\r\n\r\n\tconst handleColorChange = useCallback(\r\n\t\t(value: Color) => {\r\n\t\t\tsetCurrentCategory((prevCategory) => ({\r\n\t\t\t\t...prevCategory,\r\n\t\t\t\tcolor: `#${value.toHex()}`,\r\n\t\t\t}));\r\n\t\t},\r\n\t\t[setCurrentCategory]\r\n\t);\r\n\r\n\tconst clearCurrentCategory = useCallback(() => {\r\n\t\tsetCurrentCategory(constants.defaultCategory);\r\n\t}, [setCurrentCategory]);\r\n\r\n\tconst addCurrentCategory = useCallback(() => {\r\n\t\taddCategory(currentCategory);\r\n\t\tclearCurrentCategory();\r\n\t}, [currentCategory, addCategory, clearCurrentCategory]);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={32}\r\n\t\t\tstyle={{ inlineSize: 'min(100%, 560px)', margin: 'auto' }}\r\n\t\t>\r\n\t\t\t<ColorPicker\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={currentCategory.color}\r\n\t\t\t\tformat='hex'\r\n\t\t\t\tonChange={handleColorChange}\r\n\t\t\t/>\r\n\t\t\t<Input\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={currentCategory.name}\r\n\t\t\t\tonChange={handleNameChange}\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={addCurrentCategory}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<CheckOutlined />\r\n\t\t\t</Button>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\nimport CategoryList from '../components/CategoryList';\r\nimport AddCategory from '../components/AddCategory';\r\nimport { Divider, Flex } from 'antd';\r\n\r\nconst Categories: React.FC = () => (\r\n\t<Flex\r\n\t\tvertical\r\n\t\talign='center'\r\n\t\tgap={16}\r\n\t>\r\n\t\t<AddCategory />\r\n\t\t<Divider />\r\n\t\t<CategoryList />\r\n\t</Flex>\r\n);\r\n\r\nexport default Categories;\r\n"],"names":["observer","_ref","remove","userOptions","optionsStore","isSmallScreen","userStore","_jsx","Tooltip","title","languages","delete","language","children","DeleteOutlined","onClick","style","scale","initialCategoryId","replaceCategory","categories","setLastDeletedCategoryId","categoryStore","list","listStore","currentCategory","setCurrentCategory","useState","itemsWithCurrentCategory","useMemo","Object","keys","reduce","acc","key","categoryId","deleteCategory","useCallback","updateCurrentCategory","category","prevCategory","JSON","stringify","handleNameChange","value","newCategory","name","handleColorChange","color","concat","toHex","ColorPickerJSX","ColorPicker","size","format","onChangeComplete","TitleJSX","Flex","justify","Typography","Text","strong","editable","onChange","Title","level","margin","tooltipTitle","length","TooltipJSX","InfoCircleOutlined","DeleteButtonJSX","DeleteButton","Card","inlineSize","actions","styles","padding","body","CategoryList","lastDeletedCategoryId","loading","categoriesToShowIds","slice","filter","vertical","gap","LargeSpin","values","Space","wrap","map","CategoryItem","Empty","image","PRESENTED_IMAGE_SIMPLE","description","memo","addCategory","constants","defaultCategory","event","target","clearCurrentCategory","addCurrentCategory","_jsxs","Input","type","Button","CheckOutlined","Categories","align","AddCategory","Divider"],"sourceRoot":""}