{"version":3,"file":"static/js/650.49fa00ca.chunk.js","mappings":"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","sources":["components/ItemsModal.tsx","components/CategoryItem.tsx","components/CategorySelect.tsx","components/ImageUpload.tsx","components/ItemModal.tsx","components/Items.tsx","components/ListItem.tsx","components/TypeSelect.tsx"],"sourcesContent":["import { Col, Flex, List, Modal, Statistic } from 'antd';\r\nimport Item from 'antd/es/list/Item';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { memo, useCallback } from 'react';\r\nimport { listStore } from 'utils/listStore';\r\nimport dayjs from 'dayjs';\r\nimport { userStore } from 'utils/userStore';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport constants from 'settings/constants';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport { MyIcon, MyTitle } from './Items';\r\nimport { DeleteOutlined, ExportOutlined } from '@ant-design/icons';\r\nimport ListItem from './ListItem';\r\n\r\ninterface Props {\r\n\topened: boolean;\r\n\tsetOpened: (arg0: boolean) => void;\r\n\titemIds: string[];\r\n}\r\n\r\nconst ItemsModal: React.FC<Props> = observer(\r\n\t({ opened, setOpened, itemIds }) => {\r\n\t\tconst { list, replaceItem } = listStore;\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\r\n\t\tconst { language } = userOptions;\r\n\r\n\t\tconst deleteCategoryFromItem = useCallback(\r\n\t\t\t(key: string) => {\r\n\t\t\t\treplaceItem(key, {\r\n\t\t\t\t\t...list[key],\r\n\t\t\t\t\tcategoryId: constants.emptyItem.categoryId,\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[list, replaceItem]\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\topen={opened}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetOpened(false);\r\n\t\t\t\t}}\r\n\t\t\t\tokButtonProps={{ style: { display: 'none' } }}\r\n\t\t\t\tcancelButtonProps={{ style: { display: 'none' } }}\r\n\t\t\t>\r\n\t\t\t\t<Scrollbars\r\n\t\t\t\t\tautoHide\r\n\t\t\t\t\tstyle={{ blockSize: '75vh' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<List>\r\n\t\t\t\t\t\t{itemIds.map((key: string) => (\r\n\t\t\t\t\t\t\t<Item key={key}>\r\n\t\t\t\t\t\t\t\t<Col span={5}>\r\n\t\t\t\t\t\t\t\t\t<Statistic\r\n\t\t\t\t\t\t\t\t\t\tvalue={dayjs(list[key].date).format('DD.MM.YY')}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tscale: isSmallScreen ? '.75' : '1',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col span={10}>\r\n\t\t\t\t\t\t\t\t\t<Flex\r\n\t\t\t\t\t\t\t\t\t\tjustify='center'\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\topacity: !list[key].title ? '.5' : '1',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{MyTitle(\r\n\t\t\t\t\t\t\t\t\t\t\tlist[key].title,\r\n\t\t\t\t\t\t\t\t\t\t\tlist[key].type,\r\n\t\t\t\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\t\t\t\t\t\tfalse\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col span={2}>\r\n\t\t\t\t\t\t\t\t\t{MyIcon(ExportOutlined, isSmallScreen, {\r\n\t\t\t\t\t\t\t\t\t\tlight: true,\r\n\t\t\t\t\t\t\t\t\t\ttitle: (\r\n\t\t\t\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\t\t\t\tinitialItem={{ id: key, overlaps: [] as number[][] }}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmode='grid'\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col span={2}>\r\n\t\t\t\t\t\t\t\t\t{MyIcon(\r\n\t\t\t\t\t\t\t\t\t\tDeleteOutlined,\r\n\t\t\t\t\t\t\t\t\t\tisSmallScreen,\r\n\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tonClick: () => deleteCategoryFromItem(key),\r\n\t\t\t\t\t\t\t\t\t\t\ttitle: languages.delete[language],\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</Scrollbars>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default memo(ItemsModal);\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\nimport { ListType, category } from '../settings/interfaces';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Card, ColorPicker, Flex, Tooltip } from 'antd';\r\nimport { Color } from 'antd/es/color-picker';\r\nimport { userStore } from 'utils/userStore';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport ItemsModal from './ItemsModal';\r\nimport { MyIcon, MyImage, MyTitle } from './Items';\r\nimport {\r\n\tDeleteOutlined,\r\n\tFallOutlined,\r\n\tInfoCircleOutlined,\r\n\tRiseOutlined,\r\n} from '@ant-design/icons';\r\nimport constants from 'settings/constants';\r\n\r\ninterface Props {\r\n\tinitialCategoryId: string;\r\n\tcategory?: category;\r\n\tdisabled?: boolean;\r\n}\r\n\r\nconst CategoryItem: React.FC<Props> = observer(\r\n\t({ initialCategoryId, category, disabled }) => {\r\n\t\tconst {\r\n\t\t\treplaceCategory,\r\n\t\t\tcategories,\r\n\t\t\tsetLastDeletedCategoryIds,\r\n\t\t\tlastDeletedCategoryIds,\r\n\t\t} = categoryStore;\r\n\t\tconst { list, setUserList } = listStore;\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\r\n\t\tconst { language } = userOptions;\r\n\r\n\t\tconst [currentCategory, setCurrentCategory] = useState<category>(\r\n\t\t\tcategory || categories[initialCategoryId]\r\n\t\t);\r\n\r\n\t\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\r\n\t\tconst itemsWithCurrentCategory = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tObject.keys(list).reduce(\r\n\t\t\t\t\t(acc: string[], key: string) =>\r\n\t\t\t\t\t\tlist[key].categoryId === initialCategoryId\r\n\t\t\t\t\t\t\t? [...acc, key]\r\n\t\t\t\t\t\t\t: [...acc],\r\n\t\t\t\t\t[]\r\n\t\t\t\t),\r\n\t\t\t[list, initialCategoryId]\r\n\t\t);\r\n\r\n\t\tconst deleteCategory = useCallback(() => {\r\n\t\t\tsetLastDeletedCategoryIds([...lastDeletedCategoryIds, initialCategoryId]);\r\n\t\t}, [setLastDeletedCategoryIds, initialCategoryId, lastDeletedCategoryIds]);\r\n\r\n\t\tconst updateCurrentCategory = useCallback(\r\n\t\t\t(category: category) => {\r\n\t\t\t\tsetCurrentCategory((prevCategory: category) => {\r\n\t\t\t\t\tif (JSON.stringify(prevCategory) !== JSON.stringify(category)) {\r\n\t\t\t\t\t\treplaceCategory(initialCategoryId, category);\r\n\t\t\t\t\t\treturn category;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn prevCategory;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentCategory, replaceCategory, initialCategoryId]\r\n\t\t);\r\n\r\n\t\tconst handleNameChange = useCallback(\r\n\t\t\t(value: string) => {\r\n\t\t\t\tsetCurrentCategory((prevCategory) => {\r\n\t\t\t\t\tconst newCategory: category = {\r\n\t\t\t\t\t\t...prevCategory,\r\n\t\t\t\t\t\tname: value,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tupdateCurrentCategory(newCategory);\r\n\t\t\t\t\treturn newCategory;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentCategory, updateCurrentCategory]\r\n\t\t);\r\n\r\n\t\tconst handleColorChange = useCallback(\r\n\t\t\t(value: Color) => {\r\n\t\t\t\tsetCurrentCategory((prevCategory) => {\r\n\t\t\t\t\tconst newCategory: category = {\r\n\t\t\t\t\t\t...prevCategory,\r\n\t\t\t\t\t\tcolor: `#${value.toHex()}`,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tupdateCurrentCategory(newCategory);\r\n\t\t\t\t\treturn newCategory;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentCategory, updateCurrentCategory]\r\n\t\t);\r\n\r\n\t\tconst fixList = useCallback(\r\n\t\t\t(categoryId: string, type: ListType) => {\r\n\t\t\t\tconst fixedList = list;\r\n\t\t\t\tObject.keys(list).forEach((key: string) => {\r\n\t\t\t\t\tif (list[key].categoryId === categoryId && list[key].type !== type) {\r\n\t\t\t\t\t\tfixedList[key].categoryId = '0';\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tsetUserList(fixedList);\r\n\t\t\t},\r\n\t\t\t[list, setUserList]\r\n\t\t);\r\n\r\n\t\tconst handleTypeChange = useCallback(\r\n\t\t\t(value: ListType) => {\r\n\t\t\t\tsetCurrentCategory((prevCategory) => {\r\n\t\t\t\t\tconst newCategory: category = {\r\n\t\t\t\t\t\t...prevCategory,\r\n\t\t\t\t\t\ttype: value,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tfixList(initialCategoryId, newCategory.type);\r\n\t\t\t\t\tupdateCurrentCategory(newCategory);\r\n\t\t\t\t\treturn newCategory;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentCategory, initialCategoryId, updateCurrentCategory, fixList]\r\n\t\t);\r\n\r\n\t\tconst ColorPickerJSX = disabled ? (\r\n\t\t\tMyImage(currentCategory.color, isSmallScreen, language)\r\n\t\t) : (\r\n\t\t\t<Tooltip title={languages.pickColor[language]}>\r\n\t\t\t\t<ColorPicker\r\n\t\t\t\t\tvalue={currentCategory.color}\r\n\t\t\t\t\tformat='hex'\r\n\t\t\t\t\tonChangeComplete={handleColorChange}\r\n\t\t\t\t>\r\n\t\t\t\t\t{MyImage(currentCategory.color, isSmallScreen, language)}\r\n\t\t\t\t</ColorPicker>\r\n\t\t\t</Tooltip>\r\n\t\t);\r\n\r\n\t\tconst tooltipTitle = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\t`${languages.itemsWithCurrentCategory[language]}: ${itemsWithCurrentCategory.length}`,\r\n\t\t\t[itemsWithCurrentCategory, language]\r\n\t\t);\r\n\r\n\t\tconst ActionsJSX = (\r\n\t\t\t<Flex\r\n\t\t\t\talign='center'\r\n\t\t\t\tjustify='space-evenly'\r\n\t\t\t>\r\n\t\t\t\t{MyIcon(InfoCircleOutlined, isSmallScreen, {\r\n\t\t\t\t\tonClick: () =>\r\n\t\t\t\t\t\titemsWithCurrentCategory.length && setIsModalOpened(true),\r\n\t\t\t\t\ttitle: tooltipTitle,\r\n\t\t\t\t})}\r\n\t\t\t\t{ColorPickerJSX}\r\n\t\t\t\t{MyIcon(DeleteOutlined, isSmallScreen, {\r\n\t\t\t\t\tonClick: deleteCategory,\r\n\t\t\t\t\ttitle: languages.delete[userOptions.language],\r\n\t\t\t\t})}\r\n\t\t\t</Flex>\r\n\t\t);\r\n\r\n\t\tconst TypeChangeIconJSX =\r\n\t\t\tcurrentCategory.type === 'income' ? (\r\n\t\t\t\t<RiseOutlined\r\n\t\t\t\t\tstyle={{ color: constants.colors.income }}\r\n\t\t\t\t\tonClick={() => handleTypeChange('expense')}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<FallOutlined\r\n\t\t\t\t\tstyle={{ color: constants.colors.expense }}\r\n\t\t\t\t\tonClick={() => handleTypeChange('income')}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Card\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tinlineSize: isSmallScreen ? '8em' : '12em',\r\n\t\t\t\t\t\tpointerEvents: disabled ? 'none' : 'auto',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\textra={TypeChangeIconJSX}\r\n\t\t\t\t\tsize='small'\r\n\t\t\t\t\ttitle={MyTitle(\r\n\t\t\t\t\t\tcurrentCategory.name,\r\n\t\t\t\t\t\tcurrentCategory.type,\r\n\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t\tonChange: handleNameChange,\r\n\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tactions={[ActionsJSX]}\r\n\t\t\t\t\tstyles={{\r\n\t\t\t\t\t\ttitle: {\r\n\t\t\t\t\t\t\tpadding: 10,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tbody: {\r\n\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t></Card>\r\n\t\t\t\t<ItemsModal\r\n\t\t\t\t\topened={isModalOpened}\r\n\t\t\t\t\tsetOpened={setIsModalOpened}\r\n\t\t\t\t\titemIds={itemsWithCurrentCategory}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default CategoryItem;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select } from 'antd';\r\nimport { EditFilled } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { ListType } from 'settings/interfaces';\r\n\r\ninterface Props {\r\n\tid: string;\r\n\ttype: ListType;\r\n\tonChange: (arg0: string) => void;\r\n}\r\n\r\nconst CategorySelect: React.FC<Props> = observer(({ id, type, onChange }) => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tstyle={{ minInlineSize: '7em' }}\r\n\t\t\tonChange={onChange}\r\n\t\t\tvalue={id}\r\n\t\t\tsuffixIcon={\r\n\t\t\t\t<EditFilled style={{ color: categories[id] && categories[id].color }} />\r\n\t\t\t}\r\n\t\t\toptions={Object.keys(categories)\r\n\t\t\t\t.filter(\r\n\t\t\t\t\t(key: string) =>\r\n\t\t\t\t\t\t!categories[key].deleted &&\r\n\t\t\t\t\t\t(categories[key].type === type || categories[key].type === 'all')\r\n\t\t\t\t)\r\n\t\t\t\t.map((key: string) => ({\r\n\t\t\t\t\tlabel: categories[key].name,\r\n\t\t\t\t\tvalue: key,\r\n\t\t\t\t}))}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default CategorySelect;\r\n","import { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Image, Upload } from 'antd';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useState } from 'react';\r\n\r\ninterface Props {\r\n\timage: string | undefined;\r\n\tonChange: (arg0: string) => void;\r\n}\r\n\r\nconst ImageUpload: React.FC<Props> = observer(({ onChange, image }) => {\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\r\n\tconst getBase64 = (img: any, callback: any) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t};\r\n\r\n\tconst handleChange = useCallback(\r\n\t\t(info: any) => {\r\n\t\t\tif (info.file.status === 'uploading') {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t}\r\n\t\t\tif (info.file.status === 'done') {\r\n\t\t\t\tgetBase64(info.file.originFileObj, (url: any) => {\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tonChange(url);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t[setLoading, onChange]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<ImgCrop\r\n\t\t\tcropShape='round'\r\n\t\t\trotationSlider\r\n\t\t>\r\n\t\t\t<Upload\r\n\t\t\t\taction={'1'}\r\n\t\t\t\taccept='image/*'\r\n\t\t\t\tlistType='picture-circle'\r\n\t\t\t\tshowUploadList={false}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tmaxCount={1}\r\n\t\t\t>\r\n\t\t\t\t{image ? (\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\tborderRadius: '50px',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : loading ? (\r\n\t\t\t\t\t<LoadingOutlined style={{ scale: '1.5' }} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<PlusOutlined style={{ scale: '1.5' }} />\r\n\t\t\t\t)}\r\n\t\t\t</Upload>\r\n\t\t</ImgCrop>\r\n\t);\r\n});\r\n\r\nexport default ImageUpload;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport calculatePrices from '../utils/calculatePrices';\r\nimport { ExpenseItem, ListType } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport languages from 'settings/languages';\r\nimport { Col, DatePicker, Form, Input, InputNumber, Modal, Row } from 'antd';\r\nimport constants from 'settings/constants';\r\nimport dayjs from 'dayjs';\r\nimport CategorySelect from './CategorySelect';\r\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { listStore } from 'utils/listStore';\r\nimport ImageUpload from './ImageUpload';\r\nimport { convertToJpeg, getSymbolAndPrice } from 'utils/utils';\r\nimport TypeSelect from './TypeSelect';\r\n\r\ninterface Props {\r\n\topened: boolean;\r\n\tinitialItemId?: string;\r\n\ttoggleOpened: () => void;\r\n\tsubmitItem: (arg0: ExpenseItem) => void;\r\n}\r\n\r\nconst ItemModal: React.FC<Props> = observer(\r\n\t({ opened, initialItemId, toggleOpened, submitItem }) => {\r\n\t\tconst { currencyRates, isSmallScreen } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\t\tconst { list } = listStore;\r\n\r\n\t\tconst { language, currency } = userOptions;\r\n\r\n\t\tconst initialItem = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tinitialItemId !== undefined ? list[initialItemId] : constants.emptyItem,\r\n\t\t\t[list, initialItemId]\r\n\t\t);\r\n\r\n\t\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(initialItem);\r\n\r\n\t\tconst handleTitleChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\ttitle: value,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleDateChange = useCallback(\r\n\t\t\t(value: dayjs.Dayjs) => {\r\n\t\t\t\tif (value)\r\n\t\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tdate: value.valueOf(),\r\n\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleCategoryChange = useCallback(\r\n\t\t\t(id: string) => {\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\tcategoryId: id,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handlePriceChange = useCallback(\r\n\t\t\t(value: number | null) => {\r\n\t\t\t\tsetCurrentItem((prevItem) => {\r\n\t\t\t\t\tconst updatedItem = {\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tprice: {\r\n\t\t\t\t\t\t\t...prevItem.price,\r\n\t\t\t\t\t\t\t[currency]: Number(value),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...updatedItem,\r\n\t\t\t\t\t\tprice: calculatePrices(updatedItem.price, currencyRates, currency),\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentItem, currency, currencyRates]\r\n\t\t);\r\n\r\n\t\tconst handleImageChange = useCallback(\r\n\t\t\t(image: string) => {\r\n\t\t\t\tconvertToJpeg(image as string, 0.5).then((image: string) => {\r\n\t\t\t\t\tsetCurrentItem((prevItem) => ({\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\timage: image,\r\n\t\t\t\t\t}));\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleTypeChange = useCallback(\r\n\t\t\t(type: ListType) => {\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\ttype: type,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tconst submitItemWithEnter = (event: KeyboardEvent) => {\r\n\t\t\t\tif (event.key === 'Enter' && opened) {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\twindow.addEventListener('keyup', submitItemWithEnter);\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t};\r\n\t\t}, [currentItem, submitItem, opened]);\r\n\r\n\t\tconst TitleJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={currentItem.title}\r\n\t\t\t\tonInput={handleTitleChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst PriceJSX = (\r\n\t\t\t<InputNumber\r\n\t\t\t\tstyle={{ inlineSize: '50%' }}\r\n\t\t\t\tformatter={(price?: number) => `${getSymbolAndPrice(currency)}${price}`}\r\n\t\t\t\trequired\r\n\t\t\t\tmin={1}\r\n\t\t\t\tstep={1}\r\n\t\t\t\tvalue={Math.round(currentItem.price[currency])}\r\n\t\t\t\tonChange={handlePriceChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst DateJSX = (\r\n\t\t\t<DatePicker\r\n\t\t\t\trequired\r\n\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\tvalue={dayjs(currentItem.date)}\r\n\t\t\t\tminDate={constants.startDate}\r\n\t\t\t\tmaxDate={dayjs()}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CategoryJSX = (\r\n\t\t\t<CategorySelect\r\n\t\t\t\tid={currentItem.categoryId}\r\n\t\t\t\ttype={currentItem.type}\r\n\t\t\t\tonChange={handleCategoryChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst ImageJSX = (\r\n\t\t\t<ImageUpload\r\n\t\t\t\timage={currentItem.image}\r\n\t\t\t\tonChange={handleImageChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\topen={opened}\r\n\t\t\t\tokButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tcancelButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tonOk={() => {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t}}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetCurrentItem(initialItem);\r\n\t\t\t\t\ttoggleOpened();\r\n\t\t\t\t}}\r\n\t\t\t\tokText={<CheckOutlined />}\r\n\t\t\t\tcancelText={<CloseOutlined />}\r\n\t\t\t>\r\n\t\t\t\t<Form\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tlayout='vertical'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Form.Item label={languages.type[language]}>\r\n\t\t\t\t\t\t<TypeSelect\r\n\t\t\t\t\t\t\ttype={currentItem.type}\r\n\t\t\t\t\t\t\tonChange={handleTypeChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.title[language]}>{TitleJSX}</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.price[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={16}>{PriceJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.dateAndCat[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={10}>{DateJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={13}>{CategoryJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.image[language]}>{ImageJSX}</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default ItemModal;\r\n","import { FrownOutlined } from '@ant-design/icons';\r\nimport {\r\n\tAvatar,\r\n\tButton,\r\n\tCheckbox,\r\n\tFlex,\r\n\tImage,\r\n\tSelect,\r\n\tStatistic,\r\n\tTag,\r\n\tTooltip,\r\n\tTypography,\r\n} from 'antd';\r\nimport {\r\n\tChat,\r\n\tListType,\r\n\tcategory,\r\n\tcurrencies,\r\n\tlanguage,\r\n} from 'settings/interfaces';\r\nimport languages from 'settings/languages';\r\nimport dayjs from 'dayjs';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport React, { ComponentType, RefAttributes } from 'react';\r\nimport { CheckboxChangeEvent } from 'antd/es/checkbox';\r\nimport Search from 'antd/es/input/Search';\r\nimport uniqid from 'uniqid';\r\nimport { AntdIconProps } from '@ant-design/icons/lib/components/AntdIcon';\r\nimport { TooltipPlacement, TooltipProps } from 'antd/es/tooltip';\r\n\r\nconst getTitleComponents = (\r\n\ttitle: string,\r\n\ttype: ListType | null,\r\n\tisInOverlaps: boolean,\r\n\tisSmallScreen: boolean,\r\n\teditable: any,\r\n\tindex?: number\r\n): React.ReactNode => {\r\n\treturn title === ' ' ? (\r\n\t\t<>&nbsp;</>\r\n\t) : (\r\n\t\t<Typography.Text\r\n\t\t\ttype={type ? (type === 'expense' ? 'danger' : 'success') : undefined}\r\n\t\t\tstyle={{ fontSize: isSmallScreen ? '1em' : '1.25em' }}\r\n\t\t\tkey={index || 0}\r\n\t\t\teditable={editable}\r\n\t\t\tellipsis\r\n\t\t\tstrong={isInOverlaps}\r\n\t\t>\r\n\t\t\t{title}\r\n\t\t</Typography.Text>\r\n\t);\r\n};\r\n\r\nexport const MyTitle = (\r\n\ttitle: string | undefined,\r\n\ttype: ListType | null,\r\n\tisSmallScreen: boolean,\r\n\tlanguage?: language,\r\n\teditable?: any,\r\n\toverlaps?: number[][]\r\n) => {\r\n\tconst markedTitles: React.ReactNode[] | undefined = overlaps\r\n\t\t? title?.split('').map((char, index) => {\r\n\t\t\t\tconst isInOverlaps = overlaps.some(\r\n\t\t\t\t\t([start, end]) => index >= start && index <= end\r\n\t\t\t\t);\r\n\t\t\t\treturn getTitleComponents(\r\n\t\t\t\t\tchar,\r\n\t\t\t\t\ttype,\r\n\t\t\t\t\tisInOverlaps,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\teditable,\r\n\t\t\t\t\tindex\r\n\t\t\t\t);\r\n\t\t  })\r\n\t\t: [\r\n\t\t\t\tgetTitleComponents(\r\n\t\t\t\t\ttitle || (language && languages.noTitle[language]),\r\n\t\t\t\t\ttype,\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\teditable\r\n\t\t\t\t),\r\n\t\t  ];\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tkey={uniqid()}\r\n\t\t\tstyle={{\r\n\t\t\t\tinlineSize: 'min-content',\r\n\t\t\t\topacity: !title ? '.5' : '1',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{markedTitles}\r\n\t\t</Flex>\r\n\t);\r\n};\r\n\r\nexport const MyImage = (\r\n\timage: string | undefined,\r\n\tisSmallScreen: boolean,\r\n\tlanguage?: language,\r\n\ttoggleOpened?: () => void\r\n) =>\r\n\timage ? (\r\n\t\t<Tooltip\r\n\t\t\tcolor='#0005'\r\n\t\t\tplacement='right'\r\n\t\t\ttitle={\r\n\t\t\t\t!image.startsWith('#') && (\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborderRadius: '50%',\r\n\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Avatar\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\tbackground: image.startsWith('#') ? image : 'unset',\r\n\t\t\t\t}}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\ticon={\r\n\t\t\t\t\t<Flex\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{!image.startsWith('#') && (\r\n\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t) : (\r\n\t\t<Tooltip title={language ? languages.noImage[language] : ''}>\r\n\t\t\t<Avatar\r\n\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\tonClick={toggleOpened}\r\n\t\t\t\ticon={<FrownOutlined />}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n\r\nexport const MyDate = (\r\n\tdate: number,\r\n\tisSmallScreen: boolean,\r\n\textra?: number\r\n) => (\r\n\t<Flex align='center'>\r\n\t\t<Statistic\r\n\t\t\tvalue={dayjs(date).format('DD.MM.YY')}\r\n\t\t\tstyle={{\r\n\t\t\t\tscale: isSmallScreen ? '.67' : '.75',\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t{extra && (\r\n\t\t\t<>\r\n\t\t\t\t<Typography.Text strong>-</Typography.Text>\r\n\t\t\t\t<Statistic\r\n\t\t\t\t\tvalue={dayjs(extra).format('DD.MM.YY')}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tscale: isSmallScreen ? '.67' : '.75',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t)}\r\n\t</Flex>\r\n);\r\n\r\nexport const MyCategory = (category: category) => (\r\n\t<Flex\r\n\t\tvertical\r\n\t\talign='stretch'\r\n\t>\r\n\t\t{category && (\r\n\t\t\t<Tag color={category.color}>\r\n\t\t\t\t<span\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmargin: 'auto',\r\n\t\t\t\t\t\tcolor: category.color,\r\n\t\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{category.name}\r\n\t\t\t\t</span>\r\n\t\t\t</Tag>\r\n\t\t)}\r\n\t</Flex>\r\n);\r\n\r\nexport const MyPrice = (\r\n\tprice: currencies,\r\n\ttype: ListType,\r\n\tisSmallScreen: boolean,\r\n\tcurrency: string,\r\n\textra?: currencies\r\n) => (\r\n\t<Flex justify='center'>\r\n\t\t<Typography.Text\r\n\t\t\tstrong\r\n\t\t\ttype={type === 'expense' ? 'danger' : 'success'}\r\n\t\t\tstyle={{ fontSize: isSmallScreen ? '1.25em' : '1.5em' }}\r\n\t\t>\r\n\t\t\t{getSymbolAndPrice(currency)}\r\n\t\t\t{Math.round(price[currency])}\r\n\t\t</Typography.Text>\r\n\t\t{extra && (\r\n\t\t\t<>\r\n\t\t\t\t<Typography.Text\r\n\t\t\t\t\tstrong\r\n\t\t\t\t\ttype={type === 'expense' ? 'danger' : 'success'}\r\n\t\t\t\t\tstyle={{ fontSize: isSmallScreen ? '1.25em' : '1.5em' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t/\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t\t<Typography.Text\r\n\t\t\t\t\tstrong\r\n\t\t\t\t\ttype={type === 'expense' ? 'danger' : 'success'}\r\n\t\t\t\t\tstyle={{ fontSize: isSmallScreen ? '1.25em' : '1.5em' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{getSymbolAndPrice(currency)}\r\n\t\t\t\t\t{Math.round(extra[currency])}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t</>\r\n\t\t)}\r\n\t</Flex>\r\n);\r\n\r\nexport const MyIcon = (\r\n\tIcon: ComponentType<\r\n\t\tOmit<AntdIconProps, 'ref'> & RefAttributes<HTMLSpanElement>\r\n\t>,\r\n\tisSmallScreen: boolean,\r\n\textra: {\r\n\t\tonClick?: () => void;\r\n\t\tsmall?: boolean;\r\n\t\ttitle?: string | React.JSX.Element;\r\n\t\tlight?: boolean;\r\n\t\tplacement?: TooltipPlacement;\r\n\t\ttrigger?: TooltipProps['trigger'];\r\n\t\tavatar?: boolean;\r\n\t}\r\n) => {\r\n\tconst { onClick, small, title, light, placement, trigger, avatar } = extra;\r\n\treturn (\r\n\t\t<Tooltip\r\n\t\t\ttrigger={trigger}\r\n\t\t\tplacement={placement}\r\n\t\t\ttitle={title}\r\n\t\t\tcolor={light ? '#0000' : undefined}\r\n\t\t\toverlayInnerStyle={{ padding: light ? '0' : '', boxShadow: 'none' }}\r\n\t\t>\r\n\t\t\t{avatar ? (\r\n\t\t\t\t<Avatar\r\n\t\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\tonClick={onClick}\r\n\t\t\t\t\ticon={<Icon />}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<Icon\r\n\t\t\t\t\tonClick={onClick}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tscale: small\r\n\t\t\t\t\t\t\t? isSmallScreen\r\n\t\t\t\t\t\t\t\t? '.75'\r\n\t\t\t\t\t\t\t\t: '1'\r\n\t\t\t\t\t\t\t: isSmallScreen\r\n\t\t\t\t\t\t\t? '1'\r\n\t\t\t\t\t\t\t: '1.25',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Tooltip>\r\n\t);\r\n};\r\n\r\nexport const MyCheckbox = (\r\n\tselected: boolean = false,\r\n\tlanguage: language,\r\n\tisSmallScreen: boolean,\r\n\thandleSelection: (event: CheckboxChangeEvent) => void = () => {},\r\n\tdeleteAll?: () => void,\r\n\trestoreAll?: () => void\r\n) => (\r\n\t<Tooltip\r\n\t\tcolor='#0000'\r\n\t\ttitle={\r\n\t\t\tselected ? (\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\tgap={isSmallScreen ? 4 : 8}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={deleteAll}\r\n\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{languages.deleteSelected[language]}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{restoreAll && (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={restoreAll}\r\n\t\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{languages.restoreSelected[language]}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Flex>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)\r\n\t\t}\r\n\t>\r\n\t\t<Checkbox\r\n\t\t\tonChange={handleSelection}\r\n\t\t\tchecked={selected}\r\n\t\t/>\r\n\t</Tooltip>\r\n);\r\n\r\nexport const MySearch = (\r\n\tonChange: (arg0: React.ChangeEvent<HTMLInputElement>) => void,\r\n\tvalue: string,\r\n\tloading: boolean,\r\n\tisSmallScreen: boolean\r\n) => (\r\n\t<Search\r\n\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\tallowClear\r\n\t\tonChange={onChange}\r\n\t\tvalue={value}\r\n\t\tloading={loading}\r\n\t/>\r\n);\r\n\r\nexport const tooltipTitle = (\r\n\tcreatedAt: number | undefined,\r\n\tupdatedAt: number | undefined,\r\n\tlanguage: language\r\n) => {\r\n\tif (!updatedAt) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{`${languages.createdAt[language]} ${dayjs(createdAt).format(\r\n\t\t\t\t\t'HH:mm:ss DD.MM.YY'\r\n\t\t\t\t)}`}\r\n\t\t\t</>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{`${languages.createdAt[language]} ${dayjs(createdAt).format(\r\n\t\t\t\t\t'HH:mm:ss DD.MM.YY'\r\n\t\t\t\t)}`}\r\n\t\t\t\t<br></br>\r\n\t\t\t\t{`${languages.updatedAt[language]} ${dayjs(updatedAt).format(\r\n\t\t\t\t\t'HH:mm:ss DD.MM.YY'\r\n\t\t\t\t)}`}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport const addFriendToChatSelect = (\r\n\tisSmallScreen: boolean,\r\n\thandleChange: (\r\n\t\tvalue: null | string[],\r\n\t\toption:\r\n\t\t\t| {\r\n\t\t\t\t\tvalue: string;\r\n\t\t\t\t\tlabel: any;\r\n\t\t\t  }\r\n\t\t\t| {\r\n\t\t\t\t\tvalue: string;\r\n\t\t\t\t\tlabel: any;\r\n\t\t\t  }[]\r\n\t) => void,\r\n\tfriends: { [key: string]: true },\r\n\tvalue: string[] | null,\r\n\tchatInfo?: Chat['info']\r\n) => {\r\n\tconst friendsToShow = chatInfo\r\n\t\t? Object.keys(friends).filter(\r\n\t\t\t\t(key: string) =>\r\n\t\t\t\t\tchatInfo?.members && !Object.keys(chatInfo?.members).includes(key)\r\n\t\t  )\r\n\t\t: Object.keys(friends);\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tmode='multiple'\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tlabelInValue\r\n\t\t\tonChange={handleChange}\r\n\t\t\tshowSearch\r\n\t\t\tvalue={value}\r\n\t\t\tstyle={{ inlineSize: isSmallScreen ? '10em' : '15em' }}\r\n\t\t\toptions={friendsToShow.map((key: string) => ({\r\n\t\t\t\tvalue: key,\r\n\t\t\t\t// label: usersInfo[key]?.nickname,\r\n\t\t\t\tlabel: key,\r\n\t\t\t}))}\r\n\t\t/>\r\n\t);\r\n};\r\n","import React, { useState, useCallback } from 'react';\r\nimport { ExpenseItem, ItemWithSearch, Mode } from '../settings/interfaces';\r\nimport Item from 'antd/es/list/Item';\r\nimport { Card, Col, Flex } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport ItemModal from './ItemModal';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n\tMyCategory,\r\n\tMyCheckbox,\r\n\tMyDate,\r\n\tMyIcon,\r\n\tMyImage,\r\n\tMyPrice,\r\n\tMyTitle,\r\n\ttooltipTitle,\r\n} from './Items';\r\nimport { CheckboxChangeEvent } from 'antd/es/checkbox';\r\nimport {\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tInfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\ninterface Props {\r\n\tmode: Mode;\r\n\tinitialItem: ItemWithSearch;\r\n\tdeleteAll?: () => void;\r\n\trestoreAll?: () => void;\r\n\thandleSelection?: (event: CheckboxChangeEvent) => void;\r\n\tselected?: boolean;\r\n\tdisabled?: boolean;\r\n\ttransparent?: boolean;\r\n}\r\n\r\nconst ListItem: React.FC<Props> = observer(\r\n\t({\r\n\t\tmode,\r\n\t\tinitialItem,\r\n\t\tdeleteAll,\r\n\t\thandleSelection,\r\n\t\tselected,\r\n\t\tdisabled,\r\n\t\ttransparent,\r\n\t}) => {\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { replaceItem, setLastDeletedItemIds, lastDeletedItemIds, list } =\r\n\t\t\tlistStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\t\tconst { categories } = categoryStore;\r\n\r\n\t\tconst { currency, language } = userOptions;\r\n\r\n\t\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\t\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(\r\n\t\t\tlist[initialItem.id]\r\n\t\t);\r\n\r\n\t\tconst {\r\n\t\t\ttype,\r\n\t\t\tdate,\r\n\t\t\ttitle,\r\n\t\t\tcategoryId,\r\n\t\t\tprice,\r\n\t\t\timage,\r\n\t\t\tcreatedAt,\r\n\t\t\tupdatedAt,\r\n\t\t} = currentItem;\r\n\r\n\t\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t\t}, [setIsModalOpened]);\r\n\r\n\t\tconst updateCurrentItem = useCallback(\r\n\t\t\t(item: ExpenseItem) => {\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => {\r\n\t\t\t\t\tif (JSON.stringify(prevItem) !== JSON.stringify(item)) {\r\n\t\t\t\t\t\tconst newItem: ExpenseItem = {\r\n\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\tupdatedAt: dayjs().valueOf(),\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\treplaceItem(initialItem.id, newItem);\r\n\t\t\t\t\t\treturn newItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn prevItem;\r\n\t\t\t\t});\r\n\t\t\t\ttoggleIsModalOpened();\r\n\t\t\t},\r\n\t\t\t[setCurrentItem, replaceItem, toggleIsModalOpened, initialItem.id]\r\n\t\t);\r\n\r\n\t\tconst deleteItem = useCallback(() => {\r\n\t\t\tsetLastDeletedItemIds([...lastDeletedItemIds, initialItem.id]);\r\n\t\t}, [setLastDeletedItemIds, initialItem.id, lastDeletedItemIds]);\r\n\r\n\t\tconst ActionsJSX = (\r\n\t\t\t<Flex justify='space-evenly'>\r\n\t\t\t\t{MyCheckbox(\r\n\t\t\t\t\tselected,\r\n\t\t\t\t\tlanguage,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\thandleSelection,\r\n\t\t\t\t\tdeleteAll\r\n\t\t\t\t)}\r\n\t\t\t\t{MyIcon(DeleteOutlined, isSmallScreen, {\r\n\t\t\t\t\tonClick: deleteItem,\r\n\t\t\t\t\ttitle: languages.delete[language],\r\n\t\t\t\t})}\r\n\t\t\t\t{MyPrice(price, type, isSmallScreen, currency)}\r\n\t\t\t\t{MyIcon(EditOutlined, isSmallScreen, {\r\n\t\t\t\t\tonClick: toggleIsModalOpened,\r\n\t\t\t\t\ttitle: languages.edit[language],\r\n\t\t\t\t})}\r\n\t\t\t\t{MyIcon(InfoCircleOutlined, isSmallScreen, {\r\n\t\t\t\t\ttitle: tooltipTitle(createdAt, updatedAt, language),\r\n\t\t\t\t})}\r\n\t\t\t</Flex>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<ItemModal\r\n\t\t\t\t\topened={isModalOpened}\r\n\t\t\t\t\tinitialItemId={initialItem.id}\r\n\t\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\t\tsubmitItem={updateCurrentItem}\r\n\t\t\t\t/>\r\n\t\t\t\t{mode === 'list' ? (\r\n\t\t\t\t\t<Item\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tpointerEvents: disabled ? 'none' : 'auto',\r\n\t\t\t\t\t\t\topacity: transparent ? '.5' : '1',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyCheckbox(\r\n\t\t\t\t\t\t\t\tselected,\r\n\t\t\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\thandleSelection,\r\n\t\t\t\t\t\t\t\tdeleteAll\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyImage(image, isSmallScreen, language, toggleIsModalOpened)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={3}>{MyDate(date, isSmallScreen)}</Col>\r\n\t\t\t\t\t\t<Col span={7}>\r\n\t\t\t\t\t\t\t{MyTitle(\r\n\t\t\t\t\t\t\t\ttitle,\r\n\t\t\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\t\tinitialItem.overlaps\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={4}>{MyCategory(categories[categoryId])}</Col>\r\n\t\t\t\t\t\t<Col span={4}>{MyPrice(price, type, isSmallScreen, currency)}</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIcon(EditOutlined, isSmallScreen, {\r\n\t\t\t\t\t\t\t\tonClick: toggleIsModalOpened,\r\n\t\t\t\t\t\t\t\ttitle: languages.edit[language],\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIcon(DeleteOutlined, isSmallScreen, {\r\n\t\t\t\t\t\t\t\tonClick: deleteItem,\r\n\t\t\t\t\t\t\t\ttitle: languages.delete[language],\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIcon(InfoCircleOutlined, isSmallScreen, {\r\n\t\t\t\t\t\t\t\ttitle: tooltipTitle(createdAt, updatedAt, language),\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Item>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tstyles={{ title: { fontWeight: '400' } }}\r\n\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\tbordered\r\n\t\t\t\t\t\ttitle={MyTitle(\r\n\t\t\t\t\t\t\ttitle,\r\n\t\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\tinitialItem.overlaps\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\tactions={[ActionsJSX]}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tinlineSize: isSmallScreen ? '10em' : '13em',\r\n\t\t\t\t\t\t\tpointerEvents: disabled ? 'none' : 'auto',\r\n\t\t\t\t\t\t\topacity: transparent ? '.5' : '1',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Flex justify='center'>\r\n\t\t\t\t\t\t\t<Flex\r\n\t\t\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\t\t\talign='stretch'\r\n\t\t\t\t\t\t\t\tgap={4}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Flex align='center'>\r\n\t\t\t\t\t\t\t\t\t{MyImage(image, isSmallScreen, language, toggleIsModalOpened)}\r\n\t\t\t\t\t\t\t\t\t{MyDate(date, isSmallScreen)}\r\n\t\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t\t\t{MyCategory(categories[categoryId])}\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default ListItem;\r\n","import { FallOutlined, MinusOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport { Segmented } from 'antd';\r\nimport { SegmentedOptions } from 'antd/es/segmented';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useMemo } from 'react';\r\nimport { ListType } from 'settings/interfaces';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\ttype: ListType;\r\n\tonChange: (arg0: ListType) => void;\r\n\textra?: boolean;\r\n}\r\n\r\nconst TypeSelect: React.FC<Props> = observer(({ type, onChange, extra }) => {\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\tconst options: SegmentedOptions<ListType> = useMemo(() => {\r\n\t\tconst options = [\r\n\t\t\t{\r\n\t\t\t\tlabel: <FallOutlined />,\r\n\t\t\t\tvalue: 'expense' as ListType,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: <RiseOutlined />,\r\n\t\t\t\tvalue: 'income' as ListType,\r\n\t\t\t},\r\n\t\t];\r\n\r\n\t\textra &&\r\n\t\t\toptions.splice(1, 0, {\r\n\t\t\t\tlabel: <MinusOutlined />,\r\n\t\t\t\tvalue: 'all' as ListType,\r\n\t\t\t});\r\n\r\n\t\treturn options;\r\n\t}, [extra]);\r\n\r\n\treturn (\r\n\t\t<Segmented\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tvalue={type}\r\n\t\t\tonChange={onChange}\r\n\t\t\toptions={options}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default TypeSelect;\r\n"],"names":["ItemsModal","observer","_ref","opened","setOpened","itemIds","list","replaceItem","listStore","isSmallScreen","userStore","userOptions","optionsStore","language","deleteCategoryFromItem","useCallback","key","categoryId","constants","emptyItem","_jsx","Modal","open","onCancel","okButtonProps","style","display","cancelButtonProps","children","Scrollbars","autoHide","blockSize","List","map","_jsxs","Item","Col","span","Statistic","value","dayjs","date","format","scale","Flex","justify","opacity","title","MyTitle","type","MyIcon","ExportOutlined","light","ListItem","initialItem","id","overlaps","mode","DeleteOutlined","onClick","languages","delete","memo","initialCategoryId","category","disabled","replaceCategory","categories","setLastDeletedCategoryIds","lastDeletedCategoryIds","categoryStore","setUserList","currentCategory","setCurrentCategory","useState","isModalOpened","setIsModalOpened","itemsWithCurrentCategory","useMemo","Object","keys","reduce","acc","deleteCategory","updateCurrentCategory","prevCategory","JSON","stringify","handleNameChange","newCategory","name","handleColorChange","color","concat","toHex","fixList","fixedList","forEach","handleTypeChange","ColorPickerJSX","MyImage","Tooltip","pickColor","ColorPicker","onChangeComplete","tooltipTitle","length","ActionsJSX","align","InfoCircleOutlined","TypeChangeIconJSX","RiseOutlined","colors","income","FallOutlined","expense","_Fragment","Card","inlineSize","pointerEvents","extra","size","onChange","actions","styles","padding","body","Select","minInlineSize","suffixIcon","EditFilled","options","filter","deleted","label","image","loading","setLoading","handleChange","info","file","status","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","originFileObj","url","ImgCrop","cropShape","rotationSlider","Upload","action","accept","listType","showUploadList","maxCount","Image","preview","src","width","borderRadius","LoadingOutlined","PlusOutlined","initialItemId","toggleOpened","submitItem","currencyRates","currency","undefined","currentItem","setCurrentItem","handleTitleChange","event","target","prevItem","handleDateChange","valueOf","handleCategoryChange","handlePriceChange","updatedItem","price","Number","calculatePrices","handleImageChange","convertToJpeg","then","useEffect","submitItemWithEnter","window","removeEventListener","TitleJSX","Input","required","onInput","PriceJSX","InputNumber","formatter","getSymbolAndPrice","min","step","Math","round","DateJSX","DatePicker","minDate","startDate","maxDate","CategoryJSX","CategorySelect","ImageJSX","ImageUpload","onOk","okText","CheckOutlined","cancelText","CloseOutlined","Form","layout","TypeSelect","Row","dateAndCat","getTitleComponents","isInOverlaps","editable","index","Typography","Text","fontSize","ellipsis","strong","markedTitles","split","char","some","start","end","noTitle","uniqid","placement","startsWith","objectFit","Avatar","cursor","background","icon","noImage","FrownOutlined","MyDate","MyCategory","vertical","Tag","margin","MyPrice","Icon","small","trigger","avatar","overlayInnerStyle","boxShadow","MyCheckbox","selected","arguments","handleSelection","deleteAll","restoreAll","gap","Button","deleteSelected","restoreSelected","Checkbox","checked","MySearch","Search","allowClear","createdAt","updatedAt","addFriendToChatSelect","friends","chatInfo","friendsToShow","members","includes","labelInValue","showSearch","transparent","setLastDeletedItemIds","lastDeletedItemIds","toggleIsModalOpened","prevValue","updateCurrentItem","item","newItem","deleteItem","EditOutlined","edit","ItemModal","fontWeight","bordered","splice","MinusOutlined","Segmented"],"sourceRoot":""}