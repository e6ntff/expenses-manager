{"version":3,"file":"static/js/781.3f9824ec.chunk.js","mappings":"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","sources":["components/SliderDiagram.tsx","components/YearSlider.tsx","utils/calculatePrices.ts","components/CategorySelect.tsx","components/ItemModal.tsx","components/ListItem.tsx","hooks/useDebounce.ts","components/ItemList.tsx","components/NewItemButton.tsx","components/CategoriesSelect.tsx","components/SortSelect.tsx","components/ModeSelect.tsx","components/Selectors.tsx","pages/Expenses.tsx","utils/transformData.ts","utils/utils.ts"],"sourcesContent":["import { observer } from 'mobx-react-lite';\r\nimport React, { memo, useMemo } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { getValuesByMonth } from 'utils/transformData';\r\n\r\nconst SliderDiagram: React.FC = observer(() => {\r\n\tconst { list } = listStore;\r\n\tconst { defaultRange } = optionsStore;\r\n\r\n\tconst valuesByMonth: number[] | { [key: string]: number } = useMemo(\r\n\t\t() => getValuesByMonth(list, defaultRange),\r\n\t\t[list, defaultRange]\r\n\t);\r\n\r\n\tconst data = {\r\n\t\tlabels: new Array(valuesByMonth.length).fill(''),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tdata: valuesByMonth,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tx: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\ty: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\telements: {\r\n\t\t\tpoint: {\r\n\t\t\t\tradius: 0,\r\n\t\t\t},\r\n\t\t\tline: {\r\n\t\t\t\tcubicInterpolationMode: 'monotone' as 'monotone',\r\n\t\t\t\tborderColor: '#7775',\r\n\t\t\t},\r\n\t\t},\r\n\t\taspectRatio: 25,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Line\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\tdata={data}\r\n\t\t\toptions={options}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default memo(SliderDiagram);\r\n","import React, { memo, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Slider } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport { ExpenseItem } from 'settings/interfaces';\r\nimport dayjs from 'dayjs';\r\nimport minMax from 'dayjs/plugin/minMax';\r\nimport { ZoomInOutlined, ZoomOutOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport {\r\n\tChart,\r\n\tTooltip,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tLineElement,\r\n\tLineController,\r\n\tPointElement,\r\n} from 'chart.js';\r\nimport SliderDiagram from './SliderDiagram';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nChart.register(\r\n\tTooltip,\r\n\tLineElement,\r\n\tLineController,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tPointElement\r\n);\r\n\r\ndayjs.extend(minMax);\r\n\r\ninterface Props {\r\n\trange: number[];\r\n\tsetRange: (arg0: number[]) => void;\r\n\tisAccurate: boolean;\r\n\tsetIsAccurate: (arg0: boolean) => void;\r\n}\r\n\r\nconst YearSlider: React.FC<Props> = observer(\r\n\t({ range, setRange, isAccurate, setIsAccurate }) => {\r\n\t\tconst { list } = listStore;\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { defaultRange, setDefaultRange } = optionsStore;\r\n\r\n\t\tconst [value, setValue] = useState(defaultRange);\r\n\r\n\t\tconst sliderRange: [number, number] = useMemo(() => {\r\n\t\t\tconst dates = Object.values(list).map((item: ExpenseItem) => item.date);\r\n\t\t\treturn [Math.min(...dates), Math.max(...dates)];\r\n\t\t}, [list]);\r\n\r\n\t\tconst marks: { [key: number]: string } = useMemo(() => {\r\n\t\t\tconst start = dayjs(sliderRange[0]).startOf('day');\r\n\t\t\tconst end = dayjs(sliderRange[1]).endOf('day');\r\n\t\t\tconst marks: { [key: number]: string } = {};\r\n\t\t\tlet currentDate = start;\r\n\t\t\tif (isAccurate) {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'day')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.date() === 1\r\n\t\t\t\t\t\t\t? currentDate.month() === 0\r\n\t\t\t\t\t\t\t\t? currentDate.format('YYYY')\r\n\t\t\t\t\t\t\t\t: currentDate.format('M')\r\n\t\t\t\t\t\t\t: ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'day').startOf('day');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'month')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.month() === 0 ? currentDate.format('YYYY') : ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'month').startOf('month');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn marks;\r\n\t\t}, [sliderRange, isAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetDefaultRange(sliderRange);\r\n\t\t}, [sliderRange, setDefaultRange]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetRange(defaultRange);\r\n\t\t}, [defaultRange, setRange]);\r\n\r\n\t\tconst handleRangeChanging = useCallback(\r\n\t\t\t(values: number[]) => {\r\n\t\t\t\tsetRange(values);\r\n\t\t\t},\r\n\t\t\t[setRange]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetValue(range);\r\n\t\t}, [range]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tisSmallScreen && setIsAccurate(false);\r\n\t\t}, [isSmallScreen, setIsAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\t!isAccurate &&\r\n\t\t\t\tsetRange([\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.max([\r\n\t\t\t\t\t\t\tdayjs(range[0]).startOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[0]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.min([\r\n\t\t\t\t\t\t\tdayjs(range[1]).endOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[1]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t]);\r\n\t\t\t// eslint-disable-next-line\r\n\t\t}, [isAccurate]);\r\n\r\n\t\treturn dayjs(defaultRange[1]).diff(dayjs(defaultRange[0]), 'hours') >=\r\n\t\t\t48 ? (\r\n\t\t\t<Flex\r\n\t\t\t\tgap={16}\r\n\t\t\t\talign='center'\r\n\t\t\t>\r\n\t\t\t\t<Segmented\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tdefaultValue={isAccurate}\r\n\t\t\t\t\tvalue={isAccurate}\r\n\t\t\t\t\tonChange={setIsAccurate}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{ label: <ZoomOutOutlined />, value: false },\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: <ZoomInOutlined />,\r\n\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t\tdisabled: isSmallScreen,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\talign='stretch'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<SliderDiagram />\r\n\t\t\t\t\t<Slider\r\n\t\t\t\t\t\trange\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tmarks={marks}\r\n\t\t\t\t\t\tstep={null}\r\n\t\t\t\t\t\tdots={true}\r\n\t\t\t\t\t\ttooltip={{\r\n\t\t\t\t\t\t\tformatter: (value: number | undefined) => (\r\n\t\t\t\t\t\t\t\t<>{dayjs(value).format(isAccurate ? 'DD.MM.YY' : 'MM.YY')}</>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tmin={sliderRange[0]}\r\n\t\t\t\t\t\tmax={sliderRange[1]}\r\n\t\t\t\t\t\tdefaultValue={defaultRange}\r\n\t\t\t\t\t\tonChange={setValue}\r\n\t\t\t\t\t\tonChangeComplete={handleRangeChanging}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Flex>\r\n\t\t) : (\r\n\t\t\t<></>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default memo(YearSlider);\r\n","import constants from '../settings/constants';\r\nimport { currencies, rates } from '../settings/interfaces';\r\n\r\nconst calculatePrices = (\r\n\tprices: currencies,\r\n\trates: rates,\r\n\tcurrency: string = constants.baseCurrency\r\n) => {\r\n\tswitch (currency) {\r\n\t\tcase 'USD':\r\n\t\t\tprices['EUR'] = prices['USD'] * rates['EUR'];\r\n\t\t\tprices['RUB'] = prices['USD'] * rates['RUB'];\r\n\t\t\tbreak;\r\n\t\tcase 'EUR':\r\n\t\t\tprices['USD'] = prices['EUR'] / rates['EUR'];\r\n\t\t\tprices['RUB'] = (prices['EUR'] * rates['RUB']) / rates['EUR'];\r\n\t\t\tbreak;\r\n\t\tcase 'RUB':\r\n\t\t\tprices['EUR'] = (prices['RUB'] / rates['RUB']) * rates['EUR'];\r\n\t\t\tprices['USD'] = prices['RUB'] / rates['RUB'];\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t}\r\n\r\n\treturn prices;\r\n};\r\n\r\nexport default calculatePrices;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select } from 'antd';\r\nimport { EditFilled } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tid: string;\r\n\tonChange: (arg0: string) => void;\r\n}\r\n\r\nconst CategorySelect: React.FC<Props> = observer(({ id, onChange }) => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tallowClear\r\n\t\t\tstyle={{ minInlineSize: '7em' }}\r\n\t\t\tonChange={onChange}\r\n\t\t\tvalue={id}\r\n\t\t\tsuffixIcon={<EditFilled style={{ color: categories[id].color }} />}\r\n\t\t>\r\n\t\t\t{Object.keys(categories).map((key: string) => (\r\n\t\t\t\t<Select.Option\r\n\t\t\t\t\tkey={key}\r\n\t\t\t\t\tvalue={key}\r\n\t\t\t\t>\r\n\t\t\t\t\t{categories[key].name}\r\n\t\t\t\t</Select.Option>\r\n\t\t\t))}\r\n\t\t</Select>\r\n\t);\r\n});\r\n\r\nexport default CategorySelect;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport calculatePrices from '../utils/calculatePrices';\r\nimport { ExpenseItem } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport languages from 'settings/languages';\r\nimport { Col, DatePicker, Form, Input, Modal, Row } from 'antd';\r\nimport CurrencySelect from 'components/CurrencySelect';\r\nimport constants from 'settings/constants';\r\nimport dayjs from 'dayjs';\r\nimport CategorySelect from './CategorySelect';\r\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { listStore } from 'utils/listStore';\r\n\r\ninterface Props {\r\n\topened: boolean;\r\n\tinitialItemId?: string;\r\n\ttoggleOpened: () => void;\r\n\tsubmitItem: (arg0: ExpenseItem) => void;\r\n}\r\n\r\nconst ItemModal: React.FC<Props> = observer(\r\n\t({ opened, initialItemId, toggleOpened, submitItem }) => {\r\n\t\tconst [currency, setCurrency] = useState(constants.baseCurrency);\r\n\t\tconst { currencyRates, isSmallScreen } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\t\tconst { list } = listStore;\r\n\r\n\t\tconst { language } = userOptions;\r\n\r\n\t\tconst initialItem = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tinitialItemId !== undefined ? list[initialItemId] : constants.emptyItem,\r\n\t\t\t[list, initialItemId]\r\n\t\t);\r\n\r\n\t\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(initialItem);\r\n\r\n\t\tconst handleTitleChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\ttitle: value,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleDateChange = useCallback(\r\n\t\t\t(value: dayjs.Dayjs) => {\r\n\t\t\t\tif (value)\r\n\t\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tdate: value.valueOf(),\r\n\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleCategoryChange = useCallback(\r\n\t\t\t(id: string) => {\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\tcategoryId: id,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handlePriceChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem) => {\r\n\t\t\t\t\tconst updatedItem = {\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tprice: {\r\n\t\t\t\t\t\t\t...prevItem.price,\r\n\t\t\t\t\t\t\t[currency]: Number(value),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...updatedItem,\r\n\t\t\t\t\t\tprice: calculatePrices(updatedItem.price, currencyRates, currency),\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentItem, currency, currencyRates]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tconst submitItemWithEnter = (event: KeyboardEvent) => {\r\n\t\t\t\tif (event.key === 'Enter' && opened) {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\twindow.addEventListener('keyup', submitItemWithEnter);\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t};\r\n\t\t}, [currentItem, submitItem, opened]);\r\n\r\n\t\tconst TitleJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={currentItem.title}\r\n\t\t\t\tonInput={handleTitleChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst PriceJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='number'\r\n\t\t\t\tmin='1'\r\n\t\t\t\tstep='1'\r\n\t\t\t\tvalue={Math.round(currentItem.price[currency])}\r\n\t\t\t\tonInput={handlePriceChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CurrencyJSX = (\r\n\t\t\t<CurrencySelect\r\n\t\t\t\tvalue={currency}\r\n\t\t\t\tsetCurrency={setCurrency}\r\n\t\t\t\tonChange={setCurrency}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst DateJSX = (\r\n\t\t\t<DatePicker\r\n\t\t\t\trequired\r\n\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\tvalue={dayjs(currentItem.date)}\r\n\t\t\t\tminDate={constants.startDate}\r\n\t\t\t\tmaxDate={dayjs()}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CategoryJSX = (\r\n\t\t\t<CategorySelect\r\n\t\t\t\tid={currentItem.categoryId}\r\n\t\t\t\tonChange={handleCategoryChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\topen={opened}\r\n\t\t\t\tokButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tcancelButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tonOk={() => {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t}}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetCurrentItem(initialItem);\r\n\t\t\t\t\ttoggleOpened();\r\n\t\t\t\t}}\r\n\t\t\t\tokText={<CheckOutlined />}\r\n\t\t\t\tcancelText={<CloseOutlined />}\r\n\t\t\t>\r\n\t\t\t\t<Form\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tlayout='vertical'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Form.Item label={languages.title[language]}>{TitleJSX}</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.price[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={16}>{PriceJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={7}>{CurrencyJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.dateAndCat[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={10}>{DateJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={13}>{CategoryJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default ItemModal;\r\n","import React, { useState, useCallback, useMemo } from 'react';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport { ExpenseItem, Mode } from '../settings/interfaces';\r\nimport Item from 'antd/es/list/Item';\r\nimport { Card, Col, Flex, Statistic, Tag, Tooltip, Typography } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport Title from 'antd/es/typography/Title';\r\nimport {\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tInfoCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ItemModal from './ItemModal';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport dayjs from 'dayjs';\r\n\r\ninterface Props {\r\n\tmode: Mode;\r\n\tinitialItemId: string;\r\n}\r\n\r\nconst ListItem: React.FC<Props> = observer(({ mode, initialItemId }) => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { replaceItem, removeItem, list } = listStore;\r\n\tconst { userOptions } = optionsStore;\r\n\tconst { categories } = categoryStore;\r\n\r\n\tconst { currency, language } = userOptions;\r\n\r\n\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(\r\n\t\tlist[initialItemId]\r\n\t);\r\n\r\n\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t}, [setIsModalOpened]);\r\n\r\n\tconst updateCurrentItem = useCallback(\r\n\t\t(item: ExpenseItem) => {\r\n\t\t\tsetCurrentItem((prevItem: ExpenseItem) => {\r\n\t\t\t\tif (JSON.stringify(prevItem) !== JSON.stringify(item)) {\r\n\t\t\t\t\tconst newItem: ExpenseItem = {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tupdatedAt: dayjs().valueOf(),\r\n\t\t\t\t\t};\r\n\t\t\t\t\treplaceItem(initialItemId, newItem);\r\n\t\t\t\t\treturn newItem;\r\n\t\t\t\t}\r\n\t\t\t\treturn prevItem;\r\n\t\t\t});\r\n\t\t\ttoggleIsModalOpened();\r\n\t\t},\r\n\t\t[setCurrentItem, replaceItem, toggleIsModalOpened, initialItemId]\r\n\t);\r\n\r\n\tconst deleteItem = useCallback(() => {\r\n\t\tremoveItem(initialItemId);\r\n\t}, [removeItem, initialItemId]);\r\n\r\n\tconst TitleJSX = (\r\n\t\t<Flex\r\n\t\t\tjustify='center'\r\n\t\t\tstyle={{\r\n\t\t\t\topacity: !currentItem.title ? '.5' : '1',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{isSmallScreen ? (\r\n\t\t\t\t<Typography.Text\r\n\t\t\t\t\tstrong\r\n\t\t\t\t\tellipsis\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentItem.title || languages.noTitle[language]}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t) : (\r\n\t\t\t\t<Title\r\n\t\t\t\t\tellipsis\r\n\t\t\t\t\tlevel={3}\r\n\t\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentItem.title || languages.noTitle[language]}\r\n\t\t\t\t</Title>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst DateJSX = (\r\n\t\t<Statistic\r\n\t\t\tvalue={dayjs(currentItem.date).format('DD.MM.YY')}\r\n\t\t\tstyle={{\r\n\t\t\t\tscale: isSmallScreen ? '.75' : '1',\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n\r\n\tconst CategoryJSX = (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\talign='stretch'\r\n\t\t>\r\n\t\t\t<Tag color={categories[currentItem.categoryId].color}>\r\n\t\t\t\t<span\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmargin: 'auto',\r\n\t\t\t\t\t\tcolor: categories[currentItem.categoryId].color,\r\n\t\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{categories[currentItem.categoryId].name}\r\n\t\t\t\t</span>\r\n\t\t\t</Tag>\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst PriceJSX = (\r\n\t\t<Flex justify='center'>\r\n\t\t\t{isSmallScreen ? (\r\n\t\t\t\t<Typography.Text strong>\r\n\t\t\t\t\t{getSymbolAndPrice(currency)}\r\n\t\t\t\t\t{Math.round(currentItem.price[currency])}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t) : (\r\n\t\t\t\t<Title\r\n\t\t\t\t\tlevel={3}\r\n\t\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{getSymbolAndPrice(currency, currentItem.price[currency])}\r\n\t\t\t\t</Title>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst DeleteJSX = (\r\n\t\t<DeleteOutlined\r\n\t\t\tonClick={deleteItem}\r\n\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t/>\r\n\t);\r\n\r\n\tconst EditJSX = (\r\n\t\t<EditOutlined\r\n\t\t\tonClick={toggleIsModalOpened}\r\n\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t/>\r\n\t);\r\n\r\n\tconst ActionsJSX = (\r\n\t\t<Flex justify='space-evenly'>\r\n\t\t\t{EditJSX}\r\n\t\t\t{PriceJSX}\r\n\t\t\t{DeleteJSX}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst tooltipTitle = useMemo(() => {\r\n\t\tif (!currentItem.updatedAt) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{`${languages.createdAt[language]} ${dayjs(\r\n\t\t\t\t\t\tcurrentItem.createdAt\r\n\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{`${languages.createdAt[language]} ${dayjs(\r\n\t\t\t\t\t\tcurrentItem.createdAt\r\n\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t{`${languages.updatedAt[language]} ${dayjs(\r\n\t\t\t\t\t\tcurrentItem.updatedAt\r\n\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t}, [currentItem, language]);\r\n\r\n\tconst TooltipJSX = (\r\n\t\t<Tooltip title={tooltipTitle}>\r\n\t\t\t<InfoCircleOutlined />\r\n\t\t</Tooltip>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ItemModal\r\n\t\t\t\topened={isModalOpened}\r\n\t\t\t\tinitialItemId={initialItemId}\r\n\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\tsubmitItem={updateCurrentItem}\r\n\t\t\t/>\r\n\t\t\t{mode === 'list' ? (\r\n\t\t\t\t<Item>\r\n\t\t\t\t\t<Col>{DateJSX}</Col>\r\n\t\t\t\t\t<Col span={9}>{TitleJSX}</Col>\r\n\t\t\t\t\t<Col span={3}>{CategoryJSX}</Col>\r\n\t\t\t\t\t<Col span={5}>{PriceJSX}</Col>\r\n\t\t\t\t\t<Col>{EditJSX}</Col>\r\n\t\t\t\t\t<Col>{DeleteJSX}</Col>\r\n\t\t\t\t\t<Col>{TooltipJSX}</Col>\r\n\t\t\t\t</Item>\r\n\t\t\t) : (\r\n\t\t\t\t<Card\r\n\t\t\t\t\textra={[TooltipJSX]}\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\tbordered\r\n\t\t\t\t\ttitle={TitleJSX}\r\n\t\t\t\t\tactions={[ActionsJSX]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Flex justify='center'>\r\n\t\t\t\t\t\t<Flex\r\n\t\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\t\talign='stretch'\r\n\t\t\t\t\t\t\tgap={4}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{DateJSX}\r\n\t\t\t\t\t\t\t{CategoryJSX}\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Card>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default ListItem;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useDebounce = (value: any, delay: number = 250) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const timerId = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce\r\n","import React, { memo, useEffect, useMemo, useState } from 'react';\r\nimport ListItem from './ListItem';\r\nimport { ListOptions } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Col, Empty, List, Row } from 'antd';\r\nimport { getListToShowOnCurrentPageIds } from 'utils/transformData';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport LargeSpin from './LargeSpin';\r\n\r\ninterface Props {\r\n\tfilteredListIds: string[];\r\n}\r\n\r\nconst ItemList: React.FC<Props> = observer(({ filteredListIds }) => {\r\n\tconst { width, loading } = userStore;\r\n\tconst { listOptions } = optionsStore;\r\n\r\n\tconst debouncedOptions: ListOptions = useDebounce(listOptions);\r\n\r\n\tconst [colNumber, setColNumber] = useState<number>(4);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (width < 350) {\r\n\t\t\tsetColNumber(1);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (width < 450) {\r\n\t\t\tsetColNumber(2);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (width < 850) {\r\n\t\t\tsetColNumber(3);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetColNumber(4);\r\n\t}, [setColNumber, width]);\r\n\r\n\tconst listToShowOnCurrentPageIds = useMemo(\r\n\t\t() => getListToShowOnCurrentPageIds(debouncedOptions, filteredListIds),\r\n\t\t[filteredListIds, debouncedOptions]\r\n\t);\r\n\r\n\tconst splittedListIds = useMemo(() => {\r\n\t\tconst result: string[][] = [];\r\n\t\tlet row = -1;\r\n\r\n\t\tlistToShowOnCurrentPageIds.forEach((key: string, col: number) => {\r\n\t\t\tif (col % colNumber === 0) {\r\n\t\t\t\trow++;\r\n\t\t\t\tresult.push([]);\r\n\t\t\t}\r\n\t\t\tresult[row].push(key);\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}, [colNumber, listToShowOnCurrentPageIds]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<LargeSpin />\r\n\t\t\t) : (\r\n\t\t\t\t!filteredListIds.length && (\r\n\t\t\t\t\t<Empty\r\n\t\t\t\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\t\t\t\tdescription={''}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t)}\r\n\t\t\t{debouncedOptions.mode === 'list' ? (\r\n\t\t\t\t<List style={{ inlineSize: '100%' }}>\r\n\t\t\t\t\t{listToShowOnCurrentPageIds.map((key: string) => (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\tmode={debouncedOptions.mode}\r\n\t\t\t\t\t\t\tinitialItemId={key}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</List>\r\n\t\t\t) : (\r\n\t\t\t\tsplittedListIds.map((keys: string[]) => (\r\n\t\t\t\t\t<Row\r\n\t\t\t\t\t\tkey={keys[0]}\r\n\t\t\t\t\t\tgutter={16}\r\n\t\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{keys.map((key: string) => (\r\n\t\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\t\tspan={24 / colNumber}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\tmode={debouncedOptions.mode}\r\n\t\t\t\t\t\t\t\t\tinitialItemId={key}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t))\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default memo(ItemList);\r\n","import React, { useCallback, useState } from 'react';\r\nimport { ExpenseItem } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport ItemModal from './ItemModal';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport dayjs from 'dayjs';\r\n\r\nconst NewItemButton: React.FC = observer(() => {\r\n\tconst { addItem } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\r\n\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t}, [setIsModalOpened]);\r\n\r\n\tconst addNewItem = useCallback(\r\n\t\t(item: ExpenseItem) => {\r\n\t\t\tconst date = dayjs().valueOf();\r\n\t\t\taddItem({ ...item, createdAt: date });\r\n\t\t\ttoggleIsModalOpened();\r\n\t\t},\r\n\t\t[addItem, toggleIsModalOpened]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={toggleIsModalOpened}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<PlusOutlined />\r\n\t\t\t</Button>\r\n\t\t\t<ItemModal\r\n\t\t\t\topened={isModalOpened}\r\n\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\tsubmitItem={addNewItem}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default NewItemButton;\r\n","import React from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select, Tag } from 'antd';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst tagRender = (props: any, categories: { [key: number]: category }) => {\r\n\tconst { label, value, onClose } = props;\r\n\tconst onPreventMouseDown = (event: any) => {\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\t};\r\n\tconst color =\r\n\t\tObject.keys(categories).length > 1 ? categories[value].color : '';\r\n\treturn (\r\n\t\t<Tag\r\n\t\t\tcolor={color}\r\n\t\t\tonMouseDown={onPreventMouseDown}\r\n\t\t\tclosable={true}\r\n\t\t\tonClose={onClose}\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginInlineEnd: 4,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<span\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcolor: color,\r\n\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{label}\r\n\t\t\t</span>\r\n\t\t</Tag>\r\n\t);\r\n};\r\n\r\nconst CategoriesSelect: React.FC = observer(() => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleCategoriesToFilterChange } = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tmode='multiple'\r\n\t\t\tshowSearch={false}\r\n\t\t\ttagRender={(props) => tagRender(props, categories)}\r\n\t\t\tstyle={{ minInlineSize: '10em' }}\r\n\t\t\tvalue={listOptions.categoriesToFilterIds}\r\n\t\t\tonChange={handleCategoriesToFilterChange}\r\n\t\t>\r\n\t\t\t{Object.keys(categories).map((key: string) => (\r\n\t\t\t\t<Select.Option\r\n\t\t\t\t\tkey={key}\r\n\t\t\t\t\tvalue={key}\r\n\t\t\t\t>\r\n\t\t\t\t\t{categories[key].name}\r\n\t\t\t\t</Select.Option>\r\n\t\t\t))}\r\n\t\t</Select>\r\n\t);\r\n});\r\n\r\nexport default CategoriesSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented } from 'antd';\r\nimport {\r\n\tCalendarOutlined,\r\n\tDollarOutlined,\r\n\tFontColorsOutlined,\r\n\tSortAscendingOutlined,\r\n\tSortDescendingOutlined,\r\n} from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst SortSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { setIsSortingReversed, listOptions, handleSortAlgorithmChanging } =\r\n\t\toptionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t{listOptions.isSortingReversed ? (\r\n\t\t\t\t<SortDescendingOutlined />\r\n\t\t\t) : (\r\n\t\t\t\t<SortAscendingOutlined />\r\n\t\t\t)}\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.sortingAlgorithm}\r\n\t\t\t\tonDoubleClick={() =>\r\n\t\t\t\t\tsetIsSortingReversed(!listOptions.isSortingReversed)\r\n\t\t\t\t}\r\n\t\t\t\tonChange={handleSortAlgorithmChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{ label: <CalendarOutlined />, value: 'date' },\r\n\t\t\t\t\t{ label: <FontColorsOutlined />, value: 'title' },\r\n\t\t\t\t\t{ label: <DollarOutlined />, value: 'price' },\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default SortSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented } from 'antd';\r\nimport { MenuOutlined, TableOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst ModeSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleModeChanging } = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.mode}\r\n\t\t\t\tonChange={handleModeChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{ label: <MenuOutlined />, value: 'list', disabled: isSmallScreen },\r\n\t\t\t\t\t{ label: <TableOutlined />, value: 'grid' },\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default ModeSelect;\r\n","import { Button, Divider, Flex, Pagination } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { memo, useMemo } from 'react';\r\nimport NewItemButton from './NewItemButton';\r\nimport YearSlider from './YearSlider';\r\nimport CategoriesSelect from './CategoriesSelect';\r\nimport SortSelect from './SortSelect';\r\nimport ModeSelect from './ModeSelect';\r\nimport { ReloadOutlined } from '@ant-design/icons';\r\nimport constants from 'settings/constants';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\ninterface Props {\r\n\ttotal: number;\r\n}\r\n\r\nconst Selectors: React.FC<Props> = observer(({ total }) => {\r\n\tconst { isSmallScreen, loading } = userStore;\r\n\tconst {\r\n\t\tlistOptions,\r\n\t\tdefaultRange,\r\n\t\tresetListOptions: resetSettings,\r\n\t\thandlePageChanging,\r\n\t\tsetRange,\r\n\t\tsetIsAccurate,\r\n\t} = optionsStore;\r\n\r\n\tconst {\r\n\t\tisSortingReversed,\r\n\t\trange,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t\tcurrentPage,\r\n\t\tsortingAlgorithm,\r\n\t\tisAccurate,\r\n\t} = listOptions;\r\n\r\n\tconst isSettingsChanged = useMemo(\r\n\t\t() =>\r\n\t\t\tisSortingReversed ||\r\n\t\t\tcategoriesToFilterIds.length > 0 ||\r\n\t\t\tpageSize !== constants.defaultPageSize ||\r\n\t\t\tcurrentPage !== 1 ||\r\n\t\t\t(range[0] &&\r\n\t\t\t\trange[1] &&\r\n\t\t\t\t(range[0] !== defaultRange[0] || range[1]) !== defaultRange[1]) ||\r\n\t\t\tsortingAlgorithm !== 'date',\r\n\t\t[\r\n\t\t\trange,\r\n\t\t\tdefaultRange,\r\n\t\t\tisSortingReversed,\r\n\t\t\tcategoriesToFilterIds,\r\n\t\t\tpageSize,\r\n\t\t\tcurrentPage,\r\n\t\t\tsortingAlgorithm,\r\n\t\t]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t>\r\n\t\t\t<Flex\r\n\t\t\t\tvertical\r\n\t\t\t\tgap={32}\r\n\t\t\t>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tgap={16}\r\n\t\t\t\t\tvertical={isSmallScreen}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t\t<NewItemButton />\r\n\t\t\t\t\t\t<CategoriesSelect />\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t\t<SortSelect />\r\n\t\t\t\t\t\t<ModeSelect />\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tdisabled={!isSettingsChanged}\r\n\t\t\t\t\t\t\tonClick={resetSettings}\r\n\t\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ReloadOutlined />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<YearSlider\r\n\t\t\t\t\tsetIsAccurate={setIsAccurate}\r\n\t\t\t\t\tisAccurate={isAccurate}\r\n\t\t\t\t\trange={range}\r\n\t\t\t\t\tsetRange={setRange}\r\n\t\t\t\t/>\r\n\t\t\t</Flex>\r\n\t\t\t<Divider />\r\n\t\t\t{!loading && (\r\n\t\t\t\t<Pagination\r\n\t\t\t\t\tstyle={{ alignSelf: 'center' }}\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\tshowSizeChanger\r\n\t\t\t\t\tpageSizeOptions={constants.pageSizeOptions}\r\n\t\t\t\t\tcurrent={listOptions.currentPage}\r\n\t\t\t\t\tpageSize={listOptions.pageSize}\r\n\t\t\t\t\ttotal={total}\r\n\t\t\t\t\tonChange={handlePageChanging}\r\n\t\t\t\t\tonShowSizeChange={handlePageChanging}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default memo(Selectors);\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport ItemList from '../components/ItemList';\r\nimport { Flex } from 'antd';\r\nimport Selectors from 'components/Selectors';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { getFilteredListIds } from 'utils/transformData';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst Expenses: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { listOptions, userOptions, handleModeChanging, handlePageChanging } =\r\n\t\toptionsStore;\r\n\r\n\tconst { language } = userOptions;\r\n\r\n\tconst {\r\n\t\trange,\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t} = listOptions;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isSmallScreen) {\r\n\t\t\thandleModeChanging('grid');\r\n\t\t}\r\n\t}, [isSmallScreen, handleModeChanging]);\r\n\r\n\tuseEffect(() => {\r\n\t\thandlePageChanging(1, pageSize);\r\n\t}, [\r\n\t\trange,\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t\thandlePageChanging,\r\n\t]);\r\n\t\r\n\tconst filteredListIds = useMemo(\r\n\t\t() => getFilteredListIds(listOptions, list, language),\r\n\t\t[list, language, listOptions]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t\talign='center'\r\n\t\t>\r\n\t\t\t<Selectors total={filteredListIds.length} />\r\n\t\t\t<ItemList filteredListIds={filteredListIds} />\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default Expenses;\r\n","import {\r\n\tExpenseItem,\r\n\tInterval,\r\n\tListOptions,\r\n\tValue,\r\n\tlanguage,\r\n} from 'settings/interfaces';\r\nimport { sortBy } from './utils';\r\nimport dayjs from 'dayjs';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\n\r\ndayjs.extend(isBetween);\r\n\r\nexport const getFilteredListIds = (\r\n\toptions: ListOptions,\r\n\tlist: { [key: string]: ExpenseItem },\r\n\tlanguage: language\r\n) => {\r\n\tconst { range, categoriesToFilterIds, sortingAlgorithm, isSortingReversed } =\r\n\t\toptions;\r\n\treturn sortBy(\r\n\t\tlist,\r\n\t\tObject.keys(list).filter(\r\n\t\t\t(key: string) =>\r\n\t\t\t\tlist[key].date >= range[0] &&\r\n\t\t\t\tlist[key].date <= range[1] &&\r\n\t\t\t\t(categoriesToFilterIds.length\r\n\t\t\t\t\t? categoriesToFilterIds.some(\r\n\t\t\t\t\t\t\t(id: string) => list[key].categoryId === id\r\n\t\t\t\t\t  )\r\n\t\t\t\t\t: true)\r\n\t\t),\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tlanguage\r\n\t);\r\n};\r\n\r\nexport const getListToShowOnCurrentPageIds = (\r\n\toptions: ListOptions,\r\n\tfilteredListIds: string[]\r\n) => {\r\n\tconst { currentPage, pageSize } = options;\r\n\tconst startIndex = (currentPage - 1) * pageSize;\r\n\tconst endIndex = startIndex + pageSize;\r\n\treturn filteredListIds.slice(startIndex, endIndex);\r\n};\r\n\r\nexport const getValuesForBarDiagram = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\tcurrency: string,\r\n\tmode: Interval,\r\n\tyear: number\r\n) => {\r\n\tif (mode === 'year') {\r\n\t\tconst result: { [key: number]: number } = {};\r\n\t\tObject.keys(list).forEach((key: string) => {\r\n\t\t\tconst resultKey: number = dayjs(list[key].date).year();\r\n\t\t\tif (result[resultKey] === undefined) {\r\n\t\t\t\tresult[resultKey] = list[key].price[currency];\r\n\t\t\t} else {\r\n\t\t\t\tresult[resultKey] += list[key].price[currency];\r\n\t\t\t}\r\n\t\t});\r\n\t\tfor (let year in result) {\r\n\t\t\tresult[year] = Math.round(result[year]);\r\n\t\t}\r\n\t\treturn result;\r\n\t} else if (mode === 'month') {\r\n\t\tconst result: number[] = new Array(12).fill(0);\r\n\t\tObject.keys(list).forEach((key: string) => {\r\n\t\t\tif (dayjs(list[key].date).year() === year) {\r\n\t\t\t\tconst index: number = dayjs(list[key].date).month();\r\n\t\t\t\tresult[index] += list[key].price[currency];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result.map((item: number) => Math.round(item));\r\n\t}\r\n\treturn [];\r\n};\r\n\r\nexport const getValuesForPieDiagram = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\trange: number[],\r\n\tcurrency: string\r\n) => {\r\n\tconst values: Value[] = [];\r\n\tObject.keys(list).forEach((key: string) => {\r\n\t\tif (list[key].date > range[0] && list[key].date < range[1]) {\r\n\t\t\tconst categoryKey: number = Object.keys(values).findIndex(\r\n\t\t\t\t(n: string) => values[Number(n)].categoryId === list[key].categoryId\r\n\t\t\t);\r\n\t\t\tif (categoryKey !== -1) {\r\n\t\t\t\tvalues[categoryKey].value += list[key].price[currency];\r\n\t\t\t} else {\r\n\t\t\t\tvalues.push({\r\n\t\t\t\t\tcategoryId: list[key].categoryId,\r\n\t\t\t\t\tvalue: list[key].price[currency],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn values.map((value: Value) => ({\r\n\t\t...value,\r\n\t\tvalue: Math.round(value.value),\r\n\t}));\r\n};\r\n\r\nexport const getTotalInCurrentRange = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\trange: number[],\r\n\tcurrency: string\r\n) =>\r\n\tMath.floor(\r\n\t\tObject.values(list).reduce((acc: number, item: ExpenseItem) => {\r\n\t\t\tif (item.date >= range[0] && item.date <= range[1]) {\r\n\t\t\t\treturn acc + item.price[currency];\r\n\t\t\t}\r\n\t\t\treturn acc;\r\n\t\t}, 0)\r\n\t);\r\n\r\nexport const getValuesByMonth = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\trange: number[]\r\n) => {\r\n\tconst values: number[] = [];\r\n\tconst end = dayjs(range[1]);\r\n\tlet startDate = dayjs(range[0]);\r\n\tlet endDate = dayjs(range[0]).add(1, 'month');\r\n\r\n\twhile (!endDate.isAfter(end, 'day')) {\r\n\t\tconst itemsInMonth = Object.values(list).filter(\r\n\t\t\t// eslint-disable-next-line\r\n\t\t\t(item: ExpenseItem) =>\r\n\t\t\t\titem.date > startDate.valueOf() && item.date < endDate.valueOf()\r\n\t\t);\r\n\t\tconst valueForMonth = itemsInMonth.reduce(\r\n\t\t\t(acc, item) => acc + item.price.USD,\r\n\t\t\t0\r\n\t\t);\r\n\t\tvalues.push(valueForMonth);\r\n\t\tstartDate = startDate.add(1, 'month');\r\n\t\tendDate = endDate.add(1, 'month');\r\n\t}\r\n\r\n\treturn values;\r\n};\r\n","import { ExpenseItem, Sort, language } from 'settings/interfaces';\r\n\r\nexport const getSymbolAndPrice = (currency: string, price?: number) => {\r\n\tlet result = '';\r\n\tif (currency === 'USD') result += '$';\r\n\tif (currency === 'EUR') result += '€';\r\n\tif (currency === 'RUB') result += '₽';\r\n\r\n\tconst formattedPrice = Math.round(price as number)\r\n\t\t?.toString()\r\n\t\t.split('')\r\n\t\t.reverse()\r\n\t\t.reduce(\r\n\t\t\t(acc: string[], symbol: string, index: number) =>\r\n\t\t\t\tindex % 3 === 0 && index !== 0\r\n\t\t\t\t\t? [...acc, symbol + ',']\r\n\t\t\t\t\t: [...acc, symbol],\r\n\t\t\t[]\r\n\t\t)\r\n\t\t.reverse()\r\n\t\t.join('');\r\n\r\n\treturn price === undefined ? result : result + formattedPrice;\r\n};\r\n\r\nexport const sortBy = (\r\n\tlist: { [key: string]: ExpenseItem },\r\n\tlistKeys: string[],\r\n\tsortingAlgorithm: Sort,\r\n\treversed: boolean,\r\n\tlanguage?: language\r\n) => {\r\n\tlet result: string[];\r\n\tswitch (sortingAlgorithm) {\r\n\t\tcase 'date':\r\n\t\t\tresult = listKeys.sort(\r\n\t\t\t\t(prev: string, next: string) =>\r\n\t\t\t\t\tlist[next].date.valueOf() - list[prev].date.valueOf()\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'title':\r\n\t\t\tresult = listKeys.sort((prev: string, next: string) =>\r\n\t\t\t\tlist[prev].title.localeCompare(list[next].title, language, {\r\n\t\t\t\t\tsensitivity: 'base',\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'price':\r\n\t\t\tresult = listKeys.sort(\r\n\t\t\t\t(prev: string, next: string) =>\r\n\t\t\t\t\tlist[next].price.USD - list[prev].price.USD\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tresult = listKeys;\r\n\t}\r\n\r\n\treturn reversed ? result.reverse() : result;\r\n};\r\n"],"names":["SliderDiagram","observer","list","listStore","defaultRange","optionsStore","valuesByMonth","useMemo","getValuesByMonth","data","labels","Array","length","fill","datasets","_jsx","Line","style","inlineSize","options","plugins","legend","display","tooltip","enabled","scales","x","grid","y","elements","point","radius","line","cubicInterpolationMode","borderColor","aspectRatio","memo","Chart","register","Tooltip","LineElement","LineController","CategoryScale","LinearScale","PointElement","dayjs","minMax","YearSlider","_ref","range","setRange","isAccurate","setIsAccurate","isSmallScreen","userStore","setDefaultRange","value","setValue","useState","sliderRange","dates","Object","values","map","item","date","Math","min","max","marks","start","startOf","end","endOf","currentDate","isBefore","isSame","valueOf","month","format","add","useEffect","handleRangeChanging","useCallback","diff","_jsxs","Flex","gap","align","children","Segmented","size","defaultValue","onChange","label","ZoomOutOutlined","ZoomInOutlined","disabled","vertical","Slider","step","dots","formatter","_Fragment","onChangeComplete","prices","rates","arguments","undefined","constants","baseCurrency","id","categories","categoryStore","Select","allowClear","minInlineSize","suffixIcon","EditFilled","color","keys","key","Option","name","ItemModal","opened","initialItemId","toggleOpened","submitItem","currency","setCurrency","currencyRates","userOptions","language","initialItem","emptyItem","currentItem","setCurrentItem","handleTitleChange","event","target","prevItem","title","handleDateChange","handleCategoryChange","categoryId","handlePriceChange","updatedItem","price","Number","calculatePrices","submitItemWithEnter","window","removeEventListener","addEventListener","TitleJSX","Input","required","type","onInput","PriceJSX","round","CurrencyJSX","CurrencySelect","DateJSX","DatePicker","minDate","startDate","maxDate","CategoryJSX","CategorySelect","Modal","open","okButtonProps","cancelButtonProps","onOk","onCancel","okText","CheckOutlined","cancelText","CloseOutlined","Form","layout","Item","languages","Row","Col","span","dateAndCat","ListItem","mode","replaceItem","removeItem","isModalOpened","setIsModalOpened","toggleIsModalOpened","prevValue","updateCurrentItem","JSON","stringify","newItem","updatedAt","deleteItem","justify","opacity","Typography","Text","strong","ellipsis","noTitle","Title","level","margin","Statistic","scale","Tag","filter","getSymbolAndPrice","DeleteJSX","DeleteOutlined","onClick","EditJSX","EditOutlined","ActionsJSX","tooltipTitle","concat","createdAt","TooltipJSX","InfoCircleOutlined","Card","extra","bordered","actions","delay","debouncedValue","setDebouncedValue","timerId","setTimeout","clearTimeout","ItemList","filteredListIds","width","loading","listOptions","debouncedOptions","useDebounce","colNumber","setColNumber","listToShowOnCurrentPageIds","getListToShowOnCurrentPageIds","splittedListIds","result","row","forEach","col","push","LargeSpin","Empty","image","PRESENTED_IMAGE_SIMPLE","description","List","gutter","addItem","addNewItem","Button","PlusOutlined","handleCategoriesToFilterChange","showSearch","tagRender","props","onClose","onMouseDown","preventDefault","stopPropagation","closable","marginInlineEnd","categoriesToFilterIds","setIsSortingReversed","handleSortAlgorithmChanging","alignSelf","isSortingReversed","SortDescendingOutlined","SortAscendingOutlined","sortingAlgorithm","onDoubleClick","CalendarOutlined","FontColorsOutlined","DollarOutlined","handleModeChanging","MenuOutlined","TableOutlined","Selectors","total","resetListOptions","resetSettings","handlePageChanging","pageSize","currentPage","isSettingsChanged","defaultPageSize","NewItemButton","CategoriesSelect","SortSelect","ModeSelect","ReloadOutlined","Divider","Pagination","showSizeChanger","pageSizeOptions","current","onShowSizeChange","Expenses","getFilteredListIds","isBetween","sortBy","some","startIndex","endIndex","slice","getValuesForBarDiagram","year","resultKey","index","getValuesForPieDiagram","categoryKey","findIndex","n","getTotalInCurrentRange","floor","reduce","acc","endDate","isAfter","valueForMonth","USD","_Math$round","formattedPrice","toString","split","reverse","symbol","join","listKeys","reversed","sort","prev","next","localeCompare","sensitivity"],"sourceRoot":""}