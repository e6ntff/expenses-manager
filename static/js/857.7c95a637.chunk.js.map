{"version":3,"file":"static/js/857.7c95a637.chunk.js","mappings":"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","sources":["components/ItemsModal.tsx","components/CategoryItem.tsx","components/CategorySelect.tsx","components/ImageUpload.tsx","components/ItemModal.tsx","components/Items.tsx","components/ListItem.tsx"],"sourcesContent":["import { Col, Flex, List, Modal, Statistic, Typography } from 'antd';\r\nimport Item from 'antd/es/list/Item';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { memo, useCallback } from 'react';\r\nimport { listStore } from 'utils/listStore';\r\nimport dayjs from 'dayjs';\r\nimport { userStore } from 'utils/userStore';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport Title from 'antd/es/typography/Title';\r\nimport constants from 'settings/constants';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport { MyIconWithTooltip } from './Items';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n\topened: boolean;\r\n\tsetOpened: (arg0: boolean) => void;\r\n\titemIds: string[];\r\n}\r\n\r\nconst ItemsModal: React.FC<Props> = observer(\r\n\t({ opened, setOpened, itemIds }) => {\r\n\t\tconst { list, replaceItem } = listStore;\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\r\n\t\tconst { language } = userOptions;\r\n\r\n\t\tconst deleteCategoryFromItem = useCallback(\r\n\t\t\t(key: string) => {\r\n\t\t\t\treplaceItem(key, {\r\n\t\t\t\t\t...list[key],\r\n\t\t\t\t\tcategoryId: constants.emptyItem.categoryId,\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[list, replaceItem]\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\topen={opened}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetOpened(false);\r\n\t\t\t\t}}\r\n\t\t\t\tokButtonProps={{ style: { display: 'none' } }}\r\n\t\t\t\tcancelButtonProps={{ style: { display: 'none' } }}\r\n\t\t\t>\r\n\t\t\t\t<Scrollbars\r\n\t\t\t\t\tautoHide\r\n\t\t\t\t\tstyle={{ blockSize: '75vh' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<List>\r\n\t\t\t\t\t\t{itemIds.map((key: string) => (\r\n\t\t\t\t\t\t\t<Item key={key}>\r\n\t\t\t\t\t\t\t\t<Col span={5}>\r\n\t\t\t\t\t\t\t\t\t<Statistic\r\n\t\t\t\t\t\t\t\t\t\tvalue={dayjs(list[key].date).format('DD.MM.YY')}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tscale: isSmallScreen ? '.75' : '1',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col span={10}>\r\n\t\t\t\t\t\t\t\t\t<Flex\r\n\t\t\t\t\t\t\t\t\t\tjustify='center'\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\topacity: !list[key].title ? '.5' : '1',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{isSmallScreen ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography.Text\r\n\t\t\t\t\t\t\t\t\t\t\t\tstrong\r\n\t\t\t\t\t\t\t\t\t\t\t\tellipsis\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{list[key].title ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlanguages.noTitle[userOptions.language]}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography.Text>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<Title\r\n\t\t\t\t\t\t\t\t\t\t\t\tellipsis\r\n\t\t\t\t\t\t\t\t\t\t\t\tlevel={3}\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{list[key].title ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlanguages.noTitle[userOptions.language]}\r\n\t\t\t\t\t\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col span={2}>\r\n\t\t\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\t\t\tlanguages.delete[language],\r\n\t\t\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\t\t\tDeleteOutlined,\r\n\t\t\t\t\t\t\t\t\t\t() => deleteCategoryFromItem(key)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</Scrollbars>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default memo(ItemsModal);\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Card, ColorPicker, Flex, Tooltip } from 'antd';\r\nimport { Color } from 'antd/es/color-picker';\r\nimport { userStore } from 'utils/userStore';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport ItemsModal from './ItemsModal';\r\nimport { MyIconWithTooltip, MyInfoTooltip, MyTitle } from './Items';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n\tinitialCategoryId: string;\r\n\tcategory?: category;\r\n\tdisabled?: boolean;\r\n}\r\n\r\nconst CategoryItem: React.FC<Props> = observer(\r\n\t({ initialCategoryId, category, disabled }) => {\r\n\t\tconst {\r\n\t\t\treplaceCategory,\r\n\t\t\tcategories,\r\n\t\t\tsetLastDeletedCategoryIds,\r\n\t\t\tlastDeletedCategoryIds,\r\n\t\t} = categoryStore;\r\n\t\tconst { list } = listStore;\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\r\n\t\tconst { language } = userOptions;\r\n\r\n\t\tconst [currentCategory, setCurrentCategory] = useState<category>(\r\n\t\t\tcategory || categories[initialCategoryId]\r\n\t\t);\r\n\r\n\t\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\r\n\t\tconst itemsWithCurrentCategory = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tObject.keys(list).reduce(\r\n\t\t\t\t\t(acc: string[], key: string) =>\r\n\t\t\t\t\t\tlist[key].categoryId === initialCategoryId\r\n\t\t\t\t\t\t\t? [...acc, key]\r\n\t\t\t\t\t\t\t: [...acc],\r\n\t\t\t\t\t[]\r\n\t\t\t\t),\r\n\t\t\t[list, initialCategoryId]\r\n\t\t);\r\n\r\n\t\tconst deleteCategory = useCallback(() => {\r\n\t\t\tsetLastDeletedCategoryIds([...lastDeletedCategoryIds, initialCategoryId]);\r\n\t\t}, [setLastDeletedCategoryIds, initialCategoryId, lastDeletedCategoryIds]);\r\n\r\n\t\tconst updateCurrentCategory = useCallback(\r\n\t\t\t(category: category) => {\r\n\t\t\t\tsetCurrentCategory((prevCategory: category) => {\r\n\t\t\t\t\tif (JSON.stringify(prevCategory) !== JSON.stringify(category)) {\r\n\t\t\t\t\t\treplaceCategory(initialCategoryId, category);\r\n\t\t\t\t\t\treturn category;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn prevCategory;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentCategory, replaceCategory, initialCategoryId]\r\n\t\t);\r\n\r\n\t\tconst handleNameChange = useCallback(\r\n\t\t\t(value: string) => {\r\n\t\t\t\tsetCurrentCategory((prevCategory) => {\r\n\t\t\t\t\tconst newCategory: category = {\r\n\t\t\t\t\t\t...prevCategory,\r\n\t\t\t\t\t\tname: value,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tupdateCurrentCategory(newCategory);\r\n\t\t\t\t\treturn newCategory;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentCategory, updateCurrentCategory]\r\n\t\t);\r\n\r\n\t\tconst handleColorChange = useCallback(\r\n\t\t\t(value: Color) => {\r\n\t\t\t\tsetCurrentCategory((prevCategory) => {\r\n\t\t\t\t\tconst newCategory: category = {\r\n\t\t\t\t\t\t...prevCategory,\r\n\t\t\t\t\t\tcolor: `#${value.toHex()}`,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tupdateCurrentCategory(newCategory);\r\n\t\t\t\t\treturn newCategory;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentCategory, updateCurrentCategory]\r\n\t\t);\r\n\r\n\t\tconst ColorPickerJSX = (\r\n\t\t\t<Tooltip title={languages.pickColor[language]}>\r\n\t\t\t\t<ColorPicker\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tvalue={currentCategory.color}\r\n\t\t\t\t\tformat='hex'\r\n\t\t\t\t\tonChangeComplete={handleColorChange}\r\n\t\t\t\t/>\r\n\t\t\t</Tooltip>\r\n\t\t);\r\n\r\n\t\tconst tooltipTitle = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\t`${languages.itemsWithCurrentCategory[language]}: ${itemsWithCurrentCategory.length}`,\r\n\t\t\t[itemsWithCurrentCategory, language]\r\n\t\t);\r\n\r\n\t\tconst ActionsJSX = (\r\n\t\t\t<Flex\r\n\t\t\t\talign='center'\r\n\t\t\t\tjustify='space-evenly'\r\n\t\t\t>\r\n\t\t\t\t{MyInfoTooltip(tooltipTitle, isSmallScreen, () => {\r\n\t\t\t\t\titemsWithCurrentCategory.length && setIsModalOpened(true);\r\n\t\t\t\t})}\r\n\t\t\t\t{ColorPickerJSX}\r\n\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\tlanguages.delete[userOptions.language],\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\tDeleteOutlined,\r\n\t\t\t\t\tdeleteCategory\r\n\t\t\t\t)}\r\n\t\t\t</Flex>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Card\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tinlineSize: isSmallScreen ? '8em' : '12em',\r\n\t\t\t\t\t\tpointerEvents: disabled ? 'none' : 'auto',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\ttitle={MyTitle(currentCategory.name, isSmallScreen, language, {\r\n\t\t\t\t\t\tonChange: handleNameChange,\r\n\t\t\t\t\t})}\r\n\t\t\t\t\tactions={[ActionsJSX]}\r\n\t\t\t\t\tstyles={{\r\n\t\t\t\t\t\ttitle: {\r\n\t\t\t\t\t\t\tpadding: 10,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tbody: {\r\n\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t></Card>\r\n\t\t\t\t<ItemsModal\r\n\t\t\t\t\topened={isModalOpened}\r\n\t\t\t\t\tsetOpened={setIsModalOpened}\r\n\t\t\t\t\titemIds={itemsWithCurrentCategory}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default CategoryItem;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select } from 'antd';\r\nimport { EditFilled } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tid: string;\r\n\tonChange: (arg0: string) => void;\r\n}\r\n\r\nconst CategorySelect: React.FC<Props> = observer(({ id, onChange }) => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tstyle={{ minInlineSize: '7em' }}\r\n\t\t\tonChange={onChange}\r\n\t\t\tvalue={id}\r\n\t\t\tsuffixIcon={\r\n\t\t\t\t<EditFilled style={{ color: categories[id] && categories[id].color }} />\r\n\t\t\t}\r\n\t\t\toptions={Object.keys(categories)\r\n\t\t\t\t.filter((key: string) => !categories[key].deleted)\r\n\t\t\t\t.map((key: string) => ({\r\n\t\t\t\t\tlabel: categories[key].name,\r\n\t\t\t\t\tvalue: key,\r\n\t\t\t\t}))}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default CategorySelect;\r\n","import { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Image, Upload } from 'antd';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useState } from 'react';\r\n\r\ninterface Props {\r\n\timage: string | undefined;\r\n\tonChange: (arg0: string) => void;\r\n}\r\n\r\nconst ImageUpload: React.FC<Props> = observer(({ onChange, image }) => {\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\r\n\tconst getBase64 = (img: any, callback: any) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t};\r\n\r\n\tconst handleChange = useCallback(\r\n\t\t(info: any) => {\r\n\t\t\tif (info.file.status === 'uploading') {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t}\r\n\t\t\tif (info.file.status === 'done') {\r\n\t\t\t\tgetBase64(info.file.originFileObj, (url: any) => {\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tonChange(url);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t[setLoading, onChange]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<ImgCrop\r\n\t\t\tcropShape='round'\r\n\t\t\trotationSlider\r\n\t\t>\r\n\t\t\t<Upload\r\n\t\t\t\taction={'1'}\r\n\t\t\t\taccept='image/*'\r\n\t\t\t\tlistType='picture-circle'\r\n\t\t\t\tshowUploadList={false}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tmaxCount={1}\r\n\t\t\t>\r\n\t\t\t\t{image ? (\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\tborderRadius: '50px',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : loading ? (\r\n\t\t\t\t\t<LoadingOutlined style={{ scale: '1.5' }} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<PlusOutlined style={{ scale: '1.5' }} />\r\n\t\t\t\t)}\r\n\t\t\t</Upload>\r\n\t\t</ImgCrop>\r\n\t);\r\n});\r\n\r\nexport default ImageUpload;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport calculatePrices from '../utils/calculatePrices';\r\nimport { ExpenseItem } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport languages from 'settings/languages';\r\nimport { Col, DatePicker, Form, Input, Modal, Row } from 'antd';\r\nimport CurrencySelect from 'components/CurrencySelect';\r\nimport constants from 'settings/constants';\r\nimport dayjs from 'dayjs';\r\nimport CategorySelect from './CategorySelect';\r\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { listStore } from 'utils/listStore';\r\nimport ImageUpload from './ImageUpload';\r\nimport { convertToJpeg } from 'utils/utils';\r\n\r\ninterface Props {\r\n\topened: boolean;\r\n\tinitialItemId?: string;\r\n\ttoggleOpened: () => void;\r\n\tsubmitItem: (arg0: ExpenseItem) => void;\r\n}\r\n\r\nconst ItemModal: React.FC<Props> = observer(\r\n\t({ opened, initialItemId, toggleOpened, submitItem }) => {\r\n\t\tconst [currency, setCurrency] = useState(constants.baseCurrency);\r\n\t\tconst { currencyRates, isSmallScreen } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\t\tconst { list } = listStore;\r\n\r\n\t\tconst { language } = userOptions;\r\n\r\n\t\tconst initialItem = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\tinitialItemId !== undefined ? list[initialItemId] : constants.emptyItem,\r\n\t\t\t[list, initialItemId]\r\n\t\t);\r\n\r\n\t\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(initialItem);\r\n\r\n\t\tconst handleTitleChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\ttitle: value,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleDateChange = useCallback(\r\n\t\t\t(value: dayjs.Dayjs) => {\r\n\t\t\t\tif (value)\r\n\t\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tdate: value.valueOf(),\r\n\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleCategoryChange = useCallback(\r\n\t\t\t(id: string) => {\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\tcategoryId: id,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handlePriceChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem) => {\r\n\t\t\t\t\tconst updatedItem = {\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tprice: {\r\n\t\t\t\t\t\t\t...prevItem.price,\r\n\t\t\t\t\t\t\t[currency]: Number(value),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...updatedItem,\r\n\t\t\t\t\t\tprice: calculatePrices(updatedItem.price, currencyRates, currency),\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentItem, currency, currencyRates]\r\n\t\t);\r\n\r\n\t\tconst handleImageChange = useCallback(\r\n\t\t\t(image: string) => {\r\n\t\t\t\tconvertToJpeg(image as string, 0.5).then((image: string) => {\r\n\t\t\t\t\tsetCurrentItem((prevItem) => ({\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\timage: image,\r\n\t\t\t\t\t}));\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tconst submitItemWithEnter = (event: KeyboardEvent) => {\r\n\t\t\t\tif (event.key === 'Enter' && opened) {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\twindow.addEventListener('keyup', submitItemWithEnter);\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t};\r\n\t\t}, [currentItem, submitItem, opened]);\r\n\r\n\t\tconst TitleJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={currentItem.title}\r\n\t\t\t\tonInput={handleTitleChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst PriceJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='number'\r\n\t\t\t\tmin='1'\r\n\t\t\t\tstep='1'\r\n\t\t\t\tvalue={Math.round(currentItem.price[currency])}\r\n\t\t\t\tonInput={handlePriceChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CurrencyJSX = (\r\n\t\t\t<CurrencySelect\r\n\t\t\t\tvalue={currency}\r\n\t\t\t\tsetCurrency={setCurrency}\r\n\t\t\t\tonChange={setCurrency}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst DateJSX = (\r\n\t\t\t<DatePicker\r\n\t\t\t\trequired\r\n\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\tvalue={dayjs(currentItem.date)}\r\n\t\t\t\tminDate={constants.startDate}\r\n\t\t\t\tmaxDate={dayjs()}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CategoryJSX = (\r\n\t\t\t<CategorySelect\r\n\t\t\t\tid={currentItem.categoryId}\r\n\t\t\t\tonChange={handleCategoryChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst ImageJSX = (\r\n\t\t\t<ImageUpload\r\n\t\t\t\timage={currentItem.image}\r\n\t\t\t\tonChange={handleImageChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\topen={opened}\r\n\t\t\t\tokButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tcancelButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tonOk={() => {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t}}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetCurrentItem(initialItem);\r\n\t\t\t\t\ttoggleOpened();\r\n\t\t\t\t}}\r\n\t\t\t\tokText={<CheckOutlined />}\r\n\t\t\t\tcancelText={<CloseOutlined />}\r\n\t\t\t>\r\n\t\t\t\t<Form\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tlayout='vertical'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Form.Item label={languages.title[language]}>{TitleJSX}</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.price[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={16}>{PriceJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={7}>{CurrencyJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.dateAndCat[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={10}>{DateJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={13}>{CategoryJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.image[language]}>{ImageJSX}</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default ItemModal;\r\n","import {\r\n\tExportOutlined,\r\n\tFrownOutlined,\r\n\tInfoCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport {\r\n\tAvatar,\r\n\tButton,\r\n\tCheckbox,\r\n\tFlex,\r\n\tImage,\r\n\tStatistic,\r\n\tTag,\r\n\tTooltip,\r\n\tTypography,\r\n} from 'antd';\r\nimport Title from 'antd/es/typography/Title';\r\nimport { category, currencies, language } from 'settings/interfaces';\r\nimport languages from 'settings/languages';\r\nimport dayjs from 'dayjs';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport React, { ComponentType, RefAttributes } from 'react';\r\nimport { CheckboxChangeEvent } from 'antd/es/checkbox';\r\nimport Search from 'antd/es/input/Search';\r\nimport uniqid from 'uniqid';\r\nimport ListItem from './ListItem';\r\nimport CategoryItem from './CategoryItem';\r\nimport { AntdIconProps } from '@ant-design/icons/lib/components/AntdIcon';\r\n\r\nexport const MyInfoTooltip = (\r\n\ttitle: string | React.JSX.Element,\r\n\tisSmallScreen: boolean,\r\n\tonClick?: () => void\r\n) => (\r\n\t<Tooltip title={title}>\r\n\t\t<InfoCircleOutlined\r\n\t\t\tonClick={onClick}\r\n\t\t\tstyle={{\r\n\t\t\t\tscale: isSmallScreen ? '1' : '1.5',\r\n\t\t\t}}\r\n\t\t/>\r\n\t</Tooltip>\r\n);\r\n\r\nconst getTitleComponents = (\r\n\ttitle: string,\r\n\tisInOverlaps: boolean,\r\n\tisSmallScreen: boolean,\r\n\teditable: any\r\n): React.ReactNode => {\r\n\tif (title === ' ') return <>&nbsp;</>;\r\n\treturn isSmallScreen ? (\r\n\t\t<Typography.Text\r\n\t\t\teditable={editable}\r\n\t\t\tellipsis\r\n\t\t\tstrong\r\n\t\t\tmark={isInOverlaps}\r\n\t\t>\r\n\t\t\t{title}\r\n\t\t</Typography.Text>\r\n\t) : (\r\n\t\t<Title\r\n\t\t\teditable={editable}\r\n\t\t\tellipsis\r\n\t\t\tlevel={3}\r\n\t\t\tstyle={{ margin: 0 }}\r\n\t\t\tmark={isInOverlaps}\r\n\t\t>\r\n\t\t\t{title}\r\n\t\t</Title>\r\n\t);\r\n};\r\n\r\nexport const MyTitle = (\r\n\ttitle: string,\r\n\tisSmallScreen: boolean,\r\n\tlanguage: language,\r\n\teditable: any,\r\n\toverlaps?: number[][]\r\n) => {\r\n\tconst markedTitles: React.ReactNode[] = overlaps\r\n\t\t? title.split('').map((char, index) => {\r\n\t\t\t\tconst isInOverlaps = overlaps.some(\r\n\t\t\t\t\t([start, end]) => index >= start && index <= end\r\n\t\t\t\t);\r\n\t\t\t\treturn getTitleComponents(char, isInOverlaps, isSmallScreen, editable);\r\n\t\t  })\r\n\t\t: [\r\n\t\t\t\tgetTitleComponents(\r\n\t\t\t\t\ttitle || languages.noTitle[language],\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\teditable\r\n\t\t\t\t),\r\n\t\t  ];\r\n\r\n\treturn (\r\n\t\t<Tooltip\r\n\t\t\ttitle={title}\r\n\t\t\tkey={uniqid()}\r\n\t\t>\r\n\t\t\t<Flex\r\n\t\t\t\tjustify='center'\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\topacity: !title ? '.5' : '1',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{markedTitles}\r\n\t\t\t</Flex>\r\n\t\t</Tooltip>\r\n\t);\r\n};\r\n\r\nexport const MyImage = (\r\n\timage: string | undefined,\r\n\tisSmallScreen: boolean,\r\n\tlanguage: language,\r\n\ttoggleOpened?: () => void\r\n) =>\r\n\timage ? (\r\n\t\t<Tooltip\r\n\t\t\tcolor='#0005'\r\n\t\t\tplacement='right'\r\n\t\t\ttitle={\r\n\t\t\t\t!image.startsWith('#') && (\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborderRadius: '50%',\r\n\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Avatar\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\tbackground: image.startsWith('#') ? image : 'unset',\r\n\t\t\t\t}}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\ticon={\r\n\t\t\t\t\t<Flex\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{!image.startsWith('#') && (\r\n\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tinlineSize: '100%',\r\n\t\t\t\t\t\t\t\t\tblockSize: '100%',\r\n\t\t\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t) : (\r\n\t\t<Tooltip title={languages.noImage[language]}>\r\n\t\t\t<Avatar\r\n\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\tonClick={toggleOpened}\r\n\t\t\t\ticon={<FrownOutlined />}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n\r\nexport const MyDate = (date: number, isSmallScreen: boolean) => (\r\n\t<Statistic\r\n\t\tvalue={dayjs(date).format('DD.MM.YY')}\r\n\t\tstyle={{\r\n\t\t\tscale: isSmallScreen ? '.67' : '.75',\r\n\t\t}}\r\n\t/>\r\n);\r\n\r\nexport const MyCategory = (category: category) => (\r\n\t<Flex\r\n\t\tvertical\r\n\t\talign='stretch'\r\n\t>\r\n\t\t{category && (\r\n\t\t\t<Tag color={category.color}>\r\n\t\t\t\t<span\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmargin: 'auto',\r\n\t\t\t\t\t\tcolor: category.color,\r\n\t\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{category.name}\r\n\t\t\t\t</span>\r\n\t\t\t</Tag>\r\n\t\t)}\r\n\t</Flex>\r\n);\r\n\r\nexport const MyPrice = (\r\n\tprice: currencies,\r\n\tisSmallScreen: boolean,\r\n\tcurrency: string\r\n) => (\r\n\t<Flex justify='center'>\r\n\t\t{isSmallScreen ? (\r\n\t\t\t<Typography.Text strong>\r\n\t\t\t\t{getSymbolAndPrice(currency)}\r\n\t\t\t\t{Math.round(price[currency])}\r\n\t\t\t</Typography.Text>\r\n\t\t) : (\r\n\t\t\t<Title\r\n\t\t\t\tlevel={3}\r\n\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t>\r\n\t\t\t\t{getSymbolAndPrice(currency, price[currency])}\r\n\t\t\t</Title>\r\n\t\t)}\r\n\t</Flex>\r\n);\r\n\r\nexport const MyIconWithTooltip = (\r\n\ttitle: string,\r\n\tisSmallScreen: boolean,\r\n\tIcon: ComponentType<\r\n\t\tOmit<AntdIconProps, 'ref'> & RefAttributes<HTMLSpanElement>\r\n\t>,\r\n\tonClick?: () => void\r\n) => (\r\n\t<Tooltip title={title}>\r\n\t\t<Icon\r\n\t\t\tonClick={onClick}\r\n\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t/>\r\n\t</Tooltip>\r\n);\r\n\r\nexport const MyCheckbox = (\r\n\tselected: boolean,\r\n\tlanguage: language,\r\n\tisSmallScreen: boolean,\r\n\thandleSelection: (event: CheckboxChangeEvent) => void,\r\n\tdeleteAll: () => void,\r\n\trestoreAll?: () => void\r\n) => (\r\n\t<Tooltip\r\n\t\tcolor='#0000'\r\n\t\ttitle={\r\n\t\t\tselected ? (\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\tgap={isSmallScreen ? 4 : 8}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={deleteAll}\r\n\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{languages.deleteSelected[language]}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{restoreAll && (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={restoreAll}\r\n\t\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{languages.restoreSelected[language]}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Flex>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)\r\n\t\t}\r\n\t>\r\n\t\t<Checkbox\r\n\t\t\tonChange={handleSelection}\r\n\t\t\tchecked={selected}\r\n\t\t/>\r\n\t</Tooltip>\r\n);\r\n\r\nexport const MySearch = (\r\n\tonChange: (arg0: React.ChangeEvent<HTMLInputElement>) => void,\r\n\tvalue: string,\r\n\tloading: boolean,\r\n\tisSmallScreen: boolean\r\n) => (\r\n\t<Search\r\n\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\tallowClear\r\n\t\tonChange={onChange}\r\n\t\tvalue={value}\r\n\t\tloading={loading}\r\n\t/>\r\n);\r\n\r\nexport const MyView = (\r\n\tkey: string,\r\n\tmode: 'item' | 'category',\r\n\tisSmallScreen: boolean,\r\n\tselected: boolean\r\n) => (\r\n\t<Tooltip\r\n\t\tplacement='left'\r\n\t\tcolor='#0005'\r\n\t\ttitle={\r\n\t\t\tmode === 'item' ? (\r\n\t\t\t\t<ListItem\r\n\t\t\t\t\tdisabled\r\n\t\t\t\t\tmode='grid'\r\n\t\t\t\t\tinitialItem={{ id: key, overlaps: [] }}\r\n\t\t\t\t\thandleSelection={() => {}}\r\n\t\t\t\t\tdeleteAll={() => {}}\r\n\t\t\t\t\tselected={selected}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<CategoryItem\r\n\t\t\t\t\tinitialCategoryId={key}\r\n\t\t\t\t\tdisabled\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t}\r\n\t>\r\n\t\t<ExportOutlined style={{ scale: isSmallScreen ? '1' : '1.5' }} />\r\n\t</Tooltip>\r\n);\r\n","import React, { useState, useCallback, useMemo } from 'react';\r\nimport { ExpenseItem, ItemWithSearch, Mode } from '../settings/interfaces';\r\nimport Item from 'antd/es/list/Item';\r\nimport { Card, Col, Flex } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport ItemModal from './ItemModal';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n\tMyCategory,\r\n\tMyCheckbox,\r\n\tMyDate,\r\n\tMyIconWithTooltip,\r\n\tMyImage,\r\n\tMyInfoTooltip,\r\n\tMyPrice,\r\n\tMyTitle,\r\n} from './Items';\r\nimport { CheckboxChangeEvent } from 'antd/es/checkbox';\r\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n\tmode: Mode;\r\n\tinitialItem: ItemWithSearch;\r\n\tdeleteAll: () => void;\r\n\trestoreAll?: () => void;\r\n\thandleSelection: (event: CheckboxChangeEvent) => void;\r\n\tselected: boolean;\r\n\tdisabled?: boolean;\r\n}\r\n\r\nconst ListItem: React.FC<Props> = observer(\r\n\t({ mode, initialItem, deleteAll, handleSelection, selected, disabled }) => {\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { replaceItem, setLastDeletedItemIds, lastDeletedItemIds, list } =\r\n\t\t\tlistStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\t\tconst { categories } = categoryStore;\r\n\r\n\t\tconst { currency, language } = userOptions;\r\n\r\n\t\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\t\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(\r\n\t\t\tlist[initialItem.id]\r\n\t\t);\r\n\r\n\t\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t\t}, [setIsModalOpened]);\r\n\r\n\t\tconst updateCurrentItem = useCallback(\r\n\t\t\t(item: ExpenseItem) => {\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => {\r\n\t\t\t\t\tif (JSON.stringify(prevItem) !== JSON.stringify(item)) {\r\n\t\t\t\t\t\tconst newItem: ExpenseItem = {\r\n\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\tupdatedAt: dayjs().valueOf(),\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\treplaceItem(initialItem.id, newItem);\r\n\t\t\t\t\t\treturn newItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn prevItem;\r\n\t\t\t\t});\r\n\t\t\t\ttoggleIsModalOpened();\r\n\t\t\t},\r\n\t\t\t[setCurrentItem, replaceItem, toggleIsModalOpened, initialItem.id]\r\n\t\t);\r\n\r\n\t\tconst deleteItem = useCallback(() => {\r\n\t\t\tsetLastDeletedItemIds([...lastDeletedItemIds, initialItem.id]);\r\n\t\t}, [setLastDeletedItemIds, initialItem.id, lastDeletedItemIds]);\r\n\r\n\t\tconst ActionsJSX = (\r\n\t\t\t<Flex justify='space-evenly'>\r\n\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\tlanguages.edit[language],\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\tEditOutlined,\r\n\t\t\t\t\ttoggleIsModalOpened\r\n\t\t\t\t)}\r\n\t\t\t\t{MyPrice(currentItem.price, isSmallScreen, currency)}\r\n\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\tlanguages.delete[language],\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\tDeleteOutlined,\r\n\t\t\t\t\tdeleteItem\r\n\t\t\t\t)}\r\n\t\t\t</Flex>\r\n\t\t);\r\n\r\n\t\tconst ImageAndDateJSX = (\r\n\t\t\t<Flex align='center'>\r\n\t\t\t\t{MyImage(\r\n\t\t\t\t\tcurrentItem.image,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\tlanguage,\r\n\t\t\t\t\ttoggleIsModalOpened\r\n\t\t\t\t)}\r\n\t\t\t\t{MyDate(currentItem.date, isSmallScreen)}\r\n\t\t\t</Flex>\r\n\t\t);\r\n\r\n\t\tconst tooltipTitle = useMemo(() => {\r\n\t\t\tif (!currentItem.updatedAt) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{`${languages.createdAt[language]} ${dayjs(\r\n\t\t\t\t\t\t\tcurrentItem.createdAt\r\n\t\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{`${languages.createdAt[language]} ${dayjs(\r\n\t\t\t\t\t\t\tcurrentItem.createdAt\r\n\t\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t{`${languages.updatedAt[language]} ${dayjs(\r\n\t\t\t\t\t\t\tcurrentItem.updatedAt\r\n\t\t\t\t\t\t).format('HH:mm:ss DD.MM.YY')}`}\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}, [currentItem, language]);\r\n\r\n\t\tconst CheckboxAndTitle = (\r\n\t\t\t<Flex>\r\n\t\t\t\t{MyCheckbox(\r\n\t\t\t\t\tselected,\r\n\t\t\t\t\tlanguage,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\thandleSelection,\r\n\t\t\t\t\tdeleteAll\r\n\t\t\t\t)}\r\n\t\t\t\t{MyTitle(\r\n\t\t\t\t\tcurrentItem.title,\r\n\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\tlanguage,\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\tinitialItem.overlaps\r\n\t\t\t\t)}\r\n\t\t\t</Flex>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<ItemModal\r\n\t\t\t\t\topened={isModalOpened}\r\n\t\t\t\t\tinitialItemId={initialItem.id}\r\n\t\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\t\tsubmitItem={updateCurrentItem}\r\n\t\t\t\t/>\r\n\t\t\t\t{mode === 'list' ? (\r\n\t\t\t\t\t<Item style={{ pointerEvents: disabled ? 'none' : 'auto' }}>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyCheckbox(\r\n\t\t\t\t\t\t\t\tselected,\r\n\t\t\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\thandleSelection,\r\n\t\t\t\t\t\t\t\tdeleteAll\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>{ImageAndDateJSX}</Col>\r\n\t\t\t\t\t\t<Col span={8}>\r\n\t\t\t\t\t\t\t{MyTitle(\r\n\t\t\t\t\t\t\t\tcurrentItem.title,\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\t\tinitialItem.overlaps\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={3}>{MyCategory(categories[currentItem.categoryId])}</Col>\r\n\t\t\t\t\t\t<Col span={5}>\r\n\t\t\t\t\t\t\t{MyPrice(currentItem.price, isSmallScreen, currency)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\tlanguages.edit[language],\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tEditOutlined,\r\n\t\t\t\t\t\t\t\ttoggleIsModalOpened\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>\r\n\t\t\t\t\t\t\t{MyIconWithTooltip(\r\n\t\t\t\t\t\t\t\tlanguages.delete[language],\r\n\t\t\t\t\t\t\t\tisSmallScreen,\r\n\t\t\t\t\t\t\t\tDeleteOutlined,\r\n\t\t\t\t\t\t\t\tdeleteItem\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={1}>{MyInfoTooltip(tooltipTitle, isSmallScreen)}</Col>\r\n\t\t\t\t\t</Item>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\textra={[MyInfoTooltip(tooltipTitle, isSmallScreen)]}\r\n\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\t\tbordered\r\n\t\t\t\t\t\ttitle={CheckboxAndTitle}\r\n\t\t\t\t\t\tactions={[ActionsJSX]}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tinlineSize: isSmallScreen ? '9em' : '12em',\r\n\t\t\t\t\t\t\tpointerEvents: disabled ? 'none' : 'auto',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Flex justify='center'>\r\n\t\t\t\t\t\t\t<Flex\r\n\t\t\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\t\t\talign='stretch'\r\n\t\t\t\t\t\t\t\tgap={4}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{ImageAndDateJSX}\r\n\t\t\t\t\t\t\t\t{MyCategory(categories[currentItem.categoryId])}\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default ListItem;\r\n"],"names":["ItemsModal","observer","_ref","opened","setOpened","itemIds","list","replaceItem","listStore","isSmallScreen","userStore","userOptions","optionsStore","language","deleteCategoryFromItem","useCallback","key","categoryId","constants","emptyItem","_jsx","Modal","open","onCancel","okButtonProps","style","display","cancelButtonProps","children","Scrollbars","autoHide","blockSize","List","map","_jsxs","Item","Col","span","Statistic","value","dayjs","date","format","scale","Flex","justify","opacity","title","Typography","Text","strong","ellipsis","languages","noTitle","Title","level","margin","MyIconWithTooltip","delete","DeleteOutlined","memo","initialCategoryId","category","disabled","replaceCategory","categories","setLastDeletedCategoryIds","lastDeletedCategoryIds","categoryStore","currentCategory","setCurrentCategory","useState","isModalOpened","setIsModalOpened","itemsWithCurrentCategory","useMemo","Object","keys","reduce","acc","deleteCategory","updateCurrentCategory","prevCategory","JSON","stringify","handleNameChange","newCategory","name","handleColorChange","color","concat","toHex","ColorPickerJSX","Tooltip","pickColor","ColorPicker","size","onChangeComplete","tooltipTitle","length","ActionsJSX","align","MyInfoTooltip","_Fragment","Card","inlineSize","pointerEvents","MyTitle","onChange","actions","styles","padding","body","id","Select","minInlineSize","suffixIcon","EditFilled","options","filter","deleted","label","image","loading","setLoading","handleChange","info","file","status","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","originFileObj","url","ImgCrop","cropShape","rotationSlider","Upload","action","accept","listType","showUploadList","maxCount","Image","preview","src","width","borderRadius","LoadingOutlined","PlusOutlined","initialItemId","toggleOpened","submitItem","currency","setCurrency","baseCurrency","currencyRates","initialItem","undefined","currentItem","setCurrentItem","handleTitleChange","event","target","prevItem","handleDateChange","valueOf","handleCategoryChange","handlePriceChange","updatedItem","price","Number","calculatePrices","handleImageChange","convertToJpeg","then","useEffect","submitItemWithEnter","window","removeEventListener","TitleJSX","Input","required","type","onInput","PriceJSX","min","step","Math","round","CurrencyJSX","CurrencySelect","DateJSX","DatePicker","minDate","startDate","maxDate","CategoryJSX","CategorySelect","ImageJSX","ImageUpload","onOk","okText","CheckOutlined","cancelText","CloseOutlined","Form","layout","Row","dateAndCat","onClick","InfoCircleOutlined","getTitleComponents","isInOverlaps","editable","mark","overlaps","markedTitles","split","char","index","some","start","end","uniqid","MyImage","placement","startsWith","objectFit","Avatar","cursor","background","icon","noImage","FrownOutlined","MyDate","MyCategory","vertical","Tag","MyPrice","getSymbolAndPrice","Icon","MyCheckbox","selected","handleSelection","deleteAll","restoreAll","gap","Button","deleteSelected","restoreSelected","Checkbox","checked","MySearch","Search","allowClear","MyView","mode","ListItem","CategoryItem","ExportOutlined","setLastDeletedItemIds","lastDeletedItemIds","toggleIsModalOpened","prevValue","updateCurrentItem","item","newItem","updatedAt","deleteItem","edit","EditOutlined","ImageAndDateJSX","createdAt","CheckboxAndTitle","ItemModal","extra","bordered"],"sourceRoot":""}