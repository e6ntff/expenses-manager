{"version":3,"file":"static/js/196.31d73359.chunk.js","mappings":"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","sources":["components/ResetButton.tsx","components/SliderDiagram.tsx","components/YearSlider.tsx","hooks/useDebounce.ts","components/ItemList.tsx","components/NewItemButton.tsx","components/CategoriesSelect.tsx","components/SortSelect.tsx","components/ModeSelect.tsx","components/Selectors.tsx","pages/Expenses.tsx"],"sourcesContent":["import { ReloadOutlined } from '@ant-design/icons';\r\nimport { Button, Tooltip } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tdisabled?: boolean;\r\n\treset: () => void;\r\n}\r\n\r\nconst ResetButton: React.FC<Props> = observer(({ disabled, reset }) => {\r\n\tconst { userOptions } = optionsStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.reset[userOptions.language]}>\r\n\t\t\t<Button\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t\tonClick={reset}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<ReloadOutlined />\r\n\t\t\t</Button>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default ResetButton;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { memo, useMemo } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { getValuesByMonth } from 'utils/transformData';\r\n\r\nconst SliderDiagram: React.FC = observer(() => {\r\n\tconst { list } = listStore;\r\n\tconst { defaultRange } = optionsStore;\r\n\r\n\tconst valuesByMonth: number[] | { [key: string]: number } = useMemo(\r\n\t\t() => getValuesByMonth(list, defaultRange),\r\n\t\t[list, defaultRange]\r\n\t);\r\n\r\n\tconst data = {\r\n\t\tlabels: new Array(valuesByMonth.length).fill(''),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tdata: valuesByMonth,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tx: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\ty: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\telements: {\r\n\t\t\tpoint: {\r\n\t\t\t\tradius: 0,\r\n\t\t\t},\r\n\t\t\tline: {\r\n\t\t\t\tcubicInterpolationMode: 'monotone' as 'monotone',\r\n\t\t\t\tborderColor: '#7775',\r\n\t\t\t},\r\n\t\t},\r\n\t\taspectRatio: 25,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Line\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\tdata={data}\r\n\t\t\toptions={options}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default memo(SliderDiagram);\r\n","import React, { memo, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Slider, Tooltip as TooltipAntd } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport { ExpenseItem } from 'settings/interfaces';\r\nimport dayjs from 'dayjs';\r\nimport minMax from 'dayjs/plugin/minMax';\r\nimport { ZoomInOutlined, ZoomOutOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport {\r\n\tChart,\r\n\tTooltip,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tLineElement,\r\n\tLineController,\r\n\tPointElement,\r\n} from 'chart.js';\r\nimport SliderDiagram from './SliderDiagram';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\nChart.register(\r\n\tTooltip,\r\n\tLineElement,\r\n\tLineController,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tPointElement\r\n);\r\n\r\ndayjs.extend(minMax);\r\n\r\ninterface Props {\r\n\trange: number[];\r\n\tsetRange: (arg0: number[]) => void;\r\n\tisAccurate: boolean;\r\n\tsetIsAccurate: (arg0: boolean) => void;\r\n}\r\n\r\nconst YearSlider: React.FC<Props> = observer(\r\n\t({ range, setRange, isAccurate, setIsAccurate }) => {\r\n\t\tconst { list, listTemplate } = listStore;\r\n\t\tconst { isSmallScreen, isTourStarted } = userStore;\r\n\t\tconst { defaultRange, setDefaultRange, userOptions } = optionsStore;\r\n\r\n\t\tconst [value, setValue] = useState(defaultRange);\r\n\r\n\t\tconst sliderRange: [number, number] = useMemo(() => {\r\n\t\t\tconst dates = Object.values(isTourStarted ? listTemplate : list).map(\r\n\t\t\t\t(item: ExpenseItem) => item.date\r\n\t\t\t);\r\n\t\t\treturn [Math.min(...dates), Math.max(...dates)];\r\n\t\t}, [list, isTourStarted, listTemplate]);\r\n\r\n\t\tconst marks: { [key: number]: string } = useMemo(() => {\r\n\t\t\tconst start = dayjs(sliderRange[0]).startOf('day');\r\n\t\t\tconst end = dayjs(sliderRange[1]).endOf('day');\r\n\t\t\tconst marks: { [key: number]: string } = {};\r\n\t\t\tlet currentDate = start;\r\n\t\t\tif (isAccurate) {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'day')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.date() === 1\r\n\t\t\t\t\t\t\t? currentDate.month() === 0\r\n\t\t\t\t\t\t\t\t? currentDate.format('YYYY')\r\n\t\t\t\t\t\t\t\t: currentDate.format('M')\r\n\t\t\t\t\t\t\t: ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'day').startOf('day');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'month')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.month() === 0 ? currentDate.format('YYYY') : ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'month').startOf('month');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn marks;\r\n\t\t}, [sliderRange, isAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetDefaultRange(sliderRange);\r\n\t\t}, [sliderRange, setDefaultRange]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetRange(defaultRange);\r\n\t\t}, [defaultRange, setRange]);\r\n\r\n\t\tconst handleRangeChanging = useCallback(\r\n\t\t\t(values: number[]) => {\r\n\t\t\t\tsetRange(values);\r\n\t\t\t},\r\n\t\t\t[setRange]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetValue(range);\r\n\t\t}, [range]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tisSmallScreen && setIsAccurate(false);\r\n\t\t}, [isSmallScreen, setIsAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\t!isAccurate &&\r\n\t\t\t\tsetRange([\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.max([\r\n\t\t\t\t\t\t\tdayjs(range[0]).startOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[0]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.min([\r\n\t\t\t\t\t\t\tdayjs(range[1]).endOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[1]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t]);\r\n\t\t\t// eslint-disable-next-line\r\n\t\t}, [isAccurate]);\r\n\r\n\t\treturn dayjs(defaultRange[1]).diff(dayjs(defaultRange[0]), 'hours') >=\r\n\t\t\t48 ? (\r\n\t\t\t<Flex\r\n\t\t\t\tgap={16}\r\n\t\t\t\talign='center'\r\n\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t>\r\n\t\t\t\t<Segmented\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tdefaultValue={isAccurate}\r\n\t\t\t\t\tvalue={isAccurate}\r\n\t\t\t\t\tonChange={setIsAccurate}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t\t<TooltipAntd title={languages.byMonth[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t\t<ZoomOutOutlined />\r\n\t\t\t\t\t\t\t\t</TooltipAntd>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tvalue: false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t\t<TooltipAntd title={languages.byDay[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t\t<ZoomInOutlined />\r\n\t\t\t\t\t\t\t\t</TooltipAntd>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t\tdisabled: isSmallScreen,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\talign='stretch'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<SliderDiagram />\r\n\t\t\t\t\t<Slider\r\n\t\t\t\t\t\trange\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tmarks={marks}\r\n\t\t\t\t\t\tstep={null}\r\n\t\t\t\t\t\tdots={true}\r\n\t\t\t\t\t\ttooltip={{\r\n\t\t\t\t\t\t\tformatter: (value: number | undefined) => (\r\n\t\t\t\t\t\t\t\t<>{dayjs(value).format(isAccurate ? 'DD.MM.YY' : 'MM.YY')}</>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tmin={sliderRange[0]}\r\n\t\t\t\t\t\tmax={sliderRange[1]}\r\n\t\t\t\t\t\tdefaultValue={defaultRange}\r\n\t\t\t\t\t\tonChange={setValue}\r\n\t\t\t\t\t\tonChangeComplete={handleRangeChanging}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Flex>\r\n\t\t) : (\r\n\t\t\t<></>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default memo(YearSlider);\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useDebounce = (value: any, delay: number = 250) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const timerId = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce\r\n","import React, { memo, useMemo } from 'react';\r\nimport ListItem from './ListItem';\r\nimport { ListOptions } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Empty, List, Space } from 'antd';\r\nimport { getListToShowOnCurrentPageIds } from 'utils/transformData';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport LargeSpin from './LargeSpin';\r\nimport { listStore } from 'utils/listStore';\r\nimport Templates from './Templates';\r\n\r\ninterface Props {\r\n\tfilteredListIds: string[];\r\n}\r\n\r\nconst ItemList: React.FC<Props> = observer(({ filteredListIds }) => {\r\n\tconst { loading, isSmallScreen, isTourStarted } = userStore;\r\n\tconst { listOptions } = optionsStore;\r\n\tconst { lastDeletedItemIds } = listStore;\r\n\r\n\tconst debouncedOptions: ListOptions = useDebounce(listOptions);\r\n\r\n\tconst listToShowOnCurrentPageIds = useMemo(\r\n\t\t() =>\r\n\t\t\tgetListToShowOnCurrentPageIds(debouncedOptions, filteredListIds).filter(\r\n\t\t\t\t(key: string) => !lastDeletedItemIds.includes(key)\r\n\t\t\t),\r\n\t\t[filteredListIds, debouncedOptions, lastDeletedItemIds]\r\n\t);\r\n\r\n\treturn !isTourStarted ? (\r\n\t\t<>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<LargeSpin />\r\n\t\t\t) : !filteredListIds.length ? (\r\n\t\t\t\t<Empty\r\n\t\t\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\t\t\tdescription={''}\r\n\t\t\t\t/>\r\n\t\t\t) : debouncedOptions.mode === 'list' ? (\r\n\t\t\t\t<List style={{ inlineSize: '100%' }}>\r\n\t\t\t\t\t{listToShowOnCurrentPageIds.map((key: string) => (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\tmode={debouncedOptions.mode}\r\n\t\t\t\t\t\t\tinitialItemId={key}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</List>\r\n\t\t\t) : (\r\n\t\t\t\t<Space\r\n\t\t\t\t\twrap\r\n\t\t\t\t\tsize={isSmallScreen ? 8 : 16}\r\n\t\t\t\t>\r\n\t\t\t\t\t{listToShowOnCurrentPageIds.map((key: string) => (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\tmode={debouncedOptions.mode}\r\n\t\t\t\t\t\t\tinitialItemId={key}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Space>\r\n\t\t\t)}\r\n\t\t</>\r\n\t) : (\r\n\t\t<Templates\r\n\t\t\tlist='item'\r\n\t\t\tmode={debouncedOptions.mode}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default memo(ItemList);\r\n","import React, { useCallback, useState } from 'react';\r\nimport { ExpenseItem } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button, Tooltip } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport ItemModal from './ItemModal';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport dayjs from 'dayjs';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst NewItemButton: React.FC = observer(() => {\r\n\tconst { addItem } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { userOptions } = optionsStore;\r\n\r\n\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\r\n\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t}, [setIsModalOpened]);\r\n\r\n\tconst addNewItem = useCallback(\r\n\t\t(item: ExpenseItem) => {\r\n\t\t\tconst date = dayjs().valueOf();\r\n\t\t\taddItem({ ...item, createdAt: date });\r\n\t\t\ttoggleIsModalOpened();\r\n\t\t},\r\n\t\t[addItem, toggleIsModalOpened]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.newItem[userOptions.language]}>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={toggleIsModalOpened}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<PlusOutlined />\r\n\t\t\t</Button>\r\n\t\t\t<ItemModal\r\n\t\t\t\topened={isModalOpened}\r\n\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\tsubmitItem={addNewItem}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default NewItemButton;\r\n","import React from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select, Tag, Tooltip } from 'antd';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst tagRender = (props: any, categories: { [key: number]: category }) => {\r\n\tconst { label, value, onClose } = props;\r\n\tconst onPreventMouseDown = (event: any) => {\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\t};\r\n\tconst color =\r\n\t\tObject.keys(categories).length > 1 ? categories[value].color : '';\r\n\r\n\treturn (\r\n\t\t<Tag\r\n\t\t\tcolor={color}\r\n\t\t\tonMouseDown={onPreventMouseDown}\r\n\t\t\tclosable={true}\r\n\t\t\tonClose={onClose}\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginInlineEnd: 4,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<span\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcolor: color,\r\n\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{label}\r\n\t\t\t</span>\r\n\t\t</Tag>\r\n\t);\r\n};\r\n\r\nconst CategoriesSelect: React.FC = observer(() => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleCategoriesToFilterChange, userOptions } =\r\n\t\toptionsStore;\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.categoriesSelect[userOptions.language]}>\r\n\t\t\t<Select\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tmode='multiple'\r\n\t\t\t\tshowSearch={false}\r\n\t\t\t\ttagRender={(props) => tagRender(props, categories)}\r\n\t\t\t\tstyle={{ minInlineSize: '10em' }}\r\n\t\t\t\tvalue={listOptions.categoriesToFilterIds}\r\n\t\t\t\tonChange={handleCategoriesToFilterChange}\r\n\t\t\t\toptions={Object.keys(categories).map((key: string) => ({\r\n\t\t\t\t\tlabel: categories[key].name,\r\n\t\t\t\t\tvalue: key,\r\n\t\t\t\t}))}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default CategoriesSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Tooltip } from 'antd';\r\nimport {\r\n\tCalendarOutlined,\r\n\tDollarOutlined,\r\n\tFontColorsOutlined,\r\n\tSortAscendingOutlined,\r\n\tSortDescendingOutlined,\r\n} from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst SortSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst {\r\n\t\tsetIsSortingReversed,\r\n\t\tlistOptions,\r\n\t\tuserOptions,\r\n\t\thandleSortAlgorithmChanging,\r\n\t} = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t<Tooltip title={languages.sort.reverse[userOptions.language]}>\r\n\t\t\t\t{listOptions.isSortingReversed ? (\r\n\t\t\t\t\t<SortDescendingOutlined\r\n\t\t\t\t\t\tonClick={() => setIsSortingReversed(!listOptions.isSortingReversed)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<SortAscendingOutlined\r\n\t\t\t\t\t\tonClick={() => setIsSortingReversed(!listOptions.isSortingReversed)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Tooltip>\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.sortingAlgorithm}\r\n\t\t\t\tonChange={handleSortAlgorithmChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byDate[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'date',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byTitle[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<FontColorsOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'title',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byPrice[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<DollarOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'price',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default SortSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Tooltip } from 'antd';\r\nimport { MenuOutlined, TableOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst ModeSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleModeChanging, userOptions } = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.mode}\r\n\t\t\t\tonChange={handleModeChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.layout.list[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<MenuOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'list',\r\n\t\t\t\t\t\tdisabled: isSmallScreen,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.layout.grid[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<TableOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'grid',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default ModeSelect;\r\n","import { Divider, Flex, Pagination } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { memo, useMemo } from 'react';\r\nimport NewItemButton from './NewItemButton';\r\nimport YearSlider from './YearSlider';\r\nimport CategoriesSelect from './CategoriesSelect';\r\nimport SortSelect from './SortSelect';\r\nimport ModeSelect from './ModeSelect';\r\nimport constants from 'settings/constants';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport ResetButton from './ResetButton';\r\n\r\ninterface Props {\r\n\ttotal: number;\r\n}\r\n\r\nconst Selectors: React.FC<Props> = observer(({ total }) => {\r\n\tconst { isSmallScreen, loading, tourRefs } = userStore;\r\n\tconst {\r\n\t\tlistOptions,\r\n\t\tdefaultRange,\r\n\t\tresetListOptions: resetSettings,\r\n\t\thandlePageChanging,\r\n\t\tsetRange,\r\n\t\tsetIsAccurate,\r\n\t} = optionsStore;\r\n\r\n\tconst {\r\n\t\tisSortingReversed,\r\n\t\trange,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t\tcurrentPage,\r\n\t\tsortingAlgorithm,\r\n\t\tisAccurate,\r\n\t} = listOptions;\r\n\r\n\tconst isSettingsChanged = useMemo(\r\n\t\t() =>\r\n\t\t\tisSortingReversed ||\r\n\t\t\tcategoriesToFilterIds.length > 0 ||\r\n\t\t\tpageSize !== constants.defaultPageSize ||\r\n\t\t\tcurrentPage !== 1 ||\r\n\t\t\t(range[0] &&\r\n\t\t\t\trange[1] &&\r\n\t\t\t\t(range[0] !== defaultRange[0] || range[1]) !== defaultRange[1]) ||\r\n\t\t\tsortingAlgorithm !== 'date',\r\n\t\t[\r\n\t\t\trange,\r\n\t\t\tdefaultRange,\r\n\t\t\tisSortingReversed,\r\n\t\t\tcategoriesToFilterIds,\r\n\t\t\tpageSize,\r\n\t\t\tcurrentPage,\r\n\t\t\tsortingAlgorithm,\r\n\t\t]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tref={tourRefs[2]}\r\n\t\t\tvertical\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t>\r\n\t\t\t<Flex\r\n\t\t\t\tvertical\r\n\t\t\t\tgap={32}\r\n\t\t\t>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tgap={16}\r\n\t\t\t\t\tvertical={isSmallScreen}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t\t<NewItemButton />\r\n\t\t\t\t\t\t<CategoriesSelect />\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t\t<SortSelect />\r\n\t\t\t\t\t\t<ModeSelect />\r\n\t\t\t\t\t\t<ResetButton\r\n\t\t\t\t\t\t\tdisabled={!isSettingsChanged}\r\n\t\t\t\t\t\t\treset={resetSettings}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<YearSlider\r\n\t\t\t\t\tsetIsAccurate={setIsAccurate}\r\n\t\t\t\t\tisAccurate={isAccurate}\r\n\t\t\t\t\trange={range}\r\n\t\t\t\t\tsetRange={setRange}\r\n\t\t\t\t/>\r\n\t\t\t</Flex>\r\n\t\t\t<Divider />\r\n\t\t\t{!loading && (\r\n\t\t\t\t<Pagination\r\n\t\t\t\t\tstyle={{ alignSelf: 'center' }}\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\tshowSizeChanger\r\n\t\t\t\t\tpageSizeOptions={constants.pageSizeOptions}\r\n\t\t\t\t\tcurrent={listOptions.currentPage}\r\n\t\t\t\t\tpageSize={listOptions.pageSize}\r\n\t\t\t\t\ttotal={total}\r\n\t\t\t\t\tonChange={handlePageChanging}\r\n\t\t\t\t\tonShowSizeChange={handlePageChanging}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default memo(Selectors);\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport ItemList from '../components/ItemList';\r\nimport { Flex } from 'antd';\r\nimport Selectors from 'components/Selectors';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { getFilteredListIds } from 'utils/transformData';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst Expenses: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { listOptions, userOptions, handleModeChanging, handlePageChanging } =\r\n\t\toptionsStore;\r\n\r\n\tconst { language } = userOptions;\r\n\r\n\tconst {\r\n\t\trange,\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t} = listOptions;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isSmallScreen) {\r\n\t\t\thandleModeChanging('grid');\r\n\t\t}\r\n\t}, [isSmallScreen, handleModeChanging]);\r\n\r\n\tuseEffect(() => {\r\n\t\thandlePageChanging(1, pageSize);\r\n\t}, [\r\n\t\trange,\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t\thandlePageChanging,\r\n\t]);\r\n\t\r\n\tconst filteredListIds = useMemo(\r\n\t\t() => getFilteredListIds(listOptions, list, language),\r\n\t\t[list, language, listOptions]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t\talign='center'\r\n\t\t>\r\n\t\t\t<Selectors total={filteredListIds.length} />\r\n\t\t\t<ItemList filteredListIds={filteredListIds} />\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default Expenses;\r\n"],"names":["observer","_ref","disabled","reset","userOptions","optionsStore","isSmallScreen","userStore","_jsx","Tooltip","title","languages","language","children","Button","onClick","size","ReloadOutlined","SliderDiagram","list","listStore","defaultRange","valuesByMonth","useMemo","getValuesByMonth","data","labels","Array","length","fill","datasets","Line","style","inlineSize","options","plugins","legend","display","tooltip","enabled","scales","x","grid","y","elements","point","radius","line","cubicInterpolationMode","borderColor","aspectRatio","memo","Chart","register","LineElement","LineController","CategoryScale","LinearScale","PointElement","dayjs","minMax","YearSlider","range","setRange","isAccurate","setIsAccurate","listTemplate","isTourStarted","setDefaultRange","value","setValue","useState","sliderRange","dates","Object","values","map","item","date","Math","min","max","marks","start","startOf","end","endOf","currentDate","isBefore","isSame","valueOf","month","format","add","useEffect","handleRangeChanging","useCallback","diff","_jsxs","Flex","gap","align","Segmented","defaultValue","onChange","label","TooltipAntd","byMonth","ZoomOutOutlined","byDay","ZoomInOutlined","vertical","Slider","step","dots","formatter","_Fragment","onChangeComplete","delay","arguments","undefined","debouncedValue","setDebouncedValue","timerId","setTimeout","clearTimeout","ItemList","filteredListIds","loading","listOptions","lastDeletedItemIds","debouncedOptions","useDebounce","listToShowOnCurrentPageIds","getListToShowOnCurrentPageIds","filter","key","includes","Templates","mode","LargeSpin","List","ListItem","initialItemId","Space","wrap","Empty","image","PRESENTED_IMAGE_SIMPLE","description","addItem","isModalOpened","setIsModalOpened","toggleIsModalOpened","prevValue","addNewItem","createdAt","newItem","PlusOutlined","ItemModal","opened","toggleOpened","submitItem","categories","categoryStore","handleCategoriesToFilterChange","categoriesSelect","Select","showSearch","tagRender","props","onClose","color","keys","Tag","onMouseDown","event","preventDefault","stopPropagation","closable","marginInlineEnd","minInlineSize","categoriesToFilterIds","name","setIsSortingReversed","handleSortAlgorithmChanging","alignSelf","sort","reverse","isSortingReversed","SortDescendingOutlined","SortAscendingOutlined","sortingAlgorithm","byDate","CalendarOutlined","byTitle","FontColorsOutlined","byPrice","DollarOutlined","handleModeChanging","layout","MenuOutlined","TableOutlined","Selectors","total","tourRefs","resetListOptions","resetSettings","handlePageChanging","pageSize","currentPage","isSettingsChanged","constants","defaultPageSize","ref","NewItemButton","CategoriesSelect","SortSelect","ModeSelect","ResetButton","Divider","Pagination","showSizeChanger","pageSizeOptions","current","onShowSizeChange","Expenses","getFilteredListIds"],"sourceRoot":""}