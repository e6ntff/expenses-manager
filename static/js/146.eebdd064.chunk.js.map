{"version":3,"file":"static/js/146.eebdd064.chunk.js","mappings":"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","sources":["components/ResetButton.tsx","components/SliderDiagram.tsx","components/YearSlider.tsx","components/ItemList.tsx","components/NewItemButton.tsx","components/CategoriesSelect.tsx","components/SortSelect.tsx","components/ModeSelect.tsx","components/Selectors.tsx","pages/Expenses.tsx"],"sourcesContent":["import { ReloadOutlined } from '@ant-design/icons';\r\nimport { Button, Tooltip } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tdisabled?: boolean;\r\n\treset: () => void;\r\n}\r\n\r\nconst ResetButton: React.FC<Props> = observer(({ disabled, reset }) => {\r\n\tconst { userOptions } = optionsStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.reset[userOptions.language]}>\r\n\t\t\t<Button\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t\tonClick={reset}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<ReloadOutlined />\r\n\t\t\t</Button>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default ResetButton;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { memo, useMemo } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { getValuesByMonth } from 'utils/transformData';\r\n\r\nconst SliderDiagram: React.FC = observer(() => {\r\n\tconst { list } = listStore;\r\n\tconst { defaultRange } = optionsStore;\r\n\r\n\tconst valuesByMonth: number[] | { [key: string]: number } = useMemo(\r\n\t\t() => getValuesByMonth(list, defaultRange),\r\n\t\t[list, defaultRange]\r\n\t);\r\n\r\n\tconst data = {\r\n\t\tlabels: new Array(valuesByMonth.length).fill(''),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tdata: valuesByMonth,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tx: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\ty: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\telements: {\r\n\t\t\tpoint: {\r\n\t\t\t\tradius: 0,\r\n\t\t\t},\r\n\t\t\tline: {\r\n\t\t\t\tcubicInterpolationMode: 'monotone' as 'monotone',\r\n\t\t\t\tborderColor: '#7775',\r\n\t\t\t},\r\n\t\t},\r\n\t\taspectRatio: 25,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Line\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\tdata={data}\r\n\t\t\toptions={options}\r\n\t\t/>\r\n\t);\r\n});\r\n\r\nexport default memo(SliderDiagram);\r\n","import React, { memo, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Slider, Tooltip as TooltipAntd } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport { ExpenseItem } from 'settings/interfaces';\r\nimport dayjs from 'dayjs';\r\nimport minMax from 'dayjs/plugin/minMax';\r\nimport { ZoomInOutlined, ZoomOutOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport {\r\n\tChart,\r\n\tTooltip,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tLineElement,\r\n\tLineController,\r\n\tPointElement,\r\n} from 'chart.js';\r\nimport SliderDiagram from './SliderDiagram';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\nChart.register(\r\n\tTooltip,\r\n\tLineElement,\r\n\tLineController,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tPointElement\r\n);\r\n\r\ndayjs.extend(minMax);\r\n\r\ninterface Props {\r\n\trange: number[];\r\n\tsetRange: (arg0: number[]) => void;\r\n\tisAccurate: boolean;\r\n\tsetIsAccurate: (arg0: boolean) => void;\r\n}\r\n\r\nconst YearSlider: React.FC<Props> = observer(\r\n\t({ range, setRange, isAccurate, setIsAccurate }) => {\r\n\t\tconst { list } = listStore;\r\n\t\tconst { isSmallScreen } = userStore;\r\n\t\tconst { defaultRange, setDefaultRange, userOptions } = optionsStore;\r\n\r\n\t\tconst [value, setValue] = useState(defaultRange);\r\n\r\n\t\tconst sliderRange: [number, number] = useMemo(() => {\r\n\t\t\tconst dates = Object.values(list).map((item: ExpenseItem) => item.date);\r\n\t\t\treturn [Math.min(...dates), Math.max(...dates)];\r\n\t\t}, [list]);\r\n\r\n\t\tconst marks: { [key: number]: string } = useMemo(() => {\r\n\t\t\tconst start = dayjs(sliderRange[0]).startOf('day');\r\n\t\t\tconst end = dayjs(sliderRange[1]).endOf('day');\r\n\t\t\tconst marks: { [key: number]: string } = {};\r\n\t\t\tlet currentDate = start;\r\n\t\t\tif (isAccurate) {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'day')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.date() === 1\r\n\t\t\t\t\t\t\t? currentDate.month() === 0\r\n\t\t\t\t\t\t\t\t? currentDate.format('YYYY')\r\n\t\t\t\t\t\t\t\t: currentDate.format('M')\r\n\t\t\t\t\t\t\t: ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'day').startOf('day');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'month')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.month() === 0 ? currentDate.format('YYYY') : ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'month').startOf('month');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn marks;\r\n\t\t}, [sliderRange, isAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetDefaultRange(sliderRange);\r\n\t\t}, [sliderRange, setDefaultRange]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetRange(defaultRange);\r\n\t\t}, [defaultRange, setRange]);\r\n\r\n\t\tconst handleRangeChanging = useCallback(\r\n\t\t\t(values: number[]) => {\r\n\t\t\t\tsetRange(values);\r\n\t\t\t},\r\n\t\t\t[setRange]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetValue(range);\r\n\t\t}, [range]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tisSmallScreen && setIsAccurate(false);\r\n\t\t}, [isSmallScreen, setIsAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\t!isAccurate &&\r\n\t\t\t\tsetRange([\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.max([\r\n\t\t\t\t\t\t\tdayjs(range[0]).startOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[0]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.min([\r\n\t\t\t\t\t\t\tdayjs(range[1]).endOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[1]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t]);\r\n\t\t\t// eslint-disable-next-line\r\n\t\t}, [isAccurate]);\r\n\r\n\t\treturn dayjs(defaultRange[1]).diff(dayjs(defaultRange[0]), 'hours') >=\r\n\t\t\t48 ? (\r\n\t\t\t<Flex\r\n\t\t\t\tgap={16}\r\n\t\t\t\talign='center'\r\n\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t>\r\n\t\t\t\t<Segmented\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tdefaultValue={isAccurate}\r\n\t\t\t\t\tvalue={isAccurate}\r\n\t\t\t\t\tonChange={setIsAccurate}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t\t<TooltipAntd title={languages.byMonth[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t\t<ZoomOutOutlined />\r\n\t\t\t\t\t\t\t\t</TooltipAntd>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tvalue: false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t\t<TooltipAntd title={languages.byDay[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t\t<ZoomInOutlined />\r\n\t\t\t\t\t\t\t\t</TooltipAntd>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t\tdisabled: isSmallScreen,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\talign='stretch'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<SliderDiagram />\r\n\t\t\t\t\t<Slider\r\n\t\t\t\t\t\trange\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tmarks={marks}\r\n\t\t\t\t\t\tstep={null}\r\n\t\t\t\t\t\tdots={true}\r\n\t\t\t\t\t\ttooltip={{\r\n\t\t\t\t\t\t\tformatter: (value: number | undefined) => (\r\n\t\t\t\t\t\t\t\t<>{dayjs(value).format(isAccurate ? 'DD.MM.YY' : 'MM.YY')}</>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tmin={sliderRange[0]}\r\n\t\t\t\t\t\tmax={sliderRange[1]}\r\n\t\t\t\t\t\tdefaultValue={defaultRange}\r\n\t\t\t\t\t\tonChange={setValue}\r\n\t\t\t\t\t\tonChangeComplete={handleRangeChanging}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Flex>\r\n\t\t) : (\r\n\t\t\t<></>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default memo(YearSlider);\r\n","import React, { memo, useCallback, useMemo, useState } from 'react';\r\nimport ListItem from './ListItem';\r\nimport { ItemWithSearch, ListOptions } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Empty, Flex, List, Space } from 'antd';\r\nimport { getListToShowOnCurrentPageIds } from 'utils/transformData';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport LargeSpin from './LargeSpin';\r\nimport { listStore } from 'utils/listStore';\r\nimport { CheckboxChangeEvent } from 'antd/es/checkbox';\r\nimport { debounce } from 'lodash';\r\n\r\ninterface Props {\r\n\tfilteredListIds: ItemWithSearch[];\r\n}\r\n\r\nconst ItemList: React.FC<Props> = observer(({ filteredListIds }) => {\r\n\tconst { loading, isSmallScreen, tourRefs } = userStore;\r\n\tconst { listOptions } = optionsStore;\r\n\tconst { lastDeletedItemIds, setLastDeletedItemIds } = listStore;\r\n\r\n\tconst [selectedItemIds, setSelectedItemIds] = useState<string[]>([]);\r\n\r\n\tconst deleteSelectedItems = useCallback(() => {\r\n\t\tsetSelectedItemIds((prevSelected: string[]) => {\r\n\t\t\tsetLastDeletedItemIds([...lastDeletedItemIds, ...prevSelected]);\r\n\t\t\treturn [];\r\n\t\t});\r\n\t}, [setLastDeletedItemIds, lastDeletedItemIds]);\r\n\r\n\tconst handleSelection = useCallback(\r\n\t\t(id: string) => (event: CheckboxChangeEvent) => {\r\n\t\t\tconst value = event.target.checked;\r\n\t\t\tvalue\r\n\t\t\t\t? setSelectedItemIds((prevSelected: string[]) => [...prevSelected, id])\r\n\t\t\t\t: setSelectedItemIds((prevSelected: string[]) =>\r\n\t\t\t\t\t\tprevSelected.filter((item: string) => item !== id)\r\n\t\t\t\t  );\r\n\t\t},\r\n\t\t[setSelectedItemIds]\r\n\t);\r\n\r\n\tconst debouncedOptions: ListOptions =\r\n\t\tdebounce(() => listOptions)() || listOptions;\r\n\r\n\tconst listToShowOnCurrentPageIds = useMemo(\r\n\t\t() =>\r\n\t\t\tgetListToShowOnCurrentPageIds(debouncedOptions, filteredListIds).filter(\r\n\t\t\t\t(value: ItemWithSearch) => !lastDeletedItemIds.includes(value.id)\r\n\t\t\t),\r\n\t\t[filteredListIds, debouncedOptions, lastDeletedItemIds]\r\n\t);\r\n\r\n\tconst Item = (value: ItemWithSearch) => (\r\n\t\t<ListItem\r\n\t\t\tkey={value.id}\r\n\t\t\tmode={debouncedOptions.mode}\r\n\t\t\tdeleteAll={deleteSelectedItems}\r\n\t\t\thandleSelection={handleSelection(value.id)}\r\n\t\t\tinitialItem={value}\r\n\t\t\tselected={selectedItemIds.includes(value.id)}\r\n\t\t/>\r\n\t);\r\n\r\n\treturn loading ? (\r\n\t\t<LargeSpin />\r\n\t) : !filteredListIds.length ? (\r\n\t\t<Empty\r\n\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\tdescription={''}\r\n\t\t/>\r\n\t) : debouncedOptions.mode === 'list' ? (\r\n\t\t<Flex\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\tref={tourRefs[1]}\r\n\t\t>\r\n\t\t\t<List style={{ inlineSize: '100%' }}>\r\n\t\t\t\t{listToShowOnCurrentPageIds.map((value: ItemWithSearch) => Item(value))}\r\n\t\t\t</List>\r\n\t\t</Flex>\r\n\t) : (\r\n\t\t<Space\r\n\t\t\tref={tourRefs[1]}\r\n\t\t\twrap\r\n\t\t\tsize={isSmallScreen ? 8 : 16}\r\n\t\t>\r\n\t\t\t{listToShowOnCurrentPageIds.map((value: ItemWithSearch) => Item(value))}\r\n\t\t</Space>\r\n\t);\r\n});\r\n\r\nexport default memo(ItemList);\r\n","import React, { useCallback, useState } from 'react';\r\nimport { ExpenseItem } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button, Tooltip } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport ItemModal from './ItemModal';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport dayjs from 'dayjs';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst NewItemButton: React.FC = observer(() => {\r\n\tconst { addItem } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { userOptions } = optionsStore;\r\n\r\n\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\r\n\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t}, [setIsModalOpened]);\r\n\r\n\tconst addNewItem = useCallback(\r\n\t\t(item: ExpenseItem) => {\r\n\t\t\tconst date = dayjs().valueOf();\r\n\t\t\taddItem({ ...item, createdAt: date });\r\n\t\t\ttoggleIsModalOpened();\r\n\t\t},\r\n\t\t[addItem, toggleIsModalOpened]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.newItem[userOptions.language]}>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={toggleIsModalOpened}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<PlusOutlined />\r\n\t\t\t</Button>\r\n\t\t\t<ItemModal\r\n\t\t\t\topened={isModalOpened}\r\n\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\tsubmitItem={addNewItem}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default NewItemButton;\r\n","import React from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select, Tag, Tooltip } from 'antd';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst tagRender = (props: any, categories: { [key: number]: category }) => {\r\n\tconst { label, value, onClose } = props;\r\n\tconst onPreventMouseDown = (event: any) => {\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\t};\r\n\tconst color =\r\n\t\tObject.keys(categories).length > 1 ? categories[value].color : '';\r\n\r\n\treturn (\r\n\t\t<Tag\r\n\t\t\tcolor={color}\r\n\t\t\tonMouseDown={onPreventMouseDown}\r\n\t\t\tclosable={true}\r\n\t\t\tonClose={onClose}\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginInlineEnd: 4,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<span\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcolor: color,\r\n\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{label}\r\n\t\t\t</span>\r\n\t\t</Tag>\r\n\t);\r\n};\r\n\r\nconst CategoriesSelect: React.FC = observer(() => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleCategoriesToFilterChange, userOptions } =\r\n\t\toptionsStore;\r\n\r\n\treturn (\r\n\t\t<Tooltip title={languages.categoriesSelect[userOptions.language]}>\r\n\t\t\t<Select\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tmode='multiple'\r\n\t\t\t\tshowSearch={false}\r\n\t\t\t\ttagRender={(props) => tagRender(props, categories)}\r\n\t\t\t\tstyle={{ minInlineSize: '10em' }}\r\n\t\t\t\tvalue={listOptions.categoriesToFilterIds}\r\n\t\t\t\tonChange={handleCategoriesToFilterChange}\r\n\t\t\t\toptions={Object.keys(categories)\r\n\t\t\t\t\t.filter((key: string) => !categories[key].deleted)\r\n\t\t\t\t\t.map((key: string) => ({\r\n\t\t\t\t\t\tlabel: categories[key].name,\r\n\t\t\t\t\t\tvalue: key,\r\n\t\t\t\t\t}))}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\t);\r\n});\r\n\r\nexport default CategoriesSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Tooltip } from 'antd';\r\nimport {\r\n\tCalendarOutlined,\r\n\tDollarOutlined,\r\n\tFontColorsOutlined,\r\n\tSortAscendingOutlined,\r\n\tSortDescendingOutlined,\r\n} from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst SortSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst {\r\n\t\tsetIsSortingReversed,\r\n\t\tlistOptions,\r\n\t\tuserOptions,\r\n\t\thandleSortAlgorithmChanging,\r\n\t} = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t<Tooltip title={languages.sort.reverse[userOptions.language]}>\r\n\t\t\t\t{listOptions.isSortingReversed ? (\r\n\t\t\t\t\t<SortDescendingOutlined\r\n\t\t\t\t\t\tonClick={() => setIsSortingReversed(!listOptions.isSortingReversed)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<SortAscendingOutlined\r\n\t\t\t\t\t\tonClick={() => setIsSortingReversed(!listOptions.isSortingReversed)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Tooltip>\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.sortingAlgorithm}\r\n\t\t\t\tonChange={handleSortAlgorithmChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byDate[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'date',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byTitle[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<FontColorsOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'title',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.sort.byPrice[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<DollarOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'price',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default SortSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Tooltip } from 'antd';\r\nimport { MenuOutlined, TableOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\n\r\nconst ModeSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleModeChanging, userOptions } = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.mode}\r\n\t\t\t\tonChange={handleModeChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.layout.list[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<MenuOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'list',\r\n\t\t\t\t\t\tdisabled: isSmallScreen,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: (\r\n\t\t\t\t\t\t\t<Tooltip title={languages.layout.grid[userOptions.language]}>\r\n\t\t\t\t\t\t\t\t<TableOutlined />\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvalue: 'grid',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default ModeSelect;\r\n","import { Divider, Flex, Pagination } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, {\r\n\tChangeEvent,\r\n\tDispatch,\r\n\tSetStateAction,\r\n\tmemo,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseMemo,\r\n\tuseState,\r\n} from 'react';\r\nimport NewItemButton from './NewItemButton';\r\nimport YearSlider from './YearSlider';\r\nimport CategoriesSelect from './CategoriesSelect';\r\nimport SortSelect from './SortSelect';\r\nimport ModeSelect from './ModeSelect';\r\nimport constants from 'settings/constants';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport ResetButton from './ResetButton';\r\nimport { MySearch } from './Items';\r\n\r\ninterface Props {\r\n\ttotal: number;\r\n\tquery: string;\r\n\tsetQuery: Dispatch<SetStateAction<string>>;\r\n\tdebouncedQuery: string;\r\n}\r\n\r\nconst Selectors: React.FC<Props> = observer(\r\n\t({ total, query, setQuery, debouncedQuery }) => {\r\n\t\tconst { isSmallScreen, loading, tourRefs } = userStore;\r\n\t\tconst {\r\n\t\t\tlistOptions,\r\n\t\t\tdefaultRange,\r\n\t\t\tresetListOptions,\r\n\t\t\thandlePageChanging,\r\n\t\t\tsetRange,\r\n\t\t\tsetIsAccurate,\r\n\t\t} = optionsStore;\r\n\r\n\t\tconst {\r\n\t\t\tisSortingReversed,\r\n\t\t\trange,\r\n\t\t\tcategoriesToFilterIds,\r\n\t\t\tpageSize,\r\n\t\t\tcurrentPage,\r\n\t\t\tsortingAlgorithm,\r\n\t\t\tisAccurate,\r\n\t\t} = listOptions;\r\n\r\n\t\tconst [isSearchLoading, setIsSearchLoading] = useState<boolean>(false);\r\n\r\n\t\tconst isSettingsChanged = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\t(query.length && isSortingReversed) ||\r\n\t\t\t\tcategoriesToFilterIds.length > 0 ||\r\n\t\t\t\tpageSize !== constants.defaultPageSize ||\r\n\t\t\t\tcurrentPage !== 1 ||\r\n\t\t\t\t(range[0] &&\r\n\t\t\t\t\trange[1] &&\r\n\t\t\t\t\t(range[0] !== defaultRange[0] || range[1]) !== defaultRange[1]) ||\r\n\t\t\t\tsortingAlgorithm !== 'date',\r\n\t\t\t[\r\n\t\t\t\tquery,\r\n\t\t\t\trange,\r\n\t\t\t\tdefaultRange,\r\n\t\t\t\tisSortingReversed,\r\n\t\t\t\tcategoriesToFilterIds,\r\n\t\t\t\tpageSize,\r\n\t\t\t\tcurrentPage,\r\n\t\t\t\tsortingAlgorithm,\r\n\t\t\t]\r\n\t\t);\r\n\r\n\t\tconst handleSearch = useCallback(\r\n\t\t\t(event: ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tsetQuery(event.target.value);\r\n\t\t\t\tsetIsSearchLoading(true);\r\n\t\t\t},\r\n\t\t\t[setQuery, setIsSearchLoading]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetIsSearchLoading(false);\r\n\t\t}, [debouncedQuery]);\r\n\r\n\t\treturn (\r\n\t\t\t<Flex\r\n\t\t\t\tref={tourRefs[2]}\r\n\t\t\t\tvertical\r\n\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\tgap={32}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Flex\r\n\t\t\t\t\t\tgap={16}\r\n\t\t\t\t\t\tvertical={isSmallScreen}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t\t\t<NewItemButton />\r\n\t\t\t\t\t\t\t<CategoriesSelect />\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t\t\t<SortSelect />\r\n\t\t\t\t\t\t\t<ModeSelect />\r\n\t\t\t\t\t\t\t<ResetButton\r\n\t\t\t\t\t\t\t\tdisabled={!isSettingsChanged}\r\n\t\t\t\t\t\t\t\treset={resetListOptions}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t{MySearch(handleSearch, query, isSearchLoading, isSmallScreen)}\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t\t<YearSlider\r\n\t\t\t\t\t\tsetIsAccurate={setIsAccurate}\r\n\t\t\t\t\t\tisAccurate={isAccurate}\r\n\t\t\t\t\t\trange={range}\r\n\t\t\t\t\t\tsetRange={setRange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t{!loading && (\r\n\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\tstyle={{ alignSelf: 'center' }}\r\n\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\t\tshowSizeChanger\r\n\t\t\t\t\t\tpageSizeOptions={constants.pageSizeOptions}\r\n\t\t\t\t\t\tcurrent={listOptions.currentPage}\r\n\t\t\t\t\t\tpageSize={listOptions.pageSize}\r\n\t\t\t\t\t\ttotal={total}\r\n\t\t\t\t\t\tonChange={handlePageChanging}\r\n\t\t\t\t\t\tonShowSizeChange={handlePageChanging}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Flex>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default memo(Selectors);\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport ItemList from '../components/ItemList';\r\nimport { Flex } from 'antd';\r\nimport Selectors from 'components/Selectors';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { getFilteredListIds } from 'utils/transformData';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport { debounce } from 'lodash';\r\nimport constants from 'settings/constants';\r\n\r\nconst Expenses: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { listOptions, userOptions, handleModeChanging, handlePageChanging } =\r\n\t\toptionsStore;\r\n\r\n\tconst { language } = userOptions;\r\n\r\n\tconst [query, setQuery] = useState<string>('');\r\n\tconst [debouncedQuery, setDebouncedQuery] = useState<string>('');\r\n\r\n\tconst {\r\n\t\trange,\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t} = listOptions;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isSmallScreen) {\r\n\t\t\thandleModeChanging('grid');\r\n\t\t}\r\n\t}, [isSmallScreen, handleModeChanging]);\r\n\r\n\tuseEffect(() => {\r\n\t\thandlePageChanging(1, pageSize);\r\n\t}, [\r\n\t\trange,\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tcategoriesToFilterIds,\r\n\t\tpageSize,\r\n\t\thandlePageChanging,\r\n\t]);\r\n\r\n\tconst debouncedSetQuery = useMemo(\r\n\t\t() =>\r\n\t\t\tdebounce(\r\n\t\t\t\t(query: string) => setDebouncedQuery(query),\r\n\t\t\t\tconstants.optionsDebounceDelay\r\n\t\t\t),\r\n\t\t[]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tdebouncedSetQuery(query);\r\n\t\treturn () => {\r\n\t\t\tdebouncedSetQuery.cancel();\r\n\t\t};\r\n\t}, [query, debouncedSetQuery]);\r\n\r\n\tconst filteredListIds = useMemo(\r\n\t\t() => getFilteredListIds(listOptions, list, language, debouncedQuery),\r\n\t\t[list, language, listOptions, debouncedQuery]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t\talign='center'\r\n\t\t>\r\n\t\t\t<Selectors\r\n\t\t\t\ttotal={filteredListIds.length}\r\n\t\t\t\tquery={query}\r\n\t\t\t\tsetQuery={setQuery}\r\n\t\t\t\tdebouncedQuery={debouncedQuery}\r\n\t\t\t/>\r\n\t\t\t<ItemList filteredListIds={filteredListIds} />\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default Expenses;\r\n"],"names":["observer","_ref","disabled","reset","userOptions","optionsStore","isSmallScreen","userStore","_jsx","Tooltip","title","languages","language","children","Button","onClick","size","ReloadOutlined","SliderDiagram","list","listStore","defaultRange","valuesByMonth","useMemo","getValuesByMonth","data","labels","Array","length","fill","datasets","Line","style","inlineSize","options","plugins","legend","display","tooltip","enabled","scales","x","grid","y","elements","point","radius","line","cubicInterpolationMode","borderColor","aspectRatio","memo","Chart","register","LineElement","LineController","CategoryScale","LinearScale","PointElement","dayjs","minMax","YearSlider","range","setRange","isAccurate","setIsAccurate","setDefaultRange","value","setValue","useState","sliderRange","dates","Object","values","map","item","date","Math","min","max","marks","start","startOf","end","endOf","currentDate","isBefore","isSame","valueOf","month","format","add","useEffect","handleRangeChanging","useCallback","diff","_jsxs","Flex","gap","align","Segmented","defaultValue","onChange","label","TooltipAntd","byMonth","ZoomOutOutlined","byDay","ZoomInOutlined","vertical","Slider","step","dots","formatter","_Fragment","onChangeComplete","ItemList","filteredListIds","loading","tourRefs","listOptions","lastDeletedItemIds","setLastDeletedItemIds","selectedItemIds","setSelectedItemIds","deleteSelectedItems","prevSelected","handleSelection","id","event","target","checked","filter","debouncedOptions","debounce","listToShowOnCurrentPageIds","getListToShowOnCurrentPageIds","includes","Item","ListItem","mode","deleteAll","initialItem","selected","LargeSpin","ref","List","Space","wrap","Empty","image","PRESENTED_IMAGE_SIMPLE","description","addItem","isModalOpened","setIsModalOpened","toggleIsModalOpened","prevValue","addNewItem","createdAt","newItem","PlusOutlined","ItemModal","opened","toggleOpened","submitItem","categories","categoryStore","handleCategoriesToFilterChange","categoriesSelect","Select","showSearch","tagRender","props","onClose","color","keys","Tag","onMouseDown","preventDefault","stopPropagation","closable","marginInlineEnd","minInlineSize","categoriesToFilterIds","key","deleted","name","setIsSortingReversed","handleSortAlgorithmChanging","alignSelf","sort","reverse","isSortingReversed","SortDescendingOutlined","SortAscendingOutlined","sortingAlgorithm","byDate","CalendarOutlined","byTitle","FontColorsOutlined","byPrice","DollarOutlined","handleModeChanging","layout","MenuOutlined","TableOutlined","Selectors","total","query","setQuery","debouncedQuery","resetListOptions","handlePageChanging","pageSize","currentPage","isSearchLoading","setIsSearchLoading","isSettingsChanged","constants","defaultPageSize","handleSearch","NewItemButton","CategoriesSelect","SortSelect","ModeSelect","ResetButton","MySearch","Divider","Pagination","showSizeChanger","pageSizeOptions","current","onShowSizeChange","Expenses","setDebouncedQuery","debouncedSetQuery","optionsDebounceDelay","cancel","getFilteredListIds"],"sourceRoot":""}