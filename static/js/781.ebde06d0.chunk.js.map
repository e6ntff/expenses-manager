{"version":3,"file":"static/js/781.ebde06d0.chunk.js","mappings":"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","sources":["components/YearSlider.tsx","utils/calculatePrices.ts","components/CategorySelect.tsx","components/ItemModal.tsx","components/ListItem.tsx","hooks/useDebounce.ts","components/ItemList.tsx","components/NewItemButton.tsx","components/CategoriesSelect.tsx","components/SortSelect.tsx","components/ModeSelect.tsx","components/Selectors.tsx","pages/Expenses.tsx","utils/transformData.ts","utils/utils.ts"],"sourcesContent":["import React, { memo, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented, Slider } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport { ExpenseItem } from 'settings/interfaces';\r\nimport dayjs from 'dayjs';\r\nimport minMax from 'dayjs/plugin/minMax';\r\nimport { ZoomInOutlined, ZoomOutOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport {\r\n\tChart,\r\n\tTooltip,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tLineElement,\r\n\tLineController,\r\n\tPointElement,\r\n} from 'chart.js';\r\nimport { getValuesByMonth } from 'utils/transformData';\r\nimport { Line } from 'react-chartjs-2';\r\nChart.register(\r\n\tTooltip,\r\n\tLineElement,\r\n\tLineController,\r\n\tCategoryScale,\r\n\tLinearScale,\r\n\tPointElement\r\n);\r\n\r\ndayjs.extend(minMax);\r\n\r\ninterface Props {\r\n\trange: number[];\r\n\tdefaultRange: number[];\r\n\tsetRange: (arg0: number[]) => void;\r\n\tsetDefaultRange: (arg0: number[]) => void;\r\n\tisAccurate: boolean;\r\n\tsetIsAccurate: (arg0: boolean) => void;\r\n}\r\n\r\nconst YearSlider: React.FC<Props> = observer(\r\n\t({\r\n\t\trange,\r\n\t\tdefaultRange,\r\n\t\tsetRange,\r\n\t\tsetDefaultRange,\r\n\t\tisAccurate,\r\n\t\tsetIsAccurate,\r\n\t}) => {\r\n\t\tconst { list } = listStore;\r\n\t\tconst { isSmallScreen } = userStore;\r\n\r\n\t\tconst [value, setValue] = useState(defaultRange);\r\n\r\n\t\tconst sliderRange: [number, number] = useMemo(() => {\r\n\t\t\tconst mappedList = list.map((item: ExpenseItem) => item.date);\r\n\t\t\treturn [\r\n\t\t\t\tdayjs.min(mappedList)?.valueOf() || 0,\r\n\t\t\t\tdayjs.max(mappedList)?.valueOf() || 0,\r\n\t\t\t];\r\n\t\t}, [list]);\r\n\r\n\t\tconst marks: { [key: number]: string } = useMemo(() => {\r\n\t\t\tconst start = dayjs(sliderRange[0]).startOf('day');\r\n\t\t\tconst end = dayjs(sliderRange[1]).endOf('day');\r\n\t\t\tconst marks: { [key: number]: string } = {};\r\n\t\t\tlet currentDate = start;\r\n\t\t\tif (isAccurate) {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'day')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.date() === 1\r\n\t\t\t\t\t\t\t? currentDate.month() === 0\r\n\t\t\t\t\t\t\t\t? currentDate.format('YYYY')\r\n\t\t\t\t\t\t\t\t: currentDate.format('M')\r\n\t\t\t\t\t\t\t: ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'day').startOf('day');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile (currentDate.isBefore(end) || currentDate.isSame(end, 'month')) {\r\n\t\t\t\t\tmarks[currentDate.valueOf()] =\r\n\t\t\t\t\t\tcurrentDate.month() === 0 ? currentDate.format('YYYY') : ' ';\r\n\t\t\t\t\tcurrentDate = currentDate.add(1, 'month').startOf('month');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn marks;\r\n\t\t}, [sliderRange, isAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetDefaultRange(sliderRange);\r\n\t\t}, [sliderRange, setDefaultRange]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetRange(defaultRange);\r\n\t\t}, [defaultRange, setRange]);\r\n\r\n\t\tconst handleRangeChanging = useCallback(\r\n\t\t\t(values: number[]) => {\r\n\t\t\t\tsetRange(values);\r\n\t\t\t},\r\n\t\t\t[setRange]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetValue(range);\r\n\t\t}, [range]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tisSmallScreen && setIsAccurate(false);\r\n\t\t}, [isSmallScreen, setIsAccurate]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\t!isAccurate &&\r\n\t\t\t\tsetRange([\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.max([\r\n\t\t\t\t\t\t\tdayjs(range[0]).startOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[0]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tdayjs.min([\r\n\t\t\t\t\t\t\tdayjs(range[1]).endOf('month'),\r\n\t\t\t\t\t\t\tdayjs(defaultRange[1]),\r\n\t\t\t\t\t\t]) as dayjs.Dayjs\r\n\t\t\t\t\t).valueOf(),\r\n\t\t\t\t]);\r\n\t\t\t// eslint-disable-next-line\r\n\t\t}, [isAccurate]);\r\n\r\n\t\tconst valuesByMonth: number[] | { [key: string]: number } = useMemo(\r\n\t\t\t() => getValuesByMonth(list, defaultRange),\r\n\t\t\t[list, defaultRange]\r\n\t\t);\r\n\r\n\t\tconst data = {\r\n\t\t\tlabels: new Array(valuesByMonth.length).fill(''),\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\tdata: valuesByMonth,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t};\r\n\r\n\t\tconst options = {\r\n\t\t\tplugins: {\r\n\t\t\t\tlegend: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\tenabled: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tscales: {\r\n\t\t\t\tx: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\tgrid: {\r\n\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\ty: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\tgrid: {\r\n\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\telements: {\r\n\t\t\t\tpoint: {\r\n\t\t\t\t\tradius: 0,\r\n\t\t\t\t},\r\n\t\t\t\tline: {\r\n\t\t\t\t\tcubicInterpolationMode: 'monotone' as 'monotone',\r\n\t\t\t\t\tborderColor: '#7775',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\taspectRatio: 25,\r\n\t\t};\r\n\r\n\t\treturn dayjs(defaultRange[1]).diff(dayjs(defaultRange[0]), 'hours') >=\r\n\t\t\t48 ? (\r\n\t\t\t<Flex\r\n\t\t\t\tgap={16}\r\n\t\t\t\talign='center'\r\n\t\t\t>\r\n\t\t\t\t<Segmented\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tdefaultValue={isAccurate}\r\n\t\t\t\t\tvalue={isAccurate}\r\n\t\t\t\t\tonChange={setIsAccurate}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{ label: <ZoomOutOutlined />, value: false },\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: <ZoomInOutlined />,\r\n\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t\tdisabled: isSmallScreen,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\talign='stretch'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Line\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Slider\r\n\t\t\t\t\t\trange\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tmarks={marks}\r\n\t\t\t\t\t\tstep={null}\r\n\t\t\t\t\t\tdots={true}\r\n\t\t\t\t\t\ttooltip={{\r\n\t\t\t\t\t\t\tformatter: (value: number | undefined) => (\r\n\t\t\t\t\t\t\t\t<>{dayjs(value).format(isAccurate ? 'DD.MM.YY' : 'MM.YY')}</>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tmin={sliderRange[0]}\r\n\t\t\t\t\t\tmax={sliderRange[1]}\r\n\t\t\t\t\t\tdefaultValue={defaultRange}\r\n\t\t\t\t\t\tonChange={setValue}\r\n\t\t\t\t\t\tonChangeComplete={handleRangeChanging}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Flex>\r\n\t\t) : (\r\n\t\t\t<></>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default memo(YearSlider);\r\n","import constants from '../settings/constants';\r\nimport { currencies, rates } from '../settings/interfaces';\r\n\r\nconst calculatePrices = (\r\n\tprices: currencies,\r\n\trates: rates,\r\n\tcurrency: string = constants.baseCurrency\r\n) => {\r\n\tswitch (currency) {\r\n\t\tcase 'USD':\r\n\t\t\tprices['EUR'] = prices['USD'] * rates['EUR'];\r\n\t\t\tprices['RUB'] = prices['USD'] * rates['RUB'];\r\n\t\t\tbreak;\r\n\t\tcase 'EUR':\r\n\t\t\tprices['USD'] = prices['EUR'] / rates['EUR'];\r\n\t\t\tprices['RUB'] = (prices['EUR'] * rates['RUB']) / rates['EUR'];\r\n\t\t\tbreak;\r\n\t\tcase 'RUB':\r\n\t\t\tprices['EUR'] = (prices['RUB'] / rates['RUB']) * rates['EUR'];\r\n\t\t\tprices['USD'] = prices['RUB'] / rates['RUB'];\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t}\r\n\r\n\treturn prices;\r\n};\r\n\r\nexport default calculatePrices;\r\n","import React from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select } from 'antd';\r\nimport { EditFilled } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tid: number;\r\n\tonChange: (arg0: number) => void;\r\n}\r\n\r\nconst CategorySelect: React.FC<Props> = observer(({ id, onChange }) => {\r\n\tconst { categories, getCategoryById } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tallowClear\r\n\t\t\tstyle={{ minInlineSize: '7em' }}\r\n\t\t\tonChange={onChange}\r\n\t\t\tvalue={id}\r\n\t\t\tsuffixIcon={<EditFilled style={{ color: getCategoryById(id).color }} />}\r\n\t\t>\r\n\t\t\t{categories.map((category: category) => (\r\n\t\t\t\t<Select.Option\r\n\t\t\t\t\tkey={category.id}\r\n\t\t\t\t\tvalue={category.id}\r\n\t\t\t\t>\r\n\t\t\t\t\t{category.name}\r\n\t\t\t\t</Select.Option>\r\n\t\t\t))}\r\n\t\t</Select>\r\n\t);\r\n});\r\n\r\nexport default CategorySelect;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport calculatePrices from '../utils/calculatePrices';\r\nimport { ExpenseItem } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport languages from 'settings/languages';\r\nimport { Col, DatePicker, Form, Input, Modal, Row } from 'antd';\r\nimport CurrencySelect from 'components/CurrencySelect';\r\nimport constants from 'settings/constants';\r\nimport dayjs from 'dayjs';\r\nimport CategorySelect from './CategorySelect';\r\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\ninterface Props {\r\n\topened: boolean;\r\n\tinitialItem: ExpenseItem;\r\n\ttoggleOpened: () => void;\r\n\tsubmitItem: (arg0: ExpenseItem) => void;\r\n}\r\n\r\nconst ItemModal: React.FC<Props> = observer(\r\n\t({ opened, initialItem, toggleOpened, submitItem }) => {\r\n\t\tconst [currency, setCurrency] = useState(constants.baseCurrency);\r\n\t\tconst { currencyRates, isSmallScreen } = userStore;\r\n\t\tconst { userOptions } = optionsStore;\r\n\r\n\t\tconst { language } = userOptions;\r\n\r\n\t\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>(initialItem);\r\n\r\n\t\tconst handleTitleChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\ttitle: value,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleDateChange = useCallback(\r\n\t\t\t(value: dayjs.Dayjs) => {\r\n\t\t\t\tif (value)\r\n\t\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tdate: value,\r\n\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handleCategoryChange = useCallback(\r\n\t\t\t(id: number) => {\r\n\t\t\t\tsetCurrentItem((prevItem: ExpenseItem) => ({\r\n\t\t\t\t\t...prevItem,\r\n\t\t\t\t\tcategoryId: id,\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\t[setCurrentItem]\r\n\t\t);\r\n\r\n\t\tconst handlePriceChange = useCallback(\r\n\t\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tconst { value } = event.target;\r\n\t\t\t\tsetCurrentItem((prevItem) => {\r\n\t\t\t\t\tconst updatedItem = {\r\n\t\t\t\t\t\t...prevItem,\r\n\t\t\t\t\t\tprice: {\r\n\t\t\t\t\t\t\t...prevItem.price,\r\n\t\t\t\t\t\t\t[currency]: Number(value),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...updatedItem,\r\n\t\t\t\t\t\tprice: calculatePrices(updatedItem.price, currencyRates, currency),\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setCurrentItem, currency, currencyRates]\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tconst submitItemWithEnter = (event: KeyboardEvent) => {\r\n\t\t\t\tif (event.key === 'Enter' && opened) {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\twindow.addEventListener('keyup', submitItemWithEnter);\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener('keyup', submitItemWithEnter);\r\n\t\t\t};\r\n\t\t}, [currentItem, submitItem, opened]);\r\n\r\n\t\tconst TitleJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={currentItem.title}\r\n\t\t\t\tonInput={handleTitleChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst PriceJSX = (\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='number'\r\n\t\t\t\tmin='1'\r\n\t\t\t\tstep='1'\r\n\t\t\t\tvalue={Math.round(currentItem.price[currency])}\r\n\t\t\t\tonInput={handlePriceChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CurrencyJSX = (\r\n\t\t\t<CurrencySelect\r\n\t\t\t\tvalue={currency}\r\n\t\t\t\tsetCurrency={setCurrency}\r\n\t\t\t\tonChange={setCurrency}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst DateJSX = (\r\n\t\t\t<DatePicker\r\n\t\t\t\trequired\r\n\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\tvalue={currentItem.date}\r\n\t\t\t\tminDate={constants.startDate}\r\n\t\t\t\tmaxDate={dayjs()}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst CategoryJSX = (\r\n\t\t\t<CategorySelect\r\n\t\t\t\tid={currentItem.categoryId}\r\n\t\t\t\tonChange={handleCategoryChange}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\topen={opened}\r\n\t\t\t\tokButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tcancelButtonProps={{ size: isSmallScreen ? 'small' : 'middle' }}\r\n\t\t\t\tonOk={() => {\r\n\t\t\t\t\tsubmitItem(currentItem);\r\n\t\t\t\t}}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetCurrentItem(initialItem);\r\n\t\t\t\t\ttoggleOpened();\r\n\t\t\t\t}}\r\n\t\t\t\tokText={<CheckOutlined />}\r\n\t\t\t\tcancelText={<CloseOutlined />}\r\n\t\t\t>\r\n\t\t\t\t<Form\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\tlayout='vertical'\r\n\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Form.Item label={languages.title[language]}>{TitleJSX}</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.price[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={16}>{PriceJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={7}>{CurrencyJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label={languages.dateAndCat[language]}>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col span={10}>{DateJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={1}></Col>\r\n\t\t\t\t\t\t\t<Col span={13}>{CategoryJSX}</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default ItemModal;\r\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { getSymbolAndPrice } from 'utils/utils';\r\nimport { ExpenseItem, Mode } from '../settings/interfaces';\r\nimport Item from 'antd/es/list/Item';\r\nimport { Card, Col, Flex, Progress, Statistic, Tag, Typography } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { userStore } from 'utils/userStore';\r\nimport Title from 'antd/es/typography/Title';\r\nimport { CloseOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\nimport ItemModal from './ItemModal';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport languages from 'settings/languages';\r\nimport { categoryStore } from 'utils/categoryStore';\r\n\r\ninterface Props {\r\n\tmode: Mode;\r\n\tinitialItem: ExpenseItem;\r\n}\r\n\r\nconst ListItem: React.FC<Props> = observer(({ mode, initialItem }) => {\r\n\tconst { id, categoryId, date, title, price } = initialItem;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { replaceItem, removeItem } = listStore;\r\n\tconst { userOptions } = optionsStore;\r\n\tconst { getCategoryById } = categoryStore;\r\n\r\n\tconst { currency, language } = userOptions;\r\n\r\n\tconst [isItemDeleting, setIsItemDeleting] = useState<boolean>(false);\r\n\tconst [deleteValue, setDeleteValue] = useState<number>(0);\r\n\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\r\n\tconst [currentItem, setCurrentItem] = useState<ExpenseItem>({\r\n\t\tid: id,\r\n\t\tdate: date,\r\n\t\ttitle: title,\r\n\t\tcategoryId: categoryId,\r\n\t\tprice: price,\r\n\t});\r\n\r\n\tconst toggleIsItemDeleting = () => {\r\n\t\tsetIsItemDeleting((prevValue: boolean) => !prevValue);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst deleteId = setInterval(() => {\r\n\t\t\tsetDeleteValue((prevValue: number) => {\r\n\t\t\t\tconst newValue = prevValue + 10;\r\n\t\t\t\tif (newValue >= userOptions.deleteDelay && isItemDeleting) {\r\n\t\t\t\t\tremoveItem(currentItem);\r\n\t\t\t\t\tclearInterval(deleteId);\r\n\t\t\t\t}\r\n\t\t\t\treturn newValue;\r\n\t\t\t});\r\n\t\t}, 10);\r\n\t\tif (!isItemDeleting) {\r\n\t\t\tclearInterval(deleteId);\r\n\t\t\tsetDeleteValue(0);\r\n\t\t}\r\n\t\treturn () => clearInterval(deleteId);\r\n\t}, [isItemDeleting, currentItem, removeItem, userOptions.deleteDelay]);\r\n\r\n\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t}, [setIsModalOpened]);\r\n\r\n\tconst updateCurrentItem = useCallback(\r\n\t\t(item: ExpenseItem) => {\r\n\t\t\tsetCurrentItem((prevItem: ExpenseItem) => {\r\n\t\t\t\tif (JSON.stringify(prevItem) !== JSON.stringify(item)) {\r\n\t\t\t\t\treplaceItem(item);\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t}\r\n\t\t\t\treturn prevItem;\r\n\t\t\t});\r\n\t\t\ttoggleIsModalOpened();\r\n\t\t},\r\n\t\t[setCurrentItem, replaceItem, toggleIsModalOpened]\r\n\t);\r\n\r\n\tconst TitleJSX = (\r\n\t\t<Flex\r\n\t\t\tjustify='center'\r\n\t\t\tstyle={{\r\n\t\t\t\topacity: isItemDeleting || !currentItem.title ? '.5' : '1',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{isSmallScreen ? (\r\n\t\t\t\t<Typography.Text\r\n\t\t\t\t\tstrong\r\n\t\t\t\t\tellipsis\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentItem.title || languages.noTitle[language]}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t) : (\r\n\t\t\t\t<Title\r\n\t\t\t\t\tellipsis\r\n\t\t\t\t\tlevel={3}\r\n\t\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{currentItem.title || languages.noTitle[language]}\r\n\t\t\t\t</Title>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst DateJSX = (\r\n\t\t<Statistic\r\n\t\t\tvalue={currentItem.date.format('DD.MM.YY')}\r\n\t\t\tstyle={{\r\n\t\t\t\tscale: isSmallScreen ? '.75' : '1',\r\n\t\t\t\topacity: isItemDeleting ? '.5' : '1',\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n\r\n\tconst itemCategory = useMemo(\r\n\t\t() => getCategoryById(currentItem.categoryId),\r\n\t\t[currentItem, getCategoryById]\r\n\t);\r\n\r\n\tconst CategoryJSX = (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\talign='stretch'\r\n\t\t\tstyle={{\r\n\t\t\t\topacity: isItemDeleting ? '.5' : '1',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Tag color={itemCategory.color}>\r\n\t\t\t\t<span\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmargin: 'auto',\r\n\t\t\t\t\t\tcolor: itemCategory.color,\r\n\t\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{itemCategory.name}\r\n\t\t\t\t</span>\r\n\t\t\t</Tag>\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst PriceJSX = (\r\n\t\t<Flex\r\n\t\t\tjustify='center'\r\n\t\t\tstyle={{\r\n\t\t\t\topacity: isItemDeleting ? '.5' : '1',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{isSmallScreen ? (\r\n\t\t\t\t<Typography.Text strong>\r\n\t\t\t\t\t{getSymbolAndPrice(currency)}\r\n\t\t\t\t\t{Math.round(currentItem.price[currency])}\r\n\t\t\t\t</Typography.Text>\r\n\t\t\t) : (\r\n\t\t\t\t<Title\r\n\t\t\t\t\tlevel={3}\r\n\t\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{getSymbolAndPrice(currency, currentItem.price[currency])}\r\n\t\t\t\t</Title>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\tconst DeleteJSX = isItemDeleting ? (\r\n\t\t<CloseOutlined\r\n\t\t\tonClick={toggleIsItemDeleting}\r\n\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t/>\r\n\t) : (\r\n\t\t<DeleteOutlined\r\n\t\t\tonClick={toggleIsItemDeleting}\r\n\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t/>\r\n\t);\r\n\r\n\tconst ProgressJSX = (\r\n\t\t<Progress\r\n\t\t\tshowInfo={false}\r\n\t\t\tpercent={(deleteValue / userOptions.deleteDelay) * 100}\r\n\t\t\tstatus='exception'\r\n\t\t/>\r\n\t);\r\n\r\n\tconst EditJSX = (\r\n\t\t<EditOutlined\r\n\t\t\tonClick={!isItemDeleting ? () => toggleIsModalOpened() : () => {}}\r\n\t\t\tstyle={{ scale: isSmallScreen ? '1' : '1.5' }}\r\n\t\t/>\r\n\t);\r\n\r\n\tconst ActionsJSX = (\r\n\t\t<Flex justify='space-evenly'>\r\n\t\t\t{EditJSX}\r\n\t\t\t{PriceJSX}\r\n\t\t\t{DeleteJSX}\r\n\t\t</Flex>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ItemModal\r\n\t\t\t\topened={isModalOpened}\r\n\t\t\t\tinitialItem={currentItem}\r\n\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\tsubmitItem={updateCurrentItem}\r\n\t\t\t/>\r\n\t\t\t{mode === 'list' ? (\r\n\t\t\t\t<Item>\r\n\t\t\t\t\t{!isItemDeleting ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Col>{DateJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={9}>{TitleJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={3}>{CategoryJSX}</Col>\r\n\t\t\t\t\t\t\t<Col span={5}>{PriceJSX}</Col>\r\n\t\t\t\t\t\t\t<Col>{EditJSX}</Col>\r\n\t\t\t\t\t\t\t<Col>{DeleteJSX}</Col>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Col span={21}>{ProgressJSX}</Col>\r\n\t\t\t\t\t\t\t<Col>{DeleteJSX}</Col>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Item>\r\n\t\t\t) : (\r\n\t\t\t\t<Card\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\tbordered\r\n\t\t\t\t\ttitle={isItemDeleting ? ProgressJSX : TitleJSX}\r\n\t\t\t\t\tactions={[ActionsJSX]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Flex justify='center'>\r\n\t\t\t\t\t\t<Flex\r\n\t\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\t\talign='stretch'\r\n\t\t\t\t\t\t\tgap={4}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{DateJSX}\r\n\t\t\t\t\t\t\t{CategoryJSX}\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Card>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default ListItem;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useDebounce = (value: any, delay: number = 250) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const timerId = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce\r\n","import React, { memo, useEffect, useMemo, useState } from 'react';\r\nimport ListItem from './ListItem';\r\nimport { ExpenseItem, ListOptions } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { listStore } from 'utils/listStore';\r\nimport { Col, Empty, List, Row } from 'antd';\r\nimport { getListToShowOnCurrentPage } from 'utils/transformData';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport LargeSpin from './LargeSpin';\r\n\r\ninterface Props {\r\n\tfilteredList: ExpenseItem[];\r\n}\r\n\r\nconst ItemList: React.FC<Props> = observer(({ filteredList }) => {\r\n\tconst { loading } = listStore;\r\n\tconst { width } = userStore;\r\n\tconst { listOptions } = optionsStore;\r\n\r\n\tconst debouncedOptions: ListOptions = useDebounce(listOptions);\r\n\r\n\tconst [colNumber, setColNumber] = useState<number>(4);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (width < 350) {\r\n\t\t\tsetColNumber(1);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (width < 450) {\r\n\t\t\tsetColNumber(2);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (width < 850) {\r\n\t\t\tsetColNumber(3);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetColNumber(4);\r\n\t}, [setColNumber, width]);\r\n\r\n\tconst listToShowOnCurrentPage = useMemo(\r\n\t\t() => getListToShowOnCurrentPage(debouncedOptions, filteredList),\r\n\t\t[filteredList, debouncedOptions]\r\n\t);\r\n\r\n\tconst splittedList = useMemo(() => {\r\n\t\tconst result: ExpenseItem[][] = [];\r\n\t\tlet row = -1;\r\n\r\n\t\tlistToShowOnCurrentPage.forEach((item: ExpenseItem, col: number) => {\r\n\t\t\tif (col % colNumber === 0) {\r\n\t\t\t\trow++;\r\n\t\t\t\tresult.push([]);\r\n\t\t\t}\r\n\t\t\tresult[row].push(item);\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}, [colNumber, listToShowOnCurrentPage]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<LargeSpin />\r\n\t\t\t) : (\r\n\t\t\t\t!filteredList.length && (\r\n\t\t\t\t\t<Empty\r\n\t\t\t\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\r\n\t\t\t\t\t\tdescription={''}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t)}\r\n\t\t\t{debouncedOptions.mode === 'list' ? (\r\n\t\t\t\t<List style={{ inlineSize: '100%' }}>\r\n\t\t\t\t\t{listToShowOnCurrentPage.map((item: ExpenseItem) => (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\tmode={debouncedOptions.mode}\r\n\t\t\t\t\t\t\tinitialItem={item}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</List>\r\n\t\t\t) : (\r\n\t\t\t\tsplittedList.map((row: ExpenseItem[]) => (\r\n\t\t\t\t\t<Row\r\n\t\t\t\t\t\tkey={row[0].id}\r\n\t\t\t\t\t\tgutter={16}\r\n\t\t\t\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{row.map((item: ExpenseItem) => (\r\n\t\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\tspan={24 / colNumber}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\tmode={debouncedOptions.mode}\r\n\t\t\t\t\t\t\t\t\tinitialItem={item}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t))\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default memo(ItemList);\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\nimport { ExpenseItem } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button } from 'antd';\r\nimport { listStore } from 'utils/listStore';\r\nimport constants from 'settings/constants';\r\nimport ItemModal from './ItemModal';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\n\r\nconst NewItemButton: React.FC = observer(() => {\r\n\tconst { addItem } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\tconst emptyItem: ExpenseItem = useMemo(() => constants.emptyItem, []);\r\n\r\n\tconst [newItem, setNewItem] = useState<ExpenseItem>(emptyItem);\r\n\tconst [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n\r\n\tconst toggleIsModalOpened = useCallback(() => {\r\n\t\tsetIsModalOpened((prevValue: boolean) => !prevValue);\r\n\t}, [setIsModalOpened]);\r\n\r\n\tconst clearItem = useCallback(() => {\r\n\t\tsetNewItem(emptyItem);\r\n\t}, [setNewItem, emptyItem]);\r\n\r\n\tconst addNewItem = useCallback(\r\n\t\t(item: ExpenseItem) => {\r\n\t\t\taddItem(item);\r\n\t\t\tclearItem();\r\n\t\t\ttoggleIsModalOpened();\r\n\t\t},\r\n\t\t[addItem, toggleIsModalOpened, clearItem]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={toggleIsModalOpened}\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t>\r\n\t\t\t\t<PlusOutlined />\r\n\t\t\t</Button>\r\n\t\t\t<ItemModal\r\n\t\t\t\topened={isModalOpened}\r\n\t\t\t\tinitialItem={newItem}\r\n\t\t\t\ttoggleOpened={toggleIsModalOpened}\r\n\t\t\t\tsubmitItem={addNewItem}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default NewItemButton;\r\n","import React from 'react';\r\nimport { category } from '../settings/interfaces';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { categoryStore } from 'utils/categoryStore';\r\nimport { Select, Tag } from 'antd';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst tagRender = (props: any, categories: category[]) => {\r\n\tconst { label, value, onClose } = props;\r\n\tconst onPreventMouseDown = (event: any) => {\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\t};\r\n\r\n\tconst color = categories.find(\r\n\t\t(category: category) => category.id === value\r\n\t)?.color;\r\n\r\n\treturn (\r\n\t\t<Tag\r\n\t\t\tcolor={color}\r\n\t\t\tonMouseDown={onPreventMouseDown}\r\n\t\t\tclosable={true}\r\n\t\t\tonClose={onClose}\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginInlineEnd: 4,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<span\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcolor: color,\r\n\t\t\t\t\tfilter: 'invert(1)',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{label}\r\n\t\t\t</span>\r\n\t\t</Tag>\r\n\t);\r\n};\r\n\r\nconst CategoriesSelect: React.FC = observer(() => {\r\n\tconst { categories } = categoryStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleCategoriesToFilterChange } = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tmode='multiple'\r\n\t\t\tshowSearch={false}\r\n\t\t\ttagRender={(props) => tagRender(props, categories)}\r\n\t\t\tstyle={{ minInlineSize: '10em' }}\r\n\t\t\tvalue={listOptions.categoriesToFilter.map((value: category) => value.id)}\r\n\t\t\tonChange={handleCategoriesToFilterChange}\r\n\t\t>\r\n\t\t\t{categories.map((category: category) => (\r\n\t\t\t\t<Select.Option\r\n\t\t\t\t\tkey={category.id}\r\n\t\t\t\t\tvalue={category.id}\r\n\t\t\t\t>\r\n\t\t\t\t\t{category.name}\r\n\t\t\t\t</Select.Option>\r\n\t\t\t))}\r\n\t\t</Select>\r\n\t);\r\n});\r\n\r\nexport default CategoriesSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented } from 'antd';\r\nimport {\r\n\tCalendarOutlined,\r\n\tDollarOutlined,\r\n\tFontColorsOutlined,\r\n\tSortAscendingOutlined,\r\n\tSortDescendingOutlined,\r\n} from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst SortSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { setIsSortingReversed, listOptions, handleSortAlgorithmChanging } =\r\n\t\toptionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t{listOptions.isSortingReversed ? (\r\n\t\t\t\t<SortDescendingOutlined />\r\n\t\t\t) : (\r\n\t\t\t\t<SortAscendingOutlined />\r\n\t\t\t)}\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.sortingAlgorithm}\r\n\t\t\t\tonDoubleClick={() =>\r\n\t\t\t\t\tsetIsSortingReversed(!listOptions.isSortingReversed)\r\n\t\t\t\t}\r\n\t\t\t\tonChange={handleSortAlgorithmChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{ label: <CalendarOutlined />, value: 'date' },\r\n\t\t\t\t\t{ label: <FontColorsOutlined />, value: 'title' },\r\n\t\t\t\t\t{ label: <DollarOutlined />, value: 'price' },\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default SortSelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Flex, Segmented } from 'antd';\r\nimport { MenuOutlined, TableOutlined } from '@ant-design/icons';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst ModeSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { listOptions, handleModeChanging } = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tgap={8}\r\n\t\t\tstyle={{ alignSelf: 'start' }}\r\n\t\t>\r\n\t\t\t<Segmented\r\n\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\tvalue={listOptions.mode}\r\n\t\t\t\tonChange={handleModeChanging}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{ label: <MenuOutlined />, value: 'list', disabled: isSmallScreen },\r\n\t\t\t\t\t{ label: <TableOutlined />, value: 'grid' },\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default ModeSelect;\r\n","import { Button, Divider, Flex, Pagination } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useMemo } from 'react';\r\nimport NewItemButton from './NewItemButton';\r\nimport YearSlider from './YearSlider';\r\nimport CategoriesSelect from './CategoriesSelect';\r\nimport SortSelect from './SortSelect';\r\nimport ModeSelect from './ModeSelect';\r\nimport { ReloadOutlined } from '@ant-design/icons';\r\nimport { listStore } from 'utils/listStore';\r\nimport constants from 'settings/constants';\r\nimport { userStore } from 'utils/userStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\ninterface Props {\r\n\ttotal: number;\r\n}\r\n\r\nconst Selectors: React.FC<Props> = observer(({ total }) => {\r\n\tconst { loading } = listStore;\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst {\r\n\t\tlistOptions,\r\n\t\tresetSettings,\r\n\t\thandlePageChanging,\r\n\t\tsetRange,\r\n\t\tsetDefaultRange,\r\n\t\tsetIsAccurate,\r\n\t} = optionsStore;\r\n\r\n\tconst {\r\n\t\tisSortingReversed,\r\n\t\trange,\r\n\t\tdefaultRange,\r\n\t\tcategoriesToFilter,\r\n\t\tpageSize,\r\n\t\tcurrentPage,\r\n\t\tsortingAlgorithm,\r\n\t\tisAccurate,\r\n\t} = listOptions;\r\n\r\n\tconst isSettingsChanged = useMemo(\r\n\t\t() =>\r\n\t\t\tisSortingReversed ||\r\n\t\t\tcategoriesToFilter.length > 0 ||\r\n\t\t\tpageSize !== constants.defaultPageSize ||\r\n\t\t\tcurrentPage !== 1 ||\r\n\t\t\t(range[0] &&\r\n\t\t\t\trange[1] &&\r\n\t\t\t\t(range[0] !== defaultRange[0] || range[1]) !== defaultRange[1]) ||\r\n\t\t\tsortingAlgorithm !== 'date',\r\n\t\t[\r\n\t\t\trange,\r\n\t\t\tdefaultRange,\r\n\t\t\tisSortingReversed,\r\n\t\t\tcategoriesToFilter,\r\n\t\t\tpageSize,\r\n\t\t\tcurrentPage,\r\n\t\t\tsortingAlgorithm,\r\n\t\t]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tstyle={{ inlineSize: '100%' }}\r\n\t\t>\r\n\t\t\t<Flex\r\n\t\t\t\tvertical\r\n\t\t\t\tgap={32}\r\n\t\t\t>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tgap={16}\r\n\t\t\t\t\tvertical={isSmallScreen}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t\t<NewItemButton />\r\n\t\t\t\t\t\t<CategoriesSelect />\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t\t<Flex gap={16}>\r\n\t\t\t\t\t\t<SortSelect />\r\n\t\t\t\t\t\t<ModeSelect />\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tdisabled={!isSettingsChanged}\r\n\t\t\t\t\t\t\tonClick={resetSettings}\r\n\t\t\t\t\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ReloadOutlined />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<YearSlider\r\n\t\t\t\t\tsetIsAccurate={setIsAccurate}\r\n\t\t\t\t\tisAccurate={isAccurate}\r\n\t\t\t\t\trange={range}\r\n\t\t\t\t\tdefaultRange={defaultRange}\r\n\t\t\t\t\tsetRange={setRange}\r\n\t\t\t\t\tsetDefaultRange={setDefaultRange}\r\n\t\t\t\t/>\r\n\t\t\t</Flex>\r\n\t\t\t<Divider />\r\n\t\t\t{!loading && (\r\n\t\t\t\t<Pagination\r\n\t\t\t\t\tstyle={{ alignSelf: 'center' }}\r\n\t\t\t\t\tsize={isSmallScreen ? 'small' : 'default'}\r\n\t\t\t\t\tshowSizeChanger\r\n\t\t\t\t\tpageSizeOptions={constants.pageSizeOptions}\r\n\t\t\t\t\tcurrent={listOptions.currentPage}\r\n\t\t\t\t\tpageSize={listOptions.pageSize}\r\n\t\t\t\t\ttotal={total}\r\n\t\t\t\t\tonChange={handlePageChanging}\r\n\t\t\t\t\tonShowSizeChange={handlePageChanging}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default Selectors;\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport ItemList from '../components/ItemList';\r\nimport { Flex } from 'antd';\r\nimport Selectors from 'components/Selectors';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { getFilteredList } from 'utils/transformData';\r\nimport { listStore } from 'utils/listStore';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst Expenses: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { list } = listStore;\r\n\tconst { listOptions, userOptions, handleModeChanging, handlePageChanging } =\r\n\t\toptionsStore;\r\n\r\n\tconst { language } = userOptions;\r\n\r\n\tconst {\r\n\t\trange,\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tcategoriesToFilter,\r\n\t\tpageSize,\r\n\t\tisAccurate,\r\n\t} = listOptions;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isSmallScreen) {\r\n\t\t\thandleModeChanging('grid');\r\n\t\t}\r\n\t}, [isSmallScreen, handleModeChanging]);\r\n\r\n\tuseEffect(() => {\r\n\t\thandlePageChanging(1, pageSize);\r\n\t}, [\r\n\t\trange,\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tcategoriesToFilter,\r\n\t\tpageSize,\r\n\t\thandlePageChanging,\r\n\t]);\r\n\r\n\tconst filteredList = useMemo(\r\n\t\t() => getFilteredList(listOptions, list, language, isAccurate),\r\n\t\t[list, language, listOptions, isAccurate]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tvertical\r\n\t\t\tgap={16}\r\n\t\t\talign='center'\r\n\t\t>\r\n\t\t\t<Selectors total={filteredList.length} />\r\n\t\t\t<ItemList filteredList={filteredList} />\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default Expenses;\r\n","import {\r\n\tExpenseItem,\r\n\tInterval,\r\n\tListOptions,\r\n\tValue,\r\n\tcategory,\r\n\tlanguage,\r\n} from 'settings/interfaces';\r\nimport { sortBy } from './utils';\r\nimport dayjs from 'dayjs';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\n\r\ndayjs.extend(isBetween);\r\n\r\nexport const getFilteredList = (\r\n\toptions: ListOptions,\r\n\tlist: ExpenseItem[],\r\n\tlanguage: language,\r\n\tisAccurate: boolean\r\n) => {\r\n\tconst { range, categoriesToFilter, sortingAlgorithm, isSortingReversed } =\r\n\t\toptions;\r\n\treturn sortBy(\r\n\t\tlist.filter((item: ExpenseItem) => {\r\n\t\t\tif (!categoriesToFilter.length) {\r\n\t\t\t\treturn item.date.isBetween(\r\n\t\t\t\t\tdayjs(range[0]),\r\n\t\t\t\t\tdayjs(range[1]),\r\n\t\t\t\t\tisAccurate ? 'day' : 'month',\r\n\t\t\t\t\t'[]'\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\titem.date.isBetween(dayjs(range[0]), dayjs(range[1]), 'day', '[]') &&\r\n\t\t\t\t\tcategoriesToFilter.some(\r\n\t\t\t\t\t\t(category: category) => item.categoryId === category.id\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}),\r\n\t\tsortingAlgorithm,\r\n\t\tisSortingReversed,\r\n\t\tlanguage\r\n\t);\r\n};\r\n\r\nexport const getListToShowOnCurrentPage = (\r\n\toptions: ListOptions,\r\n\tfilteredList: ExpenseItem[]\r\n) => {\r\n\tconst { currentPage, pageSize } = options;\r\n\tconst startIndex = (currentPage - 1) * pageSize;\r\n\tconst endIndex = startIndex + pageSize;\r\n\treturn filteredList.slice(startIndex, endIndex);\r\n};\r\n\r\nexport const getValuesForBarDiagram = (\r\n\tlist: ExpenseItem[],\r\n\tcurrency: string,\r\n\tmode: Interval,\r\n\tyear: number\r\n) => {\r\n\tif (mode === 'year') {\r\n\t\tconst result: { [key: number]: number } = {};\r\n\t\tlist.forEach((item: ExpenseItem) => {\r\n\t\t\tconst key: number = item.date.year();\r\n\t\t\tif (result[key] === undefined) {\r\n\t\t\t\tresult[key] = 0;\r\n\t\t\t} else {\r\n\t\t\t\tresult[key] += item.price[currency];\r\n\t\t\t}\r\n\t\t});\r\n\t\tfor (let year in result) {\r\n\t\t\tresult[year] = Math.round(result[year]);\r\n\t\t}\r\n\t\treturn result;\r\n\t} else if (mode === 'month') {\r\n\t\tconst result: number[] = new Array(12).fill(0);\r\n\t\tlist.forEach((item: ExpenseItem) => {\r\n\t\t\tif (item.date.year() === year) {\r\n\t\t\t\tconst index: number = item.date.month();\r\n\t\t\t\tresult[index] += item.price[currency];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result.map((item: number) => Math.round(item));\r\n\t}\r\n\treturn [];\r\n};\r\n\r\nexport const getValuesForPieDiagram = (\r\n\tlist: ExpenseItem[],\r\n\trange: number[],\r\n\tcurrency: string,\r\n\tisAccurate: boolean,\r\n\tgetCategoryById: (id: number) => category\r\n) => {\r\n\tconst values: Value[] = [];\r\n\tlist.forEach((item: ExpenseItem) => {\r\n\t\tif (\r\n\t\t\titem.date.isBetween(\r\n\t\t\t\tdayjs(range[0]),\r\n\t\t\t\tdayjs(range[1]),\r\n\t\t\t\tisAccurate ? 'day' : 'month',\r\n\t\t\t\t'[]'\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tconst indexOfCategory: number = values.findIndex(\r\n\t\t\t\t(value: Value) => value.category.id === item.categoryId\r\n\t\t\t);\r\n\t\t\tif (indexOfCategory !== -1) {\r\n\t\t\t\tvalues[indexOfCategory].value += item.price[currency];\r\n\t\t\t} else {\r\n\t\t\t\tvalues.push({\r\n\t\t\t\t\tcategory: getCategoryById(item.categoryId),\r\n\t\t\t\t\tvalue: item.price[currency],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn values.map((value: Value) => ({\r\n\t\t...value,\r\n\t\tvalue: Math.round(value.value),\r\n\t}));\r\n};\r\n\r\nexport const getTotalInCurrentRange = (\r\n\tlist: ExpenseItem[],\r\n\trange: number[],\r\n\tcurrency: string,\r\n\tisAccurate: boolean\r\n) =>\r\n\tMath.floor(\r\n\t\tlist.reduce((acc: number, item: ExpenseItem) => {\r\n\t\t\tif (\r\n\t\t\t\titem.date.isBetween(\r\n\t\t\t\t\tdayjs(range[0]),\r\n\t\t\t\t\tdayjs(range[1]),\r\n\t\t\t\t\tisAccurate ? 'hour' : 'day',\r\n\t\t\t\t\t'()'\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\treturn acc + item.price[currency];\r\n\t\t\t}\r\n\t\t\treturn acc;\r\n\t\t}, 0)\r\n\t);\r\n\r\nexport const getValuesByMonth = (list: ExpenseItem[], range: number[]) => {\r\n\tconst values: number[] = [];\r\n\tconst end = dayjs(range[1]);\r\n\tlet startDate = dayjs(range[0]);\r\n\tlet endDate = dayjs(range[0]).add(1, 'month');\r\n\r\n\twhile (!endDate.isAfter(end, 'day')) {\r\n\t\t// eslint-disable-next-line\r\n\t\tconst itemsInMonth = list.filter((item) =>\r\n\t\t\titem.date.isBetween(startDate, endDate, 'day', '[]')\r\n\t\t);\r\n\t\tconst valueForMonth = itemsInMonth.reduce(\r\n\t\t\t(acc, item) => acc + item.price.USD,\r\n\t\t\t0\r\n\t\t);\r\n\t\tvalues.push(valueForMonth);\r\n\t\tstartDate = startDate.add(1, 'month');\r\n\t\tendDate = endDate.add(1, 'month');\r\n\t}\r\n\r\n\treturn values;\r\n};\r\n","import { ExpenseItem, Sort, language } from 'settings/interfaces';\r\n\r\nexport const getSymbolAndPrice = (currency: string, price?: number) => {\r\n\tlet result = '';\r\n\tif (currency === 'USD') result += '$';\r\n\tif (currency === 'EUR') result += '€';\r\n\tif (currency === 'RUB') result += '₽';\r\n\r\n\tconst formattedPrice = Math.round(price as number)\r\n\t\t?.toString()\r\n\t\t.split('')\r\n\t\t.reverse()\r\n\t\t.reduce(\r\n\t\t\t(acc: string[], symbol: string, index: number) =>\r\n\t\t\t\tindex % 3 === 0 && index !== 0\r\n\t\t\t\t\t? [...acc, symbol + ',']\r\n\t\t\t\t\t: [...acc, symbol],\r\n\t\t\t[]\r\n\t\t)\r\n\t\t.reverse()\r\n\t\t.join('');\r\n\r\n\treturn price === undefined ? result : result + formattedPrice;\r\n};\r\n\r\nexport const sortBy = (\r\n\tlist: ExpenseItem[],\r\n\tsortingAlgorithm: Sort,\r\n\treversed: boolean,\r\n\tlanguage?: language\r\n) => {\r\n\tlet result: ExpenseItem[];\r\n\tswitch (sortingAlgorithm) {\r\n\t\tcase 'date':\r\n\t\t\tresult = [...list].sort(\r\n\t\t\t\t(prev: ExpenseItem, next: ExpenseItem) =>\r\n\t\t\t\t\tnext.date.valueOf() - prev.date.valueOf()\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'title':\r\n\t\t\tresult = [...list].sort((prev: ExpenseItem, next: ExpenseItem) =>\r\n\t\t\t\tprev.title.localeCompare(next.title, language, {\r\n\t\t\t\t\tsensitivity: 'base',\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'price':\r\n\t\t\tresult = [...list].sort(\r\n\t\t\t\t(prev: ExpenseItem, next: ExpenseItem) =>\r\n\t\t\t\t\tnext.price.USD - prev.price.USD\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tresult = [...list];\r\n\t}\r\n\r\n\treturn reversed ? result.reverse() : result;\r\n};\r\n"],"names":["Chart","register","Tooltip","LineElement","LineController","CategoryScale","LinearScale","PointElement","dayjs","minMax","YearSlider","observer","_ref","range","defaultRange","setRange","setDefaultRange","isAccurate","setIsAccurate","list","listStore","isSmallScreen","userStore","value","setValue","useState","sliderRange","useMemo","_dayjs$min","_dayjs$max","mappedList","map","item","date","valueOf","marks","start","startOf","end","endOf","currentDate","isBefore","isSame","month","format","add","useEffect","handleRangeChanging","useCallback","values","valuesByMonth","getValuesByMonth","data","labels","Array","length","fill","datasets","diff","_jsxs","Flex","gap","align","children","_jsx","Segmented","size","defaultValue","onChange","options","label","ZoomOutOutlined","ZoomInOutlined","disabled","vertical","style","inlineSize","Line","plugins","legend","display","tooltip","enabled","scales","x","grid","y","elements","point","radius","line","cubicInterpolationMode","borderColor","aspectRatio","Slider","step","dots","formatter","_Fragment","min","max","onChangeComplete","memo","prices","rates","arguments","undefined","constants","baseCurrency","id","categories","getCategoryById","categoryStore","Select","allowClear","minInlineSize","suffixIcon","EditFilled","color","category","Option","name","opened","initialItem","toggleOpened","submitItem","currency","setCurrency","currencyRates","userOptions","optionsStore","language","currentItem","setCurrentItem","handleTitleChange","event","target","prevItem","title","handleDateChange","handleCategoryChange","categoryId","handlePriceChange","updatedItem","price","Number","calculatePrices","submitItemWithEnter","key","window","removeEventListener","addEventListener","TitleJSX","Input","required","type","onInput","PriceJSX","Math","round","CurrencyJSX","CurrencySelect","DateJSX","DatePicker","minDate","startDate","maxDate","CategoryJSX","CategorySelect","Modal","open","okButtonProps","cancelButtonProps","onOk","onCancel","okText","CheckOutlined","cancelText","CloseOutlined","Form","layout","Item","languages","Row","Col","span","dateAndCat","mode","replaceItem","removeItem","isItemDeleting","setIsItemDeleting","deleteValue","setDeleteValue","isModalOpened","setIsModalOpened","toggleIsItemDeleting","prevValue","deleteId","setInterval","newValue","deleteDelay","clearInterval","toggleIsModalOpened","updateCurrentItem","JSON","stringify","justify","opacity","Typography","Text","strong","ellipsis","noTitle","Title","level","margin","Statistic","scale","itemCategory","Tag","filter","getSymbolAndPrice","DeleteJSX","onClick","DeleteOutlined","ProgressJSX","Progress","showInfo","percent","status","EditJSX","EditOutlined","ActionsJSX","ItemModal","Card","bordered","actions","delay","debouncedValue","setDebouncedValue","timerId","setTimeout","clearTimeout","ItemList","filteredList","loading","width","listOptions","debouncedOptions","useDebounce","colNumber","setColNumber","listToShowOnCurrentPage","getListToShowOnCurrentPage","splittedList","result","row","forEach","col","push","LargeSpin","Empty","image","PRESENTED_IMAGE_SIMPLE","description","List","ListItem","gutter","addItem","emptyItem","newItem","setNewItem","clearItem","addNewItem","Button","PlusOutlined","handleCategoriesToFilterChange","showSearch","tagRender","props","_categories$find","onClose","find","onMouseDown","preventDefault","stopPropagation","closable","marginInlineEnd","categoriesToFilter","setIsSortingReversed","handleSortAlgorithmChanging","alignSelf","isSortingReversed","SortDescendingOutlined","SortAscendingOutlined","sortingAlgorithm","onDoubleClick","CalendarOutlined","FontColorsOutlined","DollarOutlined","handleModeChanging","MenuOutlined","TableOutlined","total","resetSettings","handlePageChanging","pageSize","currentPage","isSettingsChanged","defaultPageSize","NewItemButton","CategoriesSelect","SortSelect","ModeSelect","ReloadOutlined","Divider","Pagination","showSizeChanger","pageSizeOptions","current","onShowSizeChange","Expenses","getFilteredList","Selectors","isBetween","sortBy","some","startIndex","endIndex","slice","getValuesForBarDiagram","year","index","getValuesForPieDiagram","indexOfCategory","findIndex","getTotalInCurrentRange","floor","reduce","acc","endDate","isAfter","valueForMonth","USD","_Math$round","formattedPrice","toString","split","reverse","symbol","join","reversed","sort","prev","next","localeCompare","sensitivity"],"sourceRoot":""}