{"version":3,"file":"static/js/401.3d8e7992.chunk.js","mappings":"wLAWA,MAgBA,GAhBwCA,EAAAA,EAAAA,KAASC,IAA0B,IAAzB,MAAEC,EAAK,SAAEC,GAAUF,EACpE,MAAM,cAAEG,GAAkBC,EAAAA,UAE1B,OACCC,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CACNC,KAAMJ,EAAgB,QAAU,SAChCF,MAAOA,EACPC,SAAUA,EAASM,SAAA,EAEnBC,EAAAA,EAAAA,KAACH,EAAAA,EAAOI,OAAM,CAACT,MAAM,MAAKO,SAAC,SAC3BC,EAAAA,EAAAA,KAACH,EAAAA,EAAOI,OAAM,CAACT,MAAM,MAAKO,SAAC,SAC3BC,EAAAA,EAAAA,KAACH,EAAAA,EAAOI,OAAM,CAACT,MAAM,MAAKO,SAAC,UACnB,G,2GCjBX,MAgBA,GAhBiCT,EAAAA,EAAAA,KAAS,KACzC,MAAM,cAAEI,GAAkBC,EAAAA,WACpB,YAAEO,EAAW,YAAEC,GAAgBC,EAAAA,aAErC,OACCR,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CACNC,KAAMJ,EAAgB,QAAU,SAChCF,MAAOU,EAAYG,SACnBZ,SAAUU,EAAYJ,SAAA,EAEtBC,EAAAA,EAAAA,KAACH,EAAAA,EAAOI,OAAM,CAACT,MAAM,KAAIO,SAAC,aAC1BC,EAAAA,EAAAA,KAACH,EAAAA,EAAOI,OAAM,CAACT,MAAM,KAAIO,SAAC,iDAClB,I,4CCVX,MAsCA,GAtC2BT,EAAAA,EAAAA,KAAS,KACnC,MAAM,YAAEY,EAAW,YAAEI,GAAgBF,EAAAA,cAE/B,SAAEC,EAAQ,SAAEE,GAAaL,EAE/B,OACCF,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACC,QAAQ,SAAQV,UACrBH,EAAAA,EAAAA,MAACY,EAAAA,EAAI,CACJE,UAAQ,EACRC,IAAK,GACLC,MAAO,CAAEC,WAAY,QAASd,SAAA,EAE9BH,EAAAA,EAAAA,MAACY,EAAAA,EAAI,CACJE,UAAQ,EACRD,QAAQ,gBACRK,MAAM,UACNH,IAAK,EAAEZ,SAAA,EAEPC,EAAAA,EAAAA,KAACe,EAAAA,EAAWC,KAAI,CAAAjB,SAAEkB,EAAAA,EAAUZ,SAASA,MACrCL,EAAAA,EAAAA,KAACkB,EAAc,QAEhBtB,EAAAA,EAAAA,MAACY,EAAAA,EAAI,CACJE,UAAQ,EACRD,QAAQ,gBACRK,MAAM,UACNH,IAAK,EAAEZ,SAAA,EAEPC,EAAAA,EAAAA,KAACe,EAAAA,EAAWC,KAAI,CAAAjB,SAAEkB,EAAAA,EAAUV,SAASF,MACrCL,EAAAA,EAAAA,KAACmB,EAAAA,EAAc,CACd3B,MAAOe,EACPd,SAAUa,WAIP,G","sources":["components/CurrencySelect.tsx","components/LanguageSelect.tsx","pages/Settings.tsx"],"sourcesContent":["import { Select } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { Dispatch, SetStateAction } from 'react';\r\nimport { userStore } from 'utils/userStore';\r\n\r\ninterface Props {\r\n\tvalue: string;\r\n\tonChange: (event: any) => void;\r\n\tsetCurrency?: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nconst CurrencySelect: React.FC<Props> = observer(({ value, onChange }) => {\r\n\tconst { isSmallScreen } = userStore;\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tvalue={value}\r\n\t\t\tonChange={onChange}\r\n\t\t>\r\n\t\t\t<Select.Option value='USD'>USD</Select.Option>\r\n\t\t\t<Select.Option value='EUR'>EUR</Select.Option>\r\n\t\t\t<Select.Option value='RUB'>RUB</Select.Option>\r\n\t\t</Select>\r\n\t);\r\n});\r\n\r\nexport default CurrencySelect;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { userStore } from 'utils/userStore';\r\nimport { Select } from 'antd';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst LanguageSelect: React.FC = observer(() => {\r\n\tconst { isSmallScreen } = userStore;\r\n\tconst { userOptions, setLanguage } = optionsStore;\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tsize={isSmallScreen ? 'small' : 'middle'}\r\n\t\t\tvalue={userOptions.language}\r\n\t\t\tonChange={setLanguage}\r\n\t\t>\r\n\t\t\t<Select.Option value='en'>English</Select.Option>\r\n\t\t\t<Select.Option value='ru'>Русский</Select.Option>\r\n\t\t</Select>\r\n\t);\r\n});\r\n\r\nexport default LanguageSelect;\r\n","import React from 'react';\r\nimport LanguageSelect from '../components/LanguageSelect';\r\nimport CurrencySelect from '../components/CurrencySelect';\r\nimport { Flex, Typography } from 'antd';\r\nimport { observer } from 'mobx-react-lite';\r\nimport languages from 'settings/languages';\r\nimport { optionsStore } from 'utils/optionsStore';\r\n\r\nconst Settings: React.FC = observer(() => {\r\n\tconst { userOptions, setCurrency } = optionsStore;\r\n\r\n\tconst { language, currency } = userOptions;\r\n\r\n\treturn (\r\n\t\t<Flex justify='center'>\r\n\t\t\t<Flex\r\n\t\t\t\tvertical\r\n\t\t\t\tgap={16}\r\n\t\t\t\tstyle={{ inlineSize: '10em' }}\r\n\t\t\t>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\tjustify='space-between'\r\n\t\t\t\t\talign='stretch'\r\n\t\t\t\t\tgap={8}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Typography.Text>{languages.language[language]}</Typography.Text>\r\n\t\t\t\t\t<LanguageSelect />\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tvertical\r\n\t\t\t\t\tjustify='space-between'\r\n\t\t\t\t\talign='stretch'\r\n\t\t\t\t\tgap={8}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Typography.Text>{languages.currency[language]}</Typography.Text>\r\n\t\t\t\t\t<CurrencySelect\r\n\t\t\t\t\t\tvalue={currency}\r\n\t\t\t\t\t\tonChange={setCurrency}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Flex>\r\n\t\t</Flex>\r\n\t);\r\n});\r\n\r\nexport default Settings;\r\n"],"names":["observer","_ref","value","onChange","isSmallScreen","userStore","_jsxs","Select","size","children","_jsx","Option","userOptions","setLanguage","optionsStore","language","setCurrency","currency","Flex","justify","vertical","gap","style","inlineSize","align","Typography","Text","languages","LanguageSelect","CurrencySelect"],"sourceRoot":""}